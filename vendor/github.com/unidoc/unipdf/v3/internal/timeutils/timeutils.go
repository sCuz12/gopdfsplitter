//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package timeutils ;import (_d "errors";_g "fmt";_c "regexp";_fa "strconv";_f "time";);func ParsePdfTime (pdfTime string )(_f .Time ,error ){_cc :=_eg .FindAllStringSubmatch (pdfTime ,1);if len (_cc )< 1{if len (pdfTime )> 0&&pdfTime [0]!='D'{pdfTime =_g .Sprintf ("\u0044\u003a\u0025\u0073",pdfTime );
return ParsePdfTime (pdfTime );};return _f .Time {},_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",pdfTime );};if len (_cc [0])!=10{return _f .Time {},_d .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_ae ,_ :=_fa .ParseInt (_cc [0][1],10,32);_aee ,_ :=_fa .ParseInt (_cc [0][2],10,32);_df ,_ :=_fa .ParseInt (_cc [0][3],10,32);_bb ,_ :=_fa .ParseInt (_cc [0][4],10,32);_ba ,_ :=_fa .ParseInt (_cc [0][5],10,32);_ec ,_ :=_fa .ParseInt (_cc [0][6],10,32);
var (_baed byte ;_bf int64 ;_db int64 ;);if len (_cc [0][7])> 0{_baed =_cc [0][7][0];}else {_baed ='+';};if len (_cc [0][8])> 0{_bf ,_ =_fa .ParseInt (_cc [0][8],10,32);}else {_bf =0;};if len (_cc [0][9])> 0{_db ,_ =_fa .ParseInt (_cc [0][9],10,32);}else {_db =0;
};_fdg :=int (_bf *60*60+_db *60);switch _baed {case '-':_fdg =-_fdg ;case 'Z':_fdg =0;};_cd :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_baed ,_bf ,_db );_gce :=_f .FixedZone (_cd ,_fdg );return _f .Date (int (_ae ),_f .Month (_aee ),int (_df ),int (_bb ),int (_ba ),int (_ec ),0,_gce ),nil ;
};var _eg =_c .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func FormatPdfTime (in _f .Time )string {_cf :=in .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_cb ,_ :=_fa .ParseInt (_cf [1:3],10,32);_gb ,_ :=_fa .ParseInt (_cf [4:6],10,32);_gg :=int64 (in .Year ());_ac :=int64 (in .Month ());_ab :=int64 (in .Day ());
_fe :=int64 (in .Hour ());_b :=int64 (in .Minute ());_gbg :=int64 (in .Second ());_dc :=_cf [0];return _g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gg ,_ac ,_ab ,_fe ,_b ,_gbg ,_dc ,_cb ,_gb );
};