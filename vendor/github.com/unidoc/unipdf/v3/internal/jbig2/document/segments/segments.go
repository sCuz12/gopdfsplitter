//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_f "encoding/binary";_ca "errors";_gg "fmt";_gd "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/bitwise";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ge "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cad "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_bde "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_e "golang.org/x/xerrors";_be "image";_gf "io";_b "math";_bd "strings";_c "time";);func (_dgb *GenericRegion )copyLineAbove (_fdgd int )error {_bcg :=_fdgd *_dgb .Bitmap .RowStride ;
_dcb :=_bcg -_dgb .Bitmap .RowStride ;for _bcbe :=0;_bcbe < _dgb .Bitmap .RowStride ;_bcbe ++{_cagd ,_gegd :=_dgb .Bitmap .GetByte (_dcb );if _gegd !=nil {return _gegd ;};_dcb ++;if _gegd =_dgb .Bitmap .SetByte (_bcg ,_cagd );_gegd !=nil {return _gegd ;
};_bcg ++;};return nil ;};func (_gce *EndOfStripe )parseHeader ()error {_ff ,_fe :=_gce ._ggb .ReadBits (32);if _fe !=nil {return _fe ;};_gce ._dda =int (_ff &_b .MaxInt32 );return nil ;};func (_ggde *GenericRefinementRegion )readAtPixels ()error {_ggde .GrAtX =make ([]int8 ,2);
_ggde .GrAtY =make ([]int8 ,2);_acf ,_ffac :=_ggde ._cgb .ReadByte ();if _ffac !=nil {return _ffac ;};_ggde .GrAtX [0]=int8 (_acf );_acf ,_ffac =_ggde ._cgb .ReadByte ();if _ffac !=nil {return _ffac ;};_ggde .GrAtY [0]=int8 (_acf );_acf ,_ffac =_ggde ._cgb .ReadByte ();
if _ffac !=nil {return _ffac ;};_ggde .GrAtX [1]=int8 (_acf );_acf ,_ffac =_ggde ._cgb .ReadByte ();if _ffac !=nil {return _ffac ;};_ggde .GrAtY [1]=int8 (_acf );return nil ;};func (_abfc *SymbolDictionary )readNumberOfNewSymbols ()error {_eddc ,_dcgd :=_abfc ._cgad .ReadBits (32);
if _dcgd !=nil {return _dcgd ;};_abfc .NumberOfNewSymbols =uint32 (_eddc &_b .MaxUint32 );return nil ;};func (_bdge *GenericRegion )Size ()int {return _bdge .RegionSegment .Size ()+1+2*len (_bdge .GBAtX )};func (_fdbd *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_faaac ,_aacd :=_fdbd ._acea .ReadBit ();
if _aacd !=nil {return _aacd ;};if _faaac ==1{_fdbd ._dec =true ;};return nil ;};func (_gbeea *HalftoneRegion )GetRegionBitmap ()(*_gc .Bitmap ,error ){if _gbeea .HalftoneRegionBitmap !=nil {return _gbeea .HalftoneRegionBitmap ,nil ;};var _bee error ;_gbeea .HalftoneRegionBitmap =_gc .New (int (_gbeea .RegionSegment .BitmapWidth ),int (_gbeea .RegionSegment .BitmapHeight ));
if _gbeea .Patterns ==nil ||len (_gbeea .Patterns )==0{_gbeea .Patterns ,_bee =_gbeea .GetPatterns ();if _bee !=nil {return nil ,_bee ;};};if _gbeea .HDefaultPixel ==1{_gbeea .HalftoneRegionBitmap .SetDefaultPixel ();};_geag :=_b .Ceil (_b .Log (float64 (len (_gbeea .Patterns )))/_b .Log (2));
_aggb :=int (_geag );var _gegdd [][]int ;_gegdd ,_bee =_gbeea .grayScaleDecoding (_aggb );if _bee !=nil {return nil ,_bee ;};if _bee =_gbeea .renderPattern (_gegdd );_bee !=nil {return nil ,_bee ;};return _gbeea .HalftoneRegionBitmap ,nil ;};func (_dbdaf *TextRegion )readHuffmanFlags ()error {var (_afeg int ;
_ddbe uint64 ;_bbff error ;);_ ,_bbff =_dbdaf ._dcbba .ReadBit ();if _bbff !=nil {return _bbff ;};_afeg ,_bbff =_dbdaf ._dcbba .ReadBit ();if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffRSize =int8 (_afeg );_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);if _bbff !=nil {return _bbff ;
};_dbdaf .SbHuffRDY =int8 (_ddbe )&0xf;_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffRDX =int8 (_ddbe )&0xf;_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffRDHeight =int8 (_ddbe )&0xf;
_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffRDWidth =int8 (_ddbe )&0xf;_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffDT =int8 (_ddbe )&0xf;_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);
if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffDS =int8 (_ddbe )&0xf;_ddbe ,_bbff =_dbdaf ._dcbba .ReadBits (2);if _bbff !=nil {return _bbff ;};_dbdaf .SbHuffFS =int8 (_ddbe )&0xf;return nil ;};func (_aafb *RegionSegment )String ()string {_cafcf :=&_bd .Builder {};
_cafcf .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_cafcf .WriteString (_gg .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aafb .BitmapWidth ,_aafb .BitmapHeight ));
_cafcf .WriteString (_gg .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aafb .XLocation ,_aafb .YLocation ));_cafcf .WriteString (_gg .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aafb .CombinaionOperator ));
return _cafcf .String ();};func _eefe (_ceeb *_d .Reader ,_bbec *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_cgb :_ceeb ,RegionInfo :NewRegionSegment (_ceeb ),_cbc :_bbec ,_cg :&template0 {},_cb :&template1 {}};};func (_caef *TextRegion )getUserTable (_fbfee int )(_fc .Tabler ,error ){const _eagce ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _cdcf int ;for _ ,_afeb :=range _caef .Header .RTSegments {if _afeb .Type ==53{if _cdcf ==_fbfee {_cgedb ,_ebbe :=_afeb .GetSegmentData ();if _ebbe !=nil {return nil ,_ebbe ;};_bagg ,_dbbeg :=_cgedb .(*TableSegment );if !_dbbeg {_gd .Log .Debug (_gg .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_afeb .SegmentNumber ));
return nil ,_bde .Error (_eagce ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _fc .NewEncodedTable (_bagg );};_cdcf ++;};};return nil ,nil ;};func (_egfa *SymbolDictionary )getUserTable (_dccb int )(_fc .Tabler ,error ){var _add int ;for _ ,_cfae :=range _egfa .Header .RTSegments {if _cfae .Type ==53{if _add ==_dccb {_aeagg ,_bdfa :=_cfae .GetSegmentData ();
if _bdfa !=nil {return nil ,_bdfa ;};_fecg :=_aeagg .(_fc .BasicTabler );return _fc .NewEncodedTable (_fecg );};_add ++;};};return nil ,nil ;};func (_beef *PageInformationSegment )encodeFlags (_gbde _d .BinaryWriter )(_eafb error ){const _afa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eafb =_gbde .SkipBits (1);_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _bffd int ;if _beef .CombinationOperatorOverrideAllowed (){_bffd =1;};if _eafb =_gbde .WriteBit (_bffd );
_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_bffd =0;if _beef ._dec {_bffd =1;
};if _eafb =_gbde .WriteBit (_bffd );_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eafb =_gbde .WriteBit ((int (_beef ._fgad )>>1)&0x01);
_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eafb =_gbde .WriteBit (int (_beef ._fgad )&0x01);
_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_bffd =int (_beef .DefaultPixelValue );
if _eafb =_gbde .WriteBit (_bffd );_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_bffd =0;if _beef ._caab {_bffd =1;
};if _eafb =_gbde .WriteBit (_bffd );_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_bffd =0;if _beef .IsLossless {_bffd =1;};if _eafb =_gbde .WriteBit (_bffd );
_eafb !=nil {return _bde .Wrap (_eafb ,_afa ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cabb *GenericRegion )overrideAtTemplate1 (_bcae ,_fcfc ,_abbc ,_gee ,_fbae int )int {_bcae &=0x1FF7;
if _cabb .GBAtY [0]==0&&_cabb .GBAtX [0]>=-int8 (_fbae ){_bcae |=(_gee >>uint (7-(int8 (_fbae )+_cabb .GBAtX [0]))&0x1)<<3;}else {_bcae |=int (_cabb .getPixel (_fcfc +int (_cabb .GBAtX [0]),_abbc +int (_cabb .GBAtY [0])))<<3;};return _bcae ;};func (_feaf *GenericRegion )String ()string {_fcbe :=&_bd .Builder {};
_fcbe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fcbe .WriteString (_feaf .RegionSegment .String ()+"\u000a");_fcbe .WriteString (_gg .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_feaf .UseExtTemplates ));
_fcbe .WriteString (_gg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_feaf .IsTPGDon ));_fcbe .WriteString (_gg .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_feaf .GBTemplate ));
_fcbe .WriteString (_gg .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_feaf .IsMMREncoded ));_fcbe .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_feaf .GBAtX ));
_fcbe .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_feaf .GBAtY ));_fcbe .WriteString (_gg .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_feaf .GBAtOverride ));
return _fcbe .String ();};func (_gefe *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gefe ._babb ==nil {var (_dfad int ;_ebba error ;);if _gefe .SdHuffDecodeHeightSelection ==3{_dfad ++;};if _gefe .SdHuffDecodeWidthSelection ==3{_dfad ++;};_gefe ._babb ,_ebba =_gefe .getUserTable (_dfad );
if _ebba !=nil {return 0,_ebba ;};};return _gefe ._babb .Decode (_gefe ._cgad );};func (_efag *TextRegion )decodeStripT ()(_adaee int64 ,_dacc error ){if _efag .IsHuffmanEncoded {if _efag .SbHuffDT ==3{if _efag ._aafc ==nil {var _dbcd int ;if _efag .SbHuffFS ==3{_dbcd ++;
};if _efag .SbHuffDS ==3{_dbcd ++;};_efag ._aafc ,_dacc =_efag .getUserTable (_dbcd );if _dacc !=nil {return 0,_dacc ;};};_adaee ,_dacc =_efag ._aafc .Decode (_efag ._dcbba );if _dacc !=nil {return 0,_dacc ;};}else {var _bageg _fc .Tabler ;_bageg ,_dacc =_fc .GetStandardTable (11+int (_efag .SbHuffDT ));
if _dacc !=nil {return 0,_dacc ;};_adaee ,_dacc =_bageg .Decode (_efag ._dcbba );if _dacc !=nil {return 0,_dacc ;};};}else {var _abgb int32 ;_abgb ,_dacc =_efag ._daa .DecodeInt (_efag ._ccfg );if _dacc !=nil {return 0,_dacc ;};_adaee =int64 (_abgb );};
_adaee *=int64 (-_efag .SbStrips );return _adaee ,nil ;};func (_dfee *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dfee .SdHuffDecodeHeightSelection {case 0:_adeg ,_ecdd :=_fc .GetStandardTable (4);if _ecdd !=nil {return 0,_ecdd ;
};return _adeg .Decode (_dfee ._cgad );case 1:_cbfb ,_gcefc :=_fc .GetStandardTable (5);if _gcefc !=nil {return 0,_gcefc ;};return _cbfb .Decode (_dfee ._cgad );case 3:if _dfee ._dbfe ==nil {_bfg ,_efdb :=_fc .GetStandardTable (0);if _efdb !=nil {return 0,_efdb ;
};_dfee ._dbfe =_bfg ;};return _dfee ._dbfe .Decode (_dfee ._cgad );};return 0,nil ;};func (_cgfbe *TextRegion )computeSymbolCodeLength ()error {if _cgfbe .IsHuffmanEncoded {return _cgfbe .symbolIDCodeLengths ();};_cgfbe ._ffaeb =int8 (_b .Ceil (_b .Log (float64 (_cgfbe .NumberOfSymbols ))/_b .Log (2)));
return nil ;};func (_debc *Header )writeSegmentDataLength (_fagbe _d .BinaryWriter )(_ffgb int ,_edcgf error ){_aebe :=make ([]byte ,4);_f .BigEndian .PutUint32 (_aebe ,uint32 (_debc .SegmentDataLength ));if _ffgb ,_edcgf =_fagbe .Write (_aebe );_edcgf !=nil {return 0,_bde .Wrap (_edcgf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _ffgb ,nil ;};func (_ggcd *TextRegion )parseHeader ()error {var _accg error ;_gd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _accg !=nil {_gd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_accg );
}else {_gd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _accg =_ggcd .RegionInfo .parseHeader ();
_accg !=nil {return _accg ;};if _accg =_ggcd .readRegionFlags ();_accg !=nil {return _accg ;};if _ggcd .IsHuffmanEncoded {if _accg =_ggcd .readHuffmanFlags ();_accg !=nil {return _accg ;};};if _accg =_ggcd .readUseRefinement ();_accg !=nil {return _accg ;
};if _accg =_ggcd .readAmountOfSymbolInstances ();_accg !=nil {return _accg ;};if _accg =_ggcd .getSymbols ();_accg !=nil {return _accg ;};if _accg =_ggcd .computeSymbolCodeLength ();_accg !=nil {return _accg ;};if _accg =_ggcd .checkInput ();_accg !=nil {return _accg ;
};_gd .Log .Trace ("\u0025\u0073",_ggcd .String ());return nil ;};var (_cgcd Segmenter ;_bcbb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _cgcd },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _cgcd },TProfiles :func ()Segmenter {return _cgcd },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _cgcd },TBitmap :func ()Segmenter {return _cgcd }};
);func (_cddg *PatternDictionary )Init (h *Header ,r *_d .Reader )error {_cddg ._abegf =r ;return _cddg .parseHeader ();};func (_bfb *GenericRefinementRegion )decodeSLTP ()(int ,error ){_bfb .Template .setIndex (_bfb ._a );return _bfb ._bea .DecodeBit (_bfb ._a );
};func (_begf *PatternDictionary )parseHeader ()error {_gd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_facg :=_begf ._abegf .ReadBits (5);if _facg !=nil {return _facg ;};if _facg =_begf .readTemplate ();_facg !=nil {return _facg ;};if _facg =_begf .readIsMMREncoded ();_facg !=nil {return _facg ;};if _facg =_begf .readPatternWidthAndHeight ();_facg !=nil {return _facg ;
};if _facg =_begf .readGrayMax ();_facg !=nil {return _facg ;};if _facg =_begf .computeSegmentDataStructure ();_facg !=nil {return _facg ;};return _begf .checkInput ();};func (_bffa *Header )readHeaderLength (_cded *_d .Reader ,_bef int64 ){_bffa .HeaderLength =_cded .AbsolutePosition ()-_bef ;
};type SymbolDictionary struct{_cgad *_d .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_acdbd bool ;_cdcb bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;
IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bcgg uint32 ;_dcfaf []*_gc .Bitmap ;_bdbb uint32 ;_bae []*_gc .Bitmap ;_dbfe _fc .Tabler ;_cgee _fc .Tabler ;
_babb _fc .Tabler ;_agce _fc .Tabler ;_cgef []*_gc .Bitmap ;_ceea []*_gc .Bitmap ;_efcac *_ge .Decoder ;_ffag *TextRegion ;_ceec *GenericRegion ;_gaea *GenericRefinementRegion ;_dcbd *_ge .DecoderStats ;_acbe *_ge .DecoderStats ;_geffcb *_ge .DecoderStats ;
_agad *_ge .DecoderStats ;_fbgb *_ge .DecoderStats ;_gcgc *_ge .DecoderStats ;_fgbe *_ge .DecoderStats ;_fdcg *_ge .DecoderStats ;_ecfb *_ge .DecoderStats ;_dffe int8 ;_cdgf *_gc .Bitmaps ;_gecb []int ;_cgab map[int ]int ;_gfef bool ;};func (_gdaa *TableSegment )parseHeader ()error {var (_adae int ;
_cdaa uint64 ;_gadff error ;);_adae ,_gadff =_gdaa ._aagb .ReadBit ();if _gadff !=nil {return _gadff ;};if _adae ==1{return _gg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_adae );
};if _cdaa ,_gadff =_gdaa ._aagb .ReadBits (3);_gadff !=nil {return _gadff ;};_gdaa ._gfedg =(int32 (_cdaa )+1)&0xf;if _cdaa ,_gadff =_gdaa ._aagb .ReadBits (3);_gadff !=nil {return _gadff ;};_gdaa ._fcbd =(int32 (_cdaa )+1)&0xf;if _cdaa ,_gadff =_gdaa ._aagb .ReadBits (32);
_gadff !=nil {return _gadff ;};_gdaa ._accc =int32 (_cdaa &_b .MaxInt32 );if _cdaa ,_gadff =_gdaa ._aagb .ReadBits (32);_gadff !=nil {return _gadff ;};_gdaa ._dgef =int32 (_cdaa &_b .MaxInt32 );return nil ;};func (_edde *Header )readSegmentDataLength (_dbdf *_d .Reader )(_ddfa error ){_edde .SegmentDataLength ,_ddfa =_dbdf .ReadBits (32);
if _ddfa !=nil {return _ddfa ;};_edde .SegmentDataLength &=_b .MaxInt32 ;return nil ;};func (_babf *Header )writeSegmentPageAssociation (_ggabc _d .BinaryWriter )(_ddada int ,_egfe error ){const _aade ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _babf .pageSize ()!=4{if _egfe =_ggabc .WriteByte (byte (_babf .PageAssociation ));_egfe !=nil {return 0,_bde .Wrap (_egfe ,_aade ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cdbb :=make ([]byte ,4);
_f .BigEndian .PutUint32 (_cdbb ,uint32 (_babf .PageAssociation ));if _ddada ,_egfe =_ggabc .Write (_cdbb );_egfe !=nil {return 0,_bde .Wrap (_egfe ,_aade ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ddada ,nil ;
};func (_faeed *SymbolDictionary )Init (h *Header ,r *_d .Reader )error {_faeed .Header =h ;_faeed ._cgad =r ;return _faeed .parseHeader ();};func (_dffa *Header )readSegmentPageAssociation (_beab Documenter ,_dbca *_d .Reader ,_agc uint64 ,_acdf ...int )(_ggc error ){const _cbcfb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_dffa .PageAssociationFieldSize {_bbcg ,_bffb :=_dbca .ReadBits (8);if _bffb !=nil {return _bde .Wrap (_bffb ,_cbcfb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dffa .PageAssociation =int (_bbcg &0xFF);}else {_cbd ,_bafd :=_dbca .ReadBits (32);
if _bafd !=nil {return _bde .Wrap (_bafd ,_cbcfb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dffa .PageAssociation =int (_cbd &_b .MaxInt32 );};if _agc ==0{return nil ;};if _dffa .PageAssociation !=0{_cca ,_cfbf :=_beab .GetPage (_dffa .PageAssociation );
if _cfbf !=nil {return _bde .Wrap (_cfbf ,_cbcfb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _bffe int ;for _egbg :=uint64 (0);_egbg < _agc ;_egbg ++{_bffe =_acdf [_egbg ];
_dffa .RTSegments [_egbg ],_cfbf =_cca .GetSegment (_bffe );if _cfbf !=nil {var _ebea error ;_dffa .RTSegments [_egbg ],_ebea =_beab .GetGlobalSegment (_bffe );if _ebea !=nil {return _bde .Wrapf (_cfbf ,_cbcfb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_dffa .PageAssociation );
};};};return nil ;};for _cegf :=uint64 (0);_cegf < _agc ;_cegf ++{_dffa .RTSegments [_cegf ],_ggc =_beab .GetGlobalSegment (_acdf [_cegf ]);if _ggc !=nil {return _bde .Wrapf (_ggc ,_cbcfb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_acdf [_cegf ]);
};};return nil ;};func (_cddc *GenericRegion )setParametersMMR (_fdf bool ,_fefb ,_cgbd int64 ,_gbee ,_fbge uint32 ,_efgg byte ,_cgbc ,_feacf bool ,_dff ,_effg []int8 ){_cddc .DataOffset =_fefb ;_cddc .DataLength =_cgbd ;_cddc .RegionSegment =&RegionSegment {};
_cddc .RegionSegment .BitmapHeight =_gbee ;_cddc .RegionSegment .BitmapWidth =_fbge ;_cddc .GBTemplate =_efgg ;_cddc .IsMMREncoded =_fdf ;_cddc .IsTPGDon =_cgbc ;_cddc .GBAtX =_dff ;_cddc .GBAtY =_effg ;};func (_aac Type )String ()string {switch _aac {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_adge *SymbolDictionary )addSymbol (_bce Regioner )error {_eabe ,_dgbf :=_bce .GetRegionBitmap ();
if _dgbf !=nil {return _dgbf ;};_adge ._bae [_adge ._bdbb ]=_eabe ;_adge ._ceea =append (_adge ._ceea ,_eabe );_gd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_eabe );
return nil ;};func _cedg (_ece int )int {if _ece ==0{return 0;};_ece |=_ece >>1;_ece |=_ece >>2;_ece |=_ece >>4;_ece |=_ece >>8;_ece |=_ece >>16;return (_ece +1)>>1;};func (_bcge *GenericRegion )setParametersWithAt (_aae bool ,_egdg byte ,_ccba ,_dcfe bool ,_ecda ,_dcfa []int8 ,_efdea ,_deba uint32 ,_cbbe *_ge .DecoderStats ,_gege *_ge .Decoder ){_bcge .IsMMREncoded =_aae ;
_bcge .GBTemplate =_egdg ;_bcge .IsTPGDon =_ccba ;_bcge .GBAtX =_ecda ;_bcge .GBAtY =_dcfa ;_bcge .RegionSegment .BitmapHeight =_deba ;_bcge .RegionSegment .BitmapWidth =_efdea ;_bcge ._gfed =nil ;_bcge .Bitmap =nil ;if _cbbe !=nil {_bcge ._ead =_cbbe ;
};if _gege !=nil {_bcge ._ace =_gege ;};_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bcge );
};func (_dba *GenericRegion )readGBAtPixels (_bcdd int )error {const _abgg ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dba .GBAtX =make ([]int8 ,_bcdd );_dba .GBAtY =make ([]int8 ,_bcdd );for _ffb :=0;_ffb < _bcdd ;
_ffb ++{_aef ,_dcfg :=_dba ._cbce .ReadByte ();if _dcfg !=nil {return _bde .Wrapf (_dcfg ,_abgg ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ffb );};_dba .GBAtX [_ffb ]=int8 (_aef );_aef ,_dcfg =_dba ._cbce .ReadByte ();if _dcfg !=nil {return _bde .Wrapf (_dcfg ,_abgg ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ffb );
};_dba .GBAtY [_ffb ]=int8 (_aef );};return nil ;};func (_fcbc *Header )readHeaderFlags ()error {const _faaa ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_aecf ,_cbcfc :=_fcbc .Reader .ReadBit ();if _cbcfc !=nil {return _bde .Wrap (_cbcfc ,_faaa ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _aecf !=0{_fcbc .RetainFlag =true ;};_aecf ,_cbcfc =_fcbc .Reader .ReadBit ();if _cbcfc !=nil {return _bde .Wrap (_cbcfc ,_faaa ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _aecf !=0{_fcbc .PageAssociationFieldSize =true ;
};_gffb ,_cbcfc :=_fcbc .Reader .ReadBits (6);if _cbcfc !=nil {return _bde .Wrap (_cbcfc ,_faaa ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_fcbc .Type =Type (int (_gffb ));return nil ;};func (_dfba *HalftoneRegion )grayScaleDecoding (_dbac int )([][]int ,error ){var (_ggge []int8 ;
_bdf []int8 ;);if !_dfba .IsMMREncoded {_ggge =make ([]int8 ,4);_bdf =make ([]int8 ,4);if _dfba .HTemplate <=1{_ggge [0]=3;}else if _dfba .HTemplate >=2{_ggge [0]=2;};_bdf [0]=-1;_ggge [1]=-3;_bdf [1]=-1;_ggge [2]=2;_bdf [2]=-2;_ggge [3]=-2;_bdf [3]=-2;
};_ega :=make ([]*_gc .Bitmap ,_dbac );_fbb :=NewGenericRegion (_dfba ._faa );_fbb .setParametersMMR (_dfba .IsMMREncoded ,_dfba .DataOffset ,_dfba .DataLength ,_dfba .HGridHeight ,_dfba .HGridWidth ,_dfba .HTemplate ,false ,_dfba .HSkipEnabled ,_ggge ,_bdf );
_cffb :=_dbac -1;var _efa error ;_ega [_cffb ],_efa =_fbb .GetRegionBitmap ();if _efa !=nil {return nil ,_efa ;};for _cffb > 0{_cffb --;_fbb .Bitmap =nil ;_ega [_cffb ],_efa =_fbb .GetRegionBitmap ();if _efa !=nil {return nil ,_efa ;};if _efa =_dfba .combineGrayscalePlanes (_ega ,_cffb );
_efa !=nil {return nil ,_efa ;};};return _dfba .computeGrayScalePlanes (_ega ,_dbac );};func (_aegb *SymbolDictionary )GetDictionary ()([]*_gc .Bitmap ,error ){_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_aegb ._cgef ,_aegb ._bae );
}();if _aegb ._cgef ==nil {var _cfbff error ;if _aegb .UseRefinementAggregation {_aegb ._dffe =_aegb .getSbSymCodeLen ();};if !_aegb .IsHuffmanEncoded {if _cfbff =_aegb .setCodingStatistics ();_cfbff !=nil {return nil ,_cfbff ;};};_aegb ._bae =make ([]*_gc .Bitmap ,_aegb .NumberOfNewSymbols );
var _caaa []int ;if _aegb .IsHuffmanEncoded &&!_aegb .UseRefinementAggregation {_caaa =make ([]int ,_aegb .NumberOfNewSymbols );};if _cfbff =_aegb .setSymbolsArray ();_cfbff !=nil {return nil ,_cfbff ;};var _bgbe ,_fbeg int64 ;_aegb ._bdbb =0;for _aegb ._bdbb < _aegb .NumberOfNewSymbols {_fbeg ,_cfbff =_aegb .decodeHeightClassDeltaHeight ();
if _cfbff !=nil {return nil ,_cfbff ;};_bgbe +=_fbeg ;var _ccgb ,_ggcf uint32 ;_edfbe :=int64 (_aegb ._bdbb );for {var _bdbg int64 ;_bdbg ,_cfbff =_aegb .decodeDifferenceWidth ();if _e .Is (_cfbff ,_bb .ErrOOB ){break ;};if _cfbff !=nil {return nil ,_cfbff ;
};if _aegb ._bdbb >=_aegb .NumberOfNewSymbols {break ;};_ccgb +=uint32 (_bdbg );_ggcf +=_ccgb ;if !_aegb .IsHuffmanEncoded ||_aegb .UseRefinementAggregation {if !_aegb .UseRefinementAggregation {_cfbff =_aegb .decodeDirectlyThroughGenericRegion (_ccgb ,uint32 (_bgbe ));
if _cfbff !=nil {return nil ,_cfbff ;};}else {_cfbff =_aegb .decodeAggregate (_ccgb ,uint32 (_bgbe ));if _cfbff !=nil {return nil ,_cfbff ;};};}else if _aegb .IsHuffmanEncoded &&!_aegb .UseRefinementAggregation {_caaa [_aegb ._bdbb ]=int (_ccgb );};_aegb ._bdbb ++;
};if _aegb .IsHuffmanEncoded &&!_aegb .UseRefinementAggregation {var _fede int64 ;if _aegb .SdHuffBMSizeSelection ==0{var _adag _fc .Tabler ;_adag ,_cfbff =_fc .GetStandardTable (1);if _cfbff !=nil {return nil ,_cfbff ;};_fede ,_cfbff =_adag .Decode (_aegb ._cgad );
if _cfbff !=nil {return nil ,_cfbff ;};}else {_fede ,_cfbff =_aegb .huffDecodeBmSize ();if _cfbff !=nil {return nil ,_cfbff ;};};_aegb ._cgad .Align ();var _eeae *_gc .Bitmap ;_eeae ,_cfbff =_aegb .decodeHeightClassCollectiveBitmap (_fede ,uint32 (_bgbe ),_ggcf );
if _cfbff !=nil {return nil ,_cfbff ;};_cfbff =_aegb .decodeHeightClassBitmap (_eeae ,_edfbe ,int (_bgbe ),_caaa );if _cfbff !=nil {return nil ,_cfbff ;};};};_fdcac ,_cfbff :=_aegb .getToExportFlags ();if _cfbff !=nil {return nil ,_cfbff ;};_aegb .setExportedSymbols (_fdcac );
};return _aegb ._cgef ,nil ;};type Segmenter interface{Init (_dbbd *Header ,_edbf *_d .Reader )error ;};func (_edbgd *TextRegion )decodeRdw ()(int64 ,error ){const _agaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _edbgd .IsHuffmanEncoded {if _edbgd .SbHuffRDWidth ==3{if _edbgd ._fadd ==nil {var (_aacf int ;
_eecfb error ;);if _edbgd .SbHuffFS ==3{_aacf ++;};if _edbgd .SbHuffDS ==3{_aacf ++;};if _edbgd .SbHuffDT ==3{_aacf ++;};_edbgd ._fadd ,_eecfb =_edbgd .getUserTable (_aacf );if _eecfb !=nil {return 0,_bde .Wrap (_eecfb ,_agaf ,"");};};return _edbgd ._fadd .Decode (_edbgd ._dcbba );
};_debfe ,_afff :=_fc .GetStandardTable (14+int (_edbgd .SbHuffRDWidth ));if _afff !=nil {return 0,_bde .Wrap (_afff ,_agaf ,"");};return _debfe .Decode (_edbgd ._dcbba );};_bcfd ,_eebca :=_edbgd ._daa .DecodeInt (_edbgd ._ceba );if _eebca !=nil {return 0,_bde .Wrap (_eebca ,_agaf ,"");
};return int64 (_bcfd ),nil ;};func (_bfbfa *RegionSegment )readCombinationOperator ()error {_fdce ,_aebc :=_bfbfa ._fggf .ReadBits (3);if _aebc !=nil {return _aebc ;};_bfbfa .CombinaionOperator =_gc .CombinationOperator (_fdce &0xF);return nil ;};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_gc .Bitmap ,error );};func (_bbde *HalftoneRegion )computeSegmentDataStructure ()error {_bbde .DataOffset =_bbde ._faa .AbsolutePosition ();_bbde .DataHeaderLength =_bbde .DataOffset -_bbde .DataHeaderOffset ;_bbde .DataLength =int64 (_bbde ._faa .AbsoluteLength ())-_bbde .DataHeaderLength ;
return nil ;};func (_cdgb *PatternDictionary )readIsMMREncoded ()error {_gbacb ,_cggf :=_cdgb ._abegf .ReadBit ();if _cggf !=nil {return _cggf ;};if _gbacb !=0{_cdgb .IsMMREncoded =true ;};return nil ;};func (_fbea *Header )String ()string {_gfc :=&_bd .Builder {};
_gfc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_gfc .WriteString (_gg .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fbea .SegmentNumber ));
_gfc .WriteString (_gg .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fbea .Type ));_gfc .WriteString (_gg .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fbea .RetainFlag ));
_gfc .WriteString (_gg .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fbea .PageAssociation ));_gfc .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fbea .PageAssociationFieldSize ));
_gfc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_dcd :=range _fbea .RTSNumbers {_gfc .WriteString (_gg .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dcd ));};_gfc .WriteString (_gg .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fbea .HeaderLength ));
_gfc .WriteString (_gg .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fbea .SegmentDataLength ));_gfc .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fbea .SegmentDataStartOffset ));
return _gfc .String ();};type PatternDictionary struct{_abegf *_d .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;
Patterns []*_gc .Bitmap ;GrayMax uint32 ;};func (_eeff *Header )readDataStartOffset (_ddb *_d .Reader ,_cgbf OrganizationType ){if _cgbf ==OSequential {_eeff .SegmentDataStartOffset =uint64 (_ddb .AbsolutePosition ());};};func (_bffae *PageInformationSegment )checkInput ()error {if _bffae .PageBMHeight ==_b .MaxInt32 {if !_bffae .IsStripe {_gd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_bbad *SymbolDictionary )decodeRefinedSymbol (_cbad ,_cgce uint32 )error {var (_bbcgb int ;_ecfd ,_ffadf int32 ;);if _bbad .IsHuffmanEncoded {_fdfbd ,_bedg :=_bbad ._cgad .ReadBits (byte (_bbad ._dffe ));if _bedg !=nil {return _bedg ;
};_bbcgb =int (_fdfbd );_fabed ,_bedg :=_fc .GetStandardTable (15);if _bedg !=nil {return _bedg ;};_decb ,_bedg :=_fabed .Decode (_bbad ._cgad );if _bedg !=nil {return _bedg ;};_ecfd =int32 (_decb );_decb ,_bedg =_fabed .Decode (_bbad ._cgad );if _bedg !=nil {return _bedg ;
};_ffadf =int32 (_decb );_fabed ,_bedg =_fc .GetStandardTable (1);if _bedg !=nil {return _bedg ;};if _ ,_bedg =_fabed .Decode (_bbad ._cgad );_bedg !=nil {return _bedg ;};_bbad ._cgad .Align ();}else {_dbgdd ,_ebdf :=_bbad ._efcac .DecodeIAID (uint64 (_bbad ._dffe ),_bbad ._ecfb );
if _ebdf !=nil {return _ebdf ;};_bbcgb =int (_dbgdd );_ecfd ,_ebdf =_bbad ._efcac .DecodeInt (_bbad ._gcgc );if _ebdf !=nil {return _ebdf ;};_ffadf ,_ebdf =_bbad ._efcac .DecodeInt (_bbad ._fgbe );if _ebdf !=nil {return _ebdf ;};};if _fbfa :=_bbad .setSymbolsArray ();
_fbfa !=nil {return _fbfa ;};_aaed :=_bbad ._ceea [_bbcgb ];if _dgbc :=_bbad .decodeNewSymbols (_cbad ,_cgce ,_aaed ,_ecfd ,_ffadf );_dgbc !=nil {return _dgbc ;};if _bbad .IsHuffmanEncoded {_bbad ._cgad .Align ();};return nil ;};func (_fbac *SymbolDictionary )readNumberOfExportedSymbols ()error {_fgda ,_bbae :=_fbac ._cgad .ReadBits (32);
if _bbae !=nil {return _bbae ;};_fbac .NumberOfExportedSymbols =uint32 (_fgda &_b .MaxUint32 );return nil ;};type PageInformationSegment struct{_acea *_d .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_faee bool ;_fgad _gc .CombinationOperator ;
_dec bool ;DefaultPixelValue uint8 ;_caab bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_gdg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_dea ,_fd ,_fcb ,_dga ,_ced ,_efc ,_bg ,_dgaa ,_ecb int )(_gbb error ){var (_gceed ,_gfeb int ;
_fdb ,_fag int ;_dcff ,_ade int ;_afg byte ;);if _dea > 0{_afg ,_gbb =_gdg .RegionBitmap .GetByte (_bg -_fcb );if _gbb !=nil {return ;};_fdb =int (_afg );};if _dgaa > 0&&_dgaa <=_gdg .ReferenceBitmap .Height {_afg ,_gbb =_gdg .ReferenceBitmap .GetByte (_ecb -_dga +_efc );
if _gbb !=nil {return ;};_fag =int (_afg )<<2;};if _dgaa >=0&&_dgaa < _gdg .ReferenceBitmap .Height {_afg ,_gbb =_gdg .ReferenceBitmap .GetByte (_ecb +_efc );if _gbb !=nil {return ;};_dcff =int (_afg );};if _dgaa > -2&&_dgaa < _gdg .ReferenceBitmap .Height -1{_afg ,_gbb =_gdg .ReferenceBitmap .GetByte (_ecb +_dga +_efc );
if _gbb !=nil {return ;};_ade =int (_afg );};_gceed =((_fdb >>5)&0x6)|((_ade >>2)&0x30)|(_dcff &0xc0)|(_fag &0x200);_gfeb =((_ade >>2)&0x70)|(_dcff &0xc0)|(_fag &0x700);var _gcg int ;for _dbd :=0;_dbd < _ced ;_dbd =_gcg {var (_ebg int ;_egc int ;);_gcg =_dbd +8;
if _ebg =_fd -_dbd ;_ebg > 8{_ebg =8;};_edb :=_gcg < _fd ;_fed :=_gcg < _gdg .ReferenceBitmap .Width ;_acb :=_efc +1;if _dea > 0{_afg =0;if _edb {_afg ,_gbb =_gdg .RegionBitmap .GetByte (_bg -_fcb +1);if _gbb !=nil {return ;};};_fdb =(_fdb <<8)|int (_afg );
};if _dgaa > 0&&_dgaa <=_gdg .ReferenceBitmap .Height {var _fgg int ;if _fed {_afg ,_gbb =_gdg .ReferenceBitmap .GetByte (_ecb -_dga +_acb );if _gbb !=nil {return ;};_fgg =int (_afg )<<2;};_fag =(_fag <<8)|_fgg ;};if _dgaa >=0&&_dgaa < _gdg .ReferenceBitmap .Height {_afg =0;
if _fed {_afg ,_gbb =_gdg .ReferenceBitmap .GetByte (_ecb +_acb );if _gbb !=nil {return ;};};_dcff =(_dcff <<8)|int (_afg );};if _dgaa > -2&&_dgaa < (_gdg .ReferenceBitmap .Height -1){_afg =0;if _fed {_afg ,_gbb =_gdg .ReferenceBitmap .GetByte (_ecb +_dga +_acb );
if _gbb !=nil {return ;};};_ade =(_ade <<8)|int (_afg );};for _eef :=0;_eef < _ebg ;_eef ++{var _adc int ;_fdg :=(_gfeb >>4)&0x1ff;switch _fdg {case 0x1ff:_adc =1;case 0x00:_adc =0;default:_gdg ._a .SetIndex (int32 (_gceed ));_adc ,_gbb =_gdg ._bea .DecodeBit (_gdg ._a );
if _gbb !=nil {return ;};};_edf :=uint (7-_eef );_egc |=_adc <<_edf ;_gceed =((_gceed &0x0d6)<<1)|_adc |(_fdb >>_edf +5)&0x002|((_ade >>_edf +2)&0x010)|((_dcff >>_edf )&0x040)|((_fag >>_edf )&0x200);_gfeb =((_gfeb &0xdb)<<1)|((_ade >>_edf +2)&0x010)|((_dcff >>_edf )&0x080)|((_fag >>_edf )&0x400);
};_gbb =_gdg .RegionBitmap .SetByte (_bg ,byte (_egc ));if _gbb !=nil {return ;};_bg ++;_ecb ++;};return nil ;};func (_bbd *GenericRegion )InitEncode (bm *_gc .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ccd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _bde .Error (_ccd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _bde .Error (_ccd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_bbd .Bitmap =bm ;_bbd .GBTemplate =byte (template );switch _bbd .GBTemplate {case 0:_bbd .GBAtX =[]int8 {3,-3,2,-2};_bbd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_bbd .GBAtX =[]int8 {3};_bbd .GBAtY =[]int8 {-1};case 2,3:_bbd .GBAtX =[]int8 {2};_bbd .GBAtY =[]int8 {-1};
default:return _bde .Errorf (_ccd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_bbd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_bbd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ffeb *HalftoneRegion )shiftAndFill (_effd int )int {_effd >>=8;
if _effd < 0{_eaad :=int (_b .Log (float64 (_cedg (_effd )))/_b .Log (2));_caae :=31-_eaad ;for _dde :=1;_dde < _caae ;_dde ++{_effd |=1<<uint (31-_dde );};};return _effd ;};func (_cdda *Header )GetSegmentData ()(Segmenter ,error ){var _efbc Segmenter ;
if _cdda .SegmentData !=nil {_efbc =_cdda .SegmentData ;};if _efbc ==nil {_bdgc ,_fggb :=_bcbb [_cdda .Type ];if !_fggb {return nil ,_gg .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_cdda .Type ,_cdda .Type );
};_efbc =_bdgc ();_gd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_cdda .SegmentNumber ,_cdda .SegmentDataStartOffset );
_acgb ,_cdc :=_cdda .subInputReader ();if _cdc !=nil {return nil ,_cdc ;};if _gcef :=_efbc .Init (_cdda ,_acgb );_gcef !=nil {_gd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gcef ,_efbc );
return nil ,_gcef ;};_cdda .SegmentData =_efbc ;};return _efbc ,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_afea *PatternDictionary )setGbAtPixels (){if _afea .HDTemplate ==0{_afea .GBAtX =make ([]int8 ,4);
_afea .GBAtY =make ([]int8 ,4);_afea .GBAtX [0]=-int8 (_afea .HdpWidth );_afea .GBAtY [0]=0;_afea .GBAtX [1]=-3;_afea .GBAtY [1]=-1;_afea .GBAtX [2]=2;_afea .GBAtY [2]=-2;_afea .GBAtX [3]=-2;_afea .GBAtY [3]=-2;}else {_afea .GBAtX =[]int8 {-int8 (_afea .HdpWidth )};
_afea .GBAtY =[]int8 {0};};};func (_gbc *GenericRegion )GetRegionBitmap ()(_efcg *_gc .Bitmap ,_gfdef error ){if _gbc .Bitmap !=nil {return _gbc .Bitmap ,nil ;};if _gbc .IsMMREncoded {if _gbc ._gfed ==nil {_gbc ._gfed ,_gfdef =_dd .New (_gbc ._cbce ,int (_gbc .RegionSegment .BitmapWidth ),int (_gbc .RegionSegment .BitmapHeight ),_gbc .DataOffset ,_gbc .DataLength );
if _gfdef !=nil {return nil ,_gfdef ;};};_gbc .Bitmap ,_gfdef =_gbc ._gfed .UncompressMMR ();return _gbc .Bitmap ,_gfdef ;};if _gfdef =_gbc .updateOverrideFlags ();_gfdef !=nil {return nil ,_gfdef ;};var _ffad int ;if _gbc ._ace ==nil {_gbc ._ace ,_gfdef =_ge .New (_gbc ._cbce );
if _gfdef !=nil {return nil ,_gfdef ;};};if _gbc ._ead ==nil {_gbc ._ead =_ge .NewStats (65536,1);};_gbc .Bitmap =_gc .New (int (_gbc .RegionSegment .BitmapWidth ),int (_gbc .RegionSegment .BitmapHeight ));_fdc :=int (uint32 (_gbc .Bitmap .Width +7)&(^uint32 (7)));
for _cdg :=0;_cdg < _gbc .Bitmap .Height ;_cdg ++{if _gbc .IsTPGDon {var _bcb int ;_bcb ,_gfdef =_gbc .decodeSLTP ();if _gfdef !=nil {return nil ,_gfdef ;};_ffad ^=_bcb ;};if _ffad ==1{if _cdg > 0{if _gfdef =_gbc .copyLineAbove (_cdg );_gfdef !=nil {return nil ,_gfdef ;
};};}else {if _gfdef =_gbc .decodeLine (_cdg ,_gbc .Bitmap .Width ,_fdc );_gfdef !=nil {return nil ,_gfdef ;};};};return _gbc .Bitmap ,nil ;};type SegmentEncoder interface{Encode (_bgg _d .BinaryWriter )(_fec int ,_cefd error );};func (_aadb *SymbolDictionary )getSymbol (_ccfe int )(*_gc .Bitmap ,error ){const _fcab ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_eceb ,_dbdd :=_aadb ._cdgf .GetBitmap (_aadb ._gecb [_ccfe ]);if _dbdd !=nil {return nil ,_bde .Wrap (_dbdd ,_fcab ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _eceb ,nil ;};func (_edba *SymbolDictionary )decodeDirectlyThroughGenericRegion (_fddc ,_cbgb uint32 )error {if _edba ._ceec ==nil {_edba ._ceec =NewGenericRegion (_edba ._cgad );
};_edba ._ceec .setParametersWithAt (false ,byte (_edba .SdTemplate ),false ,false ,_edba .SdATX ,_edba .SdATY ,_fddc ,_cbgb ,_edba ._dcbd ,_edba ._efcac );return _edba .addSymbol (_edba ._ceec );};func (_dgd *TextRegion )decodeRdy ()(int64 ,error ){const _gffc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _dgd .IsHuffmanEncoded {if _dgd .SbHuffRDY ==3{if _dgd ._gebf ==nil {var (_fgec int ;_bdaa error ;);if _dgd .SbHuffFS ==3{_fgec ++;};if _dgd .SbHuffDS ==3{_fgec ++;};if _dgd .SbHuffDT ==3{_fgec ++;};if _dgd .SbHuffRDWidth ==3{_fgec ++;};if _dgd .SbHuffRDHeight ==3{_fgec ++;
};if _dgd .SbHuffRDX ==3{_fgec ++;};_dgd ._gebf ,_bdaa =_dgd .getUserTable (_fgec );if _bdaa !=nil {return 0,_bde .Wrap (_bdaa ,_gffc ,"");};};return _dgd ._gebf .Decode (_dgd ._dcbba );};_cacb ,_acba :=_fc .GetStandardTable (14+int (_dgd .SbHuffRDY ));
if _acba !=nil {return 0,_acba ;};return _cacb .Decode (_dgd ._dcbba );};_edee ,_dddd :=_dgd ._daa .DecodeInt (_dgd ._bcedg );if _dddd !=nil {return 0,_bde .Wrap (_dddd ,_gffc ,"");};return int64 (_edee ),nil ;};func (_da *GenericRefinementRegion )decodeOptimized (_gea ,_eaf ,_fcc ,_dfd ,_cade ,_eac ,_fgb int )error {var (_dce error ;
_dg int ;_dgc int ;);_bac :=_gea -int (_da .ReferenceDY );if _bc :=int (-_da .ReferenceDX );_bc > 0{_dg =_bc ;};_dfe :=_da .ReferenceBitmap .GetByteIndex (_dg ,_bac );if _da .ReferenceDX > 0{_dgc =int (_da .ReferenceDX );};_dfeb :=_da .RegionBitmap .GetByteIndex (_dgc ,_gea );
switch _da .TemplateID {case 0:_dce =_da .decodeTemplate (_gea ,_eaf ,_fcc ,_dfd ,_cade ,_eac ,_fgb ,_dfeb ,_bac ,_dfe ,_da ._cg );case 1:_dce =_da .decodeTemplate (_gea ,_eaf ,_fcc ,_dfd ,_cade ,_eac ,_fgb ,_dfeb ,_bac ,_dfe ,_da ._cb );};return _dce ;
};func (_bgbd *PatternDictionary )readPatternWidthAndHeight ()error {_dede ,_edab :=_bgbd ._abegf .ReadByte ();if _edab !=nil {return _edab ;};_bgbd .HdpWidth =_dede ;_dede ,_edab =_bgbd ._abegf .ReadByte ();if _edab !=nil {return _edab ;};_bgbd .HdpHeight =_dede ;
return nil ;};func (_gbg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gbg .RegionSegment };type template0 struct{};func (_eafdd *TextRegion )Encode (w _d .BinaryWriter )(_fdgce int ,_eced error ){const _cfaf ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _fdgce ,_eced =_eafdd .RegionInfo .Encode (w );_eced !=nil {return _fdgce ,_bde .Wrap (_eced ,_cfaf ,"");};var _bbac int ;if _bbac ,_eced =_eafdd .encodeFlags (w );_eced !=nil {return _fdgce ,_bde .Wrap (_eced ,_cfaf ,"");};_fdgce +=_bbac ;if _bbac ,_eced =_eafdd .encodeSymbols (w );
_eced !=nil {return _fdgce ,_bde .Wrap (_eced ,_cfaf ,"");};_fdgce +=_bbac ;return _fdgce ,nil ;};func (_afef *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _afef .IsHuffmanEncoded {return _afef .decodeHeightClassDeltaHeightWithHuffman ();
};_ggbb ,_deac :=_afef ._efcac .DecodeInt (_afef ._acbe );if _deac !=nil {return 0,_deac ;};return int64 (_ggbb ),nil ;};func NewRegionSegment (r *_d .Reader )*RegionSegment {return &RegionSegment {_fggf :r }};func (_fgggd *TextRegion )symbolIDCodeLengths ()error {var (_fecb []*_fc .Code ;
_agcg uint64 ;_cafbe _fc .Tabler ;_gdbf error ;);for _cddag :=0;_cddag < 35;_cddag ++{_agcg ,_gdbf =_fgggd ._dcbba .ReadBits (4);if _gdbf !=nil {return _gdbf ;};_cgdf :=int (_agcg &0xf);if _cgdf > 0{_fecb =append (_fecb ,_fc .NewCode (int32 (_cgdf ),0,int32 (_cddag ),false ));
};};_cafbe ,_gdbf =_fc .NewFixedSizeTable (_fecb );if _gdbf !=nil {return _gdbf ;};var (_bcgf int64 ;_cdge uint32 ;_cfde []*_fc .Code ;_cgdce int64 ;);for _cdge < _fgggd .NumberOfSymbols {_cgdce ,_gdbf =_cafbe .Decode (_fgggd ._dcbba );if _gdbf !=nil {return _gdbf ;
};if _cgdce < 32{if _cgdce > 0{_cfde =append (_cfde ,_fc .NewCode (int32 (_cgdce ),0,int32 (_cdge ),false ));};_bcgf =_cgdce ;_cdge ++;}else {var _daba ,_dgcg int64 ;switch _cgdce {case 32:_agcg ,_gdbf =_fgggd ._dcbba .ReadBits (2);if _gdbf !=nil {return _gdbf ;
};_daba =3+int64 (_agcg );if _cdge > 0{_dgcg =_bcgf ;};case 33:_agcg ,_gdbf =_fgggd ._dcbba .ReadBits (3);if _gdbf !=nil {return _gdbf ;};_daba =3+int64 (_agcg );case 34:_agcg ,_gdbf =_fgggd ._dcbba .ReadBits (7);if _gdbf !=nil {return _gdbf ;};_daba =11+int64 (_agcg );
};for _degg :=0;_degg < int (_daba );_degg ++{if _dgcg > 0{_cfde =append (_cfde ,_fc .NewCode (int32 (_dgcg ),0,int32 (_cdge ),false ));};_cdge ++;};};};_fgggd ._dcbba .Align ();_fgggd ._ebdg ,_gdbf =_fc .NewFixedSizeTable (_cfde );return _gdbf ;};var _ templater =&template1 {};
func (_edcg *Header )readNumberOfReferredToSegments (_gggf *_d .Reader )(uint64 ,error ){const _cgg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gcec ,_fbee :=_gggf .ReadBits (3);if _fbee !=nil {return 0,_bde .Wrap (_fbee ,_cgg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gcec &=0xf;var _agaa []byte ;if _gcec <=4{_agaa =make ([]byte ,5);for _ebf :=0;_ebf <=4;_ebf ++{_dade ,_dcad :=_gggf .ReadBit ();
if _dcad !=nil {return 0,_bde .Wrap (_dcad ,_cgg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_agaa [_ebf ]=byte (_dade );};}else {_gcec ,_fbee =_gggf .ReadBits (29);if _fbee !=nil {return 0,_fbee ;};_gcec &=_b .MaxInt32 ;_cbcd :=(_gcec +8)>>3;
_cbcd <<=3;_agaa =make ([]byte ,_cbcd );var _affg uint64 ;for _affg =0;_affg < _cbcd ;_affg ++{_cgdc ,_dffc :=_gggf .ReadBit ();if _dffc !=nil {return 0,_bde .Wrap (_dffc ,_cgg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_agaa [_affg ]=byte (_cgdc );
};};return _gcec ,nil ;};func (_dgffg *TableSegment )HtLow ()int32 {return _dgffg ._accc };func (_gab *GenericRefinementRegion )setParameters (_gdae *_ge .DecoderStats ,_fda *_ge .Decoder ,_fea int8 ,_acdb ,_cea uint32 ,_ae *_gc .Bitmap ,_gaed ,_acg int32 ,_fdd bool ,_bfd []int8 ,_edcb []int8 ){_gd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gdae !=nil {_gab ._a =_gdae ;};if _fda !=nil {_gab ._bea =_fda ;};_gab .TemplateID =_fea ;_gab .RegionInfo .BitmapWidth =_acdb ;_gab .RegionInfo .BitmapHeight =_cea ;_gab .ReferenceBitmap =_ae ;_gab .ReferenceDX =_gaed ;_gab .ReferenceDY =_acg ;_gab .IsTPGROn =_fdd ;
_gab .GrAtX =_bfd ;_gab .GrAtY =_edcb ;_gab .RegionBitmap =nil ;_gd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gab );
};func (_ccbde *SymbolDictionary )decodeThroughTextRegion (_cfgb ,_affbg ,_bdd uint32 )error {if _ccbde ._ffag ==nil {_ccbde ._ffag =_dadffa (_ccbde ._cgad ,nil );_ccbde ._ffag .setContexts (_ccbde ._dcbd ,_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1),_ccbde ._ecfb ,_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1));
};if _faab :=_ccbde .setSymbolsArray ();_faab !=nil {return _faab ;};_ccbde ._ffag .setParameters (_ccbde ._efcac ,_ccbde .IsHuffmanEncoded ,true ,_cfgb ,_affbg ,_bdd ,1,_ccbde ._bcgg +_ccbde ._bdbb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_ccbde .SdrTemplate ,_ccbde .SdrATX ,_ccbde .SdrATY ,_ccbde ._ceea ,_ccbde ._dffe );
return _ccbde .addSymbol (_ccbde ._ffag );};func (_fbfe *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bgfe ,_aggf :=_fbfe ._acea .ReadBit ();if _aggf !=nil {return _aggf ;};if _bgfe ==1{_fbfe ._faee =true ;};return nil ;};func (_bbaf *PageInformationSegment )Encode (w _d .BinaryWriter )(_acac int ,_abeb error ){const _cgfe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_fgc :=make ([]byte ,4);_f .BigEndian .PutUint32 (_fgc ,uint32 (_bbaf .PageBMWidth ));_acac ,_abeb =w .Write (_fgc );if _abeb !=nil {return _acac ,_bde .Wrap (_abeb ,_cgfe ,"\u0077\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_fgc ,uint32 (_bbaf .PageBMHeight ));
var _dccd int ;_dccd ,_abeb =w .Write (_fgc );if _abeb !=nil {return _dccd +_acac ,_bde .Wrap (_abeb ,_cgfe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_acac +=_dccd ;_f .BigEndian .PutUint32 (_fgc ,uint32 (_bbaf .ResolutionX ));_dccd ,_abeb =w .Write (_fgc );
if _abeb !=nil {return _dccd +_acac ,_bde .Wrap (_abeb ,_cgfe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_acac +=_dccd ;_f .BigEndian .PutUint32 (_fgc ,uint32 (_bbaf .ResolutionY ));if _dccd ,_abeb =w .Write (_fgc );_abeb !=nil {return _dccd +_acac ,_bde .Wrap (_abeb ,_cgfe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_acac +=_dccd ;if _abeb =_bbaf .encodeFlags (w );_abeb !=nil {return _acac ,_bde .Wrap (_abeb ,_cgfe ,"");};_acac ++;if _dccd ,_abeb =_bbaf .encodeStripingInformation (w );_abeb !=nil {return _acac ,_bde .Wrap (_abeb ,_cgfe ,"");};_acac +=_dccd ;return _acac ,nil ;
};func (_eagc *TableSegment )HtRS ()int32 {return _eagc ._gfedg };func (_bebc *TextRegion )decodeRdx ()(int64 ,error ){const _ddaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _bebc .IsHuffmanEncoded {if _bebc .SbHuffRDX ==3{if _bebc ._fadb ==nil {var (_agbf int ;
_dbaad error ;);if _bebc .SbHuffFS ==3{_agbf ++;};if _bebc .SbHuffDS ==3{_agbf ++;};if _bebc .SbHuffDT ==3{_agbf ++;};if _bebc .SbHuffRDWidth ==3{_agbf ++;};if _bebc .SbHuffRDHeight ==3{_agbf ++;};_bebc ._fadb ,_dbaad =_bebc .getUserTable (_agbf );if _dbaad !=nil {return 0,_bde .Wrap (_dbaad ,_ddaf ,"");
};};return _bebc ._fadb .Decode (_bebc ._dcbba );};_dacd ,_eebce :=_fc .GetStandardTable (14+int (_bebc .SbHuffRDX ));if _eebce !=nil {return 0,_bde .Wrap (_eebce ,_ddaf ,"");};return _dacd .Decode (_bebc ._dcbba );};_bfaec ,_afbf :=_bebc ._daa .DecodeInt (_bebc ._efgc );
if _afbf !=nil {return 0,_bde .Wrap (_afbf ,_ddaf ,"");};return int64 (_bfaec ),nil ;};func (_gdgf *SymbolDictionary )parseHeader ()(_cged error ){_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cged !=nil {_gd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_cged );
}else {_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cged =_gdgf .readRegionFlags ();_cged !=nil {return _cged ;};if _cged =_gdgf .setAtPixels ();_cged !=nil {return _cged ;};if _cged =_gdgf .setRefinementAtPixels ();_cged !=nil {return _cged ;};if _cged =_gdgf .readNumberOfExportedSymbols ();_cged !=nil {return _cged ;
};if _cged =_gdgf .readNumberOfNewSymbols ();_cged !=nil {return _cged ;};if _cged =_gdgf .setInSyms ();_cged !=nil {return _cged ;};if _gdgf ._cdcb {_dbfd :=_gdgf .Header .RTSegments ;for _egbe :=len (_dbfd )-1;_egbe >=0;_egbe --{if _dbfd [_egbe ].Type ==0{_agfde ,_fccb :=_dbfd [_egbe ].SegmentData .(*SymbolDictionary );
if !_fccb {_cged =_gg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dbfd [_egbe ]);
return _cged ;};if _agfde ._cdcb {_gdgf .setRetainedCodingContexts (_agfde );};break ;};};};if _cged =_gdgf .checkInput ();_cged !=nil {return _cged ;};return nil ;};func (_bfaf *TableSegment )Init (h *Header ,r *_d .Reader )error {_bfaf ._aagb =r ;return _bfaf .parseHeader ();
};func (_cfd *SymbolDictionary )encodeATFlags (_dbgc _d .BinaryWriter )(_beb int ,_efbcd error ){const _fggg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _cfd .IsHuffmanEncoded ||_cfd .SdTemplate !=0{return 0,nil ;
};_acda :=4;if _cfd .SdTemplate !=0{_acda =1;};for _fdbe :=0;_fdbe < _acda ;_fdbe ++{if _efbcd =_dbgc .WriteByte (byte (_cfd .SdATX [_fdbe ]));_efbcd !=nil {return _beb ,_bde .Wrapf (_efbcd ,_fggg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_fdbe );
};_beb ++;if _efbcd =_dbgc .WriteByte (byte (_cfd .SdATY [_fdbe ]));_efbcd !=nil {return _beb ,_bde .Wrapf (_efbcd ,_fggg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_fdbe );};_beb ++;};return _beb ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};
);func (_cabf *TextRegion )readAmountOfSymbolInstances ()error {_bcgd ,_gbaff :=_cabf ._dcbba .ReadBits (32);if _gbaff !=nil {return _gbaff ;};_cabf .NumberOfSymbolInstances =uint32 (_bcgd &_b .MaxUint32 );_gdfb :=_cabf .RegionInfo .BitmapWidth *_cabf .RegionInfo .BitmapHeight ;
if _gdfb < _cabf .NumberOfSymbolInstances {_gd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_gdfb ,_cabf .NumberOfSymbolInstances );
_cabf .NumberOfSymbolInstances =_gdfb ;};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;
TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;
TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;
PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_d .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_ddbg *TextRegion )setContexts (_fee *_ge .DecoderStats ,_fceg *_ge .DecoderStats ,_ddbb *_ge .DecoderStats ,_edea *_ge .DecoderStats ,_addb *_ge .DecoderStats ,_fgafd *_ge .DecoderStats ,_abbf *_ge .DecoderStats ,_fgba *_ge .DecoderStats ,_ecdcf *_ge .DecoderStats ,_afffa *_ge .DecoderStats ){_ddbg ._ccfg =_fceg ;
_ddbg ._effc =_ddbb ;_ddbg ._ccgbe =_edea ;_ddbg ._bgcd =_addb ;_ddbg ._ceba =_abbf ;_ddbg ._gfcd =_fgba ;_ddbg ._aacg =_fgafd ;_ddbg ._efgc =_ecdcf ;_ddbg ._bcedg =_afffa ;_ddbg ._afac =_fee ;};func (_fbbg *PatternDictionary )extractPatterns (_ggage *_gc .Bitmap )error {var _abfd int ;
_ecec :=make ([]*_gc .Bitmap ,_fbbg .GrayMax +1);for _abfd <=int (_fbbg .GrayMax ){_fcgc :=int (_fbbg .HdpWidth )*_abfd ;_cgbdd :=_be .Rect (_fcgc ,0,_fcgc +int (_fbbg .HdpWidth ),int (_fbbg .HdpHeight ));_dbf ,_fgaf :=_gc .Extract (_cgbdd ,_ggage );if _fgaf !=nil {return _fgaf ;
};_ecec [_abfd ]=_dbf ;_abfd ++;};_fbbg .Patterns =_ecec ;return nil ;};func (_fba *template1 )form (_fad ,_ccf ,_bcc ,_bag ,_gdc int16 )int16 {return ((_fad &0x02)<<8)|(_ccf <<6)|((_bcc &0x03)<<4)|(_bag <<1)|_gdc ;};func (_fadc *Header )subInputReader ()(*_d .Reader ,error ){_afde :=int (_fadc .SegmentDataLength );
if _fadc .SegmentDataLength ==_b .MaxInt32 {_afde =-1;};return _fadc .Reader .NewPartialReader (int (_fadc .SegmentDataStartOffset ),_afde ,false );};func (_gdee *GenericRegion )setParameters (_ddff bool ,_eccb ,_efge int64 ,_aee ,_geb uint32 ){_gdee .IsMMREncoded =_ddff ;
_gdee .DataOffset =_eccb ;_gdee .DataLength =_efge ;_gdee .RegionSegment .BitmapHeight =_aee ;_gdee .RegionSegment .BitmapWidth =_geb ;_gdee ._gfed =nil ;_gdee .Bitmap =nil ;};func (_eefg *HalftoneRegion )GetPatterns ()([]*_gc .Bitmap ,error ){var (_egcaf []*_gc .Bitmap ;
_gbbf error ;);for _ ,_fage :=range _eefg ._aab .RTSegments {var _effge Segmenter ;_effge ,_gbbf =_fage .GetSegmentData ();if _gbbf !=nil {_gd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gbbf );
return nil ,_gbbf ;};_caa ,_cfa :=_effge .(*PatternDictionary );if !_cfa {_gbbf =_gg .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_effge );
return nil ,_gbbf ;};var _dfc []*_gc .Bitmap ;_dfc ,_gbbf =_caa .GetDictionary ();if _gbbf !=nil {_gd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gbbf );
return nil ,_gbbf ;};_egcaf =append (_egcaf ,_dfc ...);};return _egcaf ,nil ;};func (_cac *PageInformationSegment )readCombinationOperator ()error {_fcde ,_acdfa :=_cac ._acea .ReadBits (2);if _acdfa !=nil {return _acdfa ;};_cac ._fgad =_gc .CombinationOperator (int (_fcde ));
return nil ;};type Regioner interface{GetRegionBitmap ()(*_gc .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_edbb *GenericRegion )decodeTemplate3 (_cbeg ,_gba ,_bcbee int ,_dggb ,_dcaa int )(_adcb error ){const _efe ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_bfc ,_fcbg int ;_adcg int ;_gca byte ;_fbed ,_fcf int ;);if _cbeg >=1{_gca ,_adcb =_edbb .Bitmap .GetByte (_dcaa );if _adcb !=nil {return _bde .Wrap (_adcb ,_efe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adcg =int (_gca );};_bfc =(_adcg >>1)&0x70;
for _gdb :=0;_gdb < _bcbee ;_gdb =_fbed {var (_ggff byte ;_eccg int ;);_fbed =_gdb +8;if _cga :=_gba -_gdb ;_cga > 8{_eccg =8;}else {_eccg =_cga ;};if _cbeg >=1{_adcg <<=8;if _fbed < _gba {_gca ,_adcb =_edbb .Bitmap .GetByte (_dcaa +1);if _adcb !=nil {return _bde .Wrap (_adcb ,_efe ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_adcg |=int (_gca );};};for _bdbf :=0;_bdbf < _eccg ;_bdbf ++{if _edbb ._ddge {_fcbg =_edbb .overrideAtTemplate3 (_bfc ,_gdb +_bdbf ,_cbeg ,int (_ggff ),_bdbf );_edbb ._ead .SetIndex (int32 (_fcbg ));}else {_edbb ._ead .SetIndex (int32 (_bfc ));};_fcf ,_adcb =_edbb ._ace .DecodeBit (_edbb ._ead );
if _adcb !=nil {return _bde .Wrap (_adcb ,_efe ,"");};_ggff |=byte (_fcf )<<byte (7-_bdbf );_bfc =((_bfc &0x1f7)<<1)|_fcf |((_adcg >>uint (8-_bdbf ))&0x010);};if _dgbg :=_edbb .Bitmap .SetByte (_dggb ,_ggff );_dgbg !=nil {return _bde .Wrap (_dgbg ,_efe ,"");
};_dggb ++;_dcaa ++;};return nil ;};func (_bcged *PageInformationSegment )Size ()int {return 19};func (_cegae *SymbolDictionary )InitEncode (symbols *_gc .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bafdd ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cegae .SdATX =[]int8 {3,-3,2,-2};_cegae .SdATY =[]int8 {-1,-1,-2,-2};_cegae ._cdgf =symbols ;_cegae ._gecb =make ([]int ,len (symbolList ));copy (_cegae ._gecb ,symbolList );if len (_cegae ._gecb )!=_cegae ._cdgf .Size (){return _bde .Error (_bafdd ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cegae .NumberOfNewSymbols =uint32 (symbols .Size ());_cegae .NumberOfExportedSymbols =uint32 (symbols .Size ());_cegae ._cgab =symbolMap ;_cegae ._gfef =unborderSymbols ;return nil ;};func (_eafa *template0 )setIndex (_ffee *_ge .DecoderStats ){_ffee .SetIndex (0x100)};
func (_edgc *TextRegion )decodeIb (_gded ,_eeefa int64 )(*_gc .Bitmap ,error ){const _efagf ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_gagfa error ;_cgaf *_gc .Bitmap ;);if _gded ==0{if int (_eeefa )> len (_edgc .Symbols )-1{return nil ,_bde .Error (_efagf ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _edgc .Symbols [int (_eeefa )],nil ;};var _egeb ,_bebb ,_gfbb ,_dcfee int64 ;_egeb ,_gagfa =_edgc .decodeRdw ();if _gagfa !=nil {return nil ,_bde .Wrap (_gagfa ,_efagf ,"");};_bebb ,_gagfa =_edgc .decodeRdh ();if _gagfa !=nil {return nil ,_bde .Wrap (_gagfa ,_efagf ,"");
};_gfbb ,_gagfa =_edgc .decodeRdx ();if _gagfa !=nil {return nil ,_bde .Wrap (_gagfa ,_efagf ,"");};_dcfee ,_gagfa =_edgc .decodeRdy ();if _gagfa !=nil {return nil ,_bde .Wrap (_gagfa ,_efagf ,"");};if _edgc .IsHuffmanEncoded {if _ ,_gagfa =_edgc .decodeSymInRefSize ();
_gagfa !=nil {return nil ,_bde .Wrap (_gagfa ,_efagf ,"");};_edgc ._dcbba .Align ();};_edeb :=_edgc .Symbols [_eeefa ];_afad :=uint32 (_edeb .Width );_bgba :=uint32 (_edeb .Height );_dcda :=int32 (uint32 (_egeb )>>1)+int32 (_gfbb );_aadg :=int32 (uint32 (_bebb )>>1)+int32 (_dcfee );
if _edgc ._gegc ==nil {_edgc ._gegc =_eefe (_edgc ._dcbba ,nil );};_edgc ._gegc .setParameters (_edgc ._afac ,_edgc ._daa ,_edgc .SbrTemplate ,_afad +uint32 (_egeb ),_bgba +uint32 (_bebb ),_edeb ,_dcda ,_aadg ,false ,_edgc .SbrATX ,_edgc .SbrATY );_cgaf ,_gagfa =_edgc ._gegc .GetRegionBitmap ();
if _gagfa !=nil {return nil ,_bde .Wrap (_gagfa ,_efagf ,"\u0067\u0072\u0066");};if _edgc .IsHuffmanEncoded {_edgc ._dcbba .Align ();};return _cgaf ,nil ;};func (_gdgbc *SymbolDictionary )setSymbolsArray ()error {if _gdgbc ._dcfaf ==nil {if _agde :=_gdgbc .retrieveImportSymbols ();
_agde !=nil {return _agde ;};};if _gdgbc ._ceea ==nil {_gdgbc ._ceea =append (_gdgbc ._ceea ,_gdgbc ._dcfaf ...);};return nil ;};func (_fbc *GenericRefinementRegion )updateOverride ()error {if _fbc .GrAtX ==nil ||_fbc .GrAtY ==nil {return _ca .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_fbc .GrAtX )!=len (_fbc .GrAtY ){return _ca .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fbc ._gfde =make ([]bool ,len (_fbc .GrAtX ));switch _fbc .TemplateID {case 0:if _fbc .GrAtX [0]!=-1&&_fbc .GrAtY [0]!=-1{_fbc ._gfde [0]=true ;
_fbc ._df =true ;};if _fbc .GrAtX [1]!=-1&&_fbc .GrAtY [1]!=-1{_fbc ._gfde [1]=true ;_fbc ._df =true ;};case 1:_fbc ._df =false ;};return nil ;};func (_bggb *PageInformationSegment )readContainsRefinement ()error {_eag ,_dgfaa :=_bggb ._acea .ReadBit ();
if _dgfaa !=nil {return _dgfaa ;};if _eag ==1{_bggb ._caab =true ;};return nil ;};func (_dedb *TextRegion )readRegionFlags ()error {var (_cafbf int ;_fbgbb uint64 ;_abdb error ;);_cafbf ,_abdb =_dedb ._dcbba .ReadBit ();if _abdb !=nil {return _abdb ;};
_dedb .SbrTemplate =int8 (_cafbf );_fbgbb ,_abdb =_dedb ._dcbba .ReadBits (5);if _abdb !=nil {return _abdb ;};_dedb .SbDsOffset =int8 (_fbgbb );if _dedb .SbDsOffset > 0x0f{_dedb .SbDsOffset -=0x20;};_cafbf ,_abdb =_dedb ._dcbba .ReadBit ();if _abdb !=nil {return _abdb ;
};_dedb .DefaultPixel =int8 (_cafbf );_fbgbb ,_abdb =_dedb ._dcbba .ReadBits (2);if _abdb !=nil {return _abdb ;};_dedb .CombinationOperator =_gc .CombinationOperator (int (_fbgbb )&0x3);_cafbf ,_abdb =_dedb ._dcbba .ReadBit ();if _abdb !=nil {return _abdb ;
};_dedb .IsTransposed =int8 (_cafbf );_fbgbb ,_abdb =_dedb ._dcbba .ReadBits (2);if _abdb !=nil {return _abdb ;};_dedb .ReferenceCorner =int16 (_fbgbb )&0x3;_fbgbb ,_abdb =_dedb ._dcbba .ReadBits (2);if _abdb !=nil {return _abdb ;};_dedb .LogSBStrips =int16 (_fbgbb )&0x3;
_dedb .SbStrips =1<<uint (_dedb .LogSBStrips );_cafbf ,_abdb =_dedb ._dcbba .ReadBit ();if _abdb !=nil {return _abdb ;};if _cafbf ==1{_dedb .UseRefinement =true ;};_cafbf ,_abdb =_dedb ._dcbba .ReadBit ();if _abdb !=nil {return _abdb ;};if _cafbf ==1{_dedb .IsHuffmanEncoded =true ;
};return nil ;};func (_acc *GenericRegion )parseHeader ()(_dcc error ){_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dcc !=nil {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dcc );
}else {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cag int ;_cafc uint64 ;);if _dcc =_acc .RegionSegment .parseHeader ();_dcc !=nil {return _dcc ;};if _ ,_dcc =_acc ._cbce .ReadBits (3);_dcc !=nil {return _dcc ;};_cag ,_dcc =_acc ._cbce .ReadBit ();if _dcc !=nil {return _dcc ;};if _cag ==1{_acc .UseExtTemplates =true ;
};_cag ,_dcc =_acc ._cbce .ReadBit ();if _dcc !=nil {return _dcc ;};if _cag ==1{_acc .IsTPGDon =true ;};_cafc ,_dcc =_acc ._cbce .ReadBits (2);if _dcc !=nil {return _dcc ;};_acc .GBTemplate =byte (_cafc &0xf);_cag ,_dcc =_acc ._cbce .ReadBit ();if _dcc !=nil {return _dcc ;
};if _cag ==1{_acc .IsMMREncoded =true ;};if !_acc .IsMMREncoded {_gde :=1;if _acc .GBTemplate ==0{_gde =4;if _acc .UseExtTemplates {_gde =12;};};if _dcc =_acc .readGBAtPixels (_gde );_dcc !=nil {return _dcc ;};};if _dcc =_acc .computeSegmentDataStructure ();
_dcc !=nil {return _dcc ;};_gd .Log .Trace ("\u0025\u0073",_acc );return nil ;};func (_gafac *GenericRegion )updateOverrideFlags ()error {const _aea ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gafac .GBAtX ==nil ||_gafac .GBAtY ==nil {return nil ;};if len (_gafac .GBAtX )!=len (_gafac .GBAtY ){return _bde .Errorf (_aea ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gafac .GBAtX ),len (_gafac .GBAtY ));
};_gafac .GBAtOverride =make ([]bool ,len (_gafac .GBAtX ));switch _gafac .GBTemplate {case 0:if !_gafac .UseExtTemplates {if _gafac .GBAtX [0]!=3||_gafac .GBAtY [0]!=-1{_gafac .setOverrideFlag (0);};if _gafac .GBAtX [1]!=-3||_gafac .GBAtY [1]!=-1{_gafac .setOverrideFlag (1);
};if _gafac .GBAtX [2]!=2||_gafac .GBAtY [2]!=-2{_gafac .setOverrideFlag (2);};if _gafac .GBAtX [3]!=-2||_gafac .GBAtY [3]!=-2{_gafac .setOverrideFlag (3);};}else {if _gafac .GBAtX [0]!=-2||_gafac .GBAtY [0]!=0{_gafac .setOverrideFlag (0);};if _gafac .GBAtX [1]!=0||_gafac .GBAtY [1]!=-2{_gafac .setOverrideFlag (1);
};if _gafac .GBAtX [2]!=-2||_gafac .GBAtY [2]!=-1{_gafac .setOverrideFlag (2);};if _gafac .GBAtX [3]!=-1||_gafac .GBAtY [3]!=-2{_gafac .setOverrideFlag (3);};if _gafac .GBAtX [4]!=1||_gafac .GBAtY [4]!=-2{_gafac .setOverrideFlag (4);};if _gafac .GBAtX [5]!=2||_gafac .GBAtY [5]!=-1{_gafac .setOverrideFlag (5);
};if _gafac .GBAtX [6]!=-3||_gafac .GBAtY [6]!=0{_gafac .setOverrideFlag (6);};if _gafac .GBAtX [7]!=-4||_gafac .GBAtY [7]!=0{_gafac .setOverrideFlag (7);};if _gafac .GBAtX [8]!=2||_gafac .GBAtY [8]!=-2{_gafac .setOverrideFlag (8);};if _gafac .GBAtX [9]!=3||_gafac .GBAtY [9]!=-1{_gafac .setOverrideFlag (9);
};if _gafac .GBAtX [10]!=-2||_gafac .GBAtY [10]!=-2{_gafac .setOverrideFlag (10);};if _gafac .GBAtX [11]!=-3||_gafac .GBAtY [11]!=-1{_gafac .setOverrideFlag (11);};};case 1:if _gafac .GBAtX [0]!=3||_gafac .GBAtY [0]!=-1{_gafac .setOverrideFlag (0);};case 2:if _gafac .GBAtX [0]!=2||_gafac .GBAtY [0]!=-1{_gafac .setOverrideFlag (0);
};case 3:if _gafac .GBAtX [0]!=2||_gafac .GBAtY [0]!=-1{_gafac .setOverrideFlag (0);};};return nil ;};func (_gcf *PatternDictionary )GetDictionary ()([]*_gc .Bitmap ,error ){if _gcf .Patterns !=nil {return _gcf .Patterns ,nil ;};if !_gcf .IsMMREncoded {_gcf .setGbAtPixels ();
};_abddf :=NewGenericRegion (_gcf ._abegf );_abddf .setParametersMMR (_gcf .IsMMREncoded ,_gcf .DataOffset ,_gcf .DataLength ,uint32 (_gcf .HdpHeight ),(_gcf .GrayMax +1)*uint32 (_gcf .HdpWidth ),_gcf .HDTemplate ,false ,false ,_gcf .GBAtX ,_gcf .GBAtY );
_adce ,_acdd :=_abddf .GetRegionBitmap ();if _acdd !=nil {return nil ,_acdd ;};if _acdd =_gcf .extractPatterns (_adce );_acdd !=nil {return nil ,_acdd ;};return _gcf .Patterns ,nil ;};func (_eea *SymbolDictionary )encodeFlags (_gbce _d .BinaryWriter )(_fgab int ,_fde error ){const _fbd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fde =_gbce .SkipBits (3);_fde !=nil {return 0,_bde .Wrap (_fde ,_fbd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _aeff int ;if _eea .SdrTemplate > 0{_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_aeff =0;if _eea .SdTemplate > 1{_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aeff =0;if _eea .SdTemplate ==1||_eea .SdTemplate ==3{_aeff =1;
};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aeff =0;if _eea ._acdbd {_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_aeff =0;if _eea ._cdcb {_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_aeff =0;if _eea .SdHuffAggInstanceSelection {_aeff =1;
};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_aeff =int (_eea .SdHuffBMSizeSelection );if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_aeff =0;if _eea .SdHuffDecodeWidthSelection > 1{_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_aeff =0;switch _eea .SdHuffDecodeWidthSelection {case 1,3:_aeff =1;
};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_aeff =0;if _eea .SdHuffDecodeHeightSelection > 1{_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_aeff =0;switch _eea .SdHuffDecodeHeightSelection {case 1,3:_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_aeff =0;if _eea .UseRefinementAggregation {_aeff =1;
};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_aeff =0;if _eea .IsHuffmanEncoded {_aeff =1;};if _fde =_gbce .WriteBit (_aeff );_fde !=nil {return _fgab ,_bde .Wrap (_fde ,_fbd ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_abbd *Header )writeReferredToCount (_bdcg _d .BinaryWriter )(_edcc int ,_gfga error ){const _gfdb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_abbd .RTSNumbers =make ([]int ,len (_abbd .RTSegments ));
for _gafb ,_gdac :=range _abbd .RTSegments {_abbd .RTSNumbers [_gafb ]=int (_gdac .SegmentNumber );};if len (_abbd .RTSNumbers )<=4{var _ede byte ;if len (_abbd .RetainBits )>=1{_ede =_abbd .RetainBits [0];};_ede |=byte (len (_abbd .RTSNumbers ))<<5;if _gfga =_bdcg .WriteByte (_ede );
_gfga !=nil {return 0,_bde .Wrap (_gfga ,_gfdb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cdcc :=uint32 (len (_abbd .RTSNumbers ));_gggee :=make ([]byte ,4+_bf .Ceil (len (_abbd .RTSNumbers )+1,8));_cdcc |=0x7<<29;
_f .BigEndian .PutUint32 (_gggee ,_cdcc );copy (_gggee [1:],_abbd .RetainBits );_edcc ,_gfga =_bdcg .Write (_gggee );if _gfga !=nil {return 0,_bde .Wrap (_gfga ,_gfdb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _edcc ,nil ;
};func (_gafafg *SymbolDictionary )setRetainedCodingContexts (_dgff *SymbolDictionary ){_gafafg ._efcac =_dgff ._efcac ;_gafafg .IsHuffmanEncoded =_dgff .IsHuffmanEncoded ;_gafafg .UseRefinementAggregation =_dgff .UseRefinementAggregation ;_gafafg .SdTemplate =_dgff .SdTemplate ;
_gafafg .SdrTemplate =_dgff .SdrTemplate ;_gafafg .SdATX =_dgff .SdATX ;_gafafg .SdATY =_dgff .SdATY ;_gafafg .SdrATX =_dgff .SdrATX ;_gafafg .SdrATY =_dgff .SdrATY ;_gafafg ._dcbd =_dgff ._dcbd ;};type templater interface{form (_cbbd ,_fcg ,_abc ,_ecdf ,_ecc int16 )int16 ;
setIndex (_dfg *_ge .DecoderStats );};type TextRegion struct{_dcbba *_d .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _gc .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_adad int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_gc .Bitmap ;Symbols []*_gc .Bitmap ;_daa *_ge .Decoder ;_gegc *GenericRefinementRegion ;_ccfg *_ge .DecoderStats ;_effc *_ge .DecoderStats ;_ccgbe *_ge .DecoderStats ;_bgcd *_ge .DecoderStats ;_ceb *_ge .DecoderStats ;
_ceba *_ge .DecoderStats ;_gfcd *_ge .DecoderStats ;_aacg *_ge .DecoderStats ;_efgc *_ge .DecoderStats ;_bcedg *_ge .DecoderStats ;_afac *_ge .DecoderStats ;_ffaeb int8 ;_ebdg *_fc .FixedSizeTable ;Header *Header ;_adaca _fc .Tabler ;_efeb _fc .Tabler ;
_aafc _fc .Tabler ;_fadd _fc .Tabler ;_gaeff _fc .Tabler ;_fadb _fc .Tabler ;_gebf _fc .Tabler ;_egfg _fc .Tabler ;_bgd ,_ddef map[int ]int ;_bfdf []int ;_eacc *_gc .Points ;_fcbcg *_gc .Bitmaps ;_adgg *_bf .IntSlice ;_dbbab ,_aedg int ;_gcab *_gc .Boxes ;
};func (_eda *GenericRegion )overrideAtTemplate0b (_egb ,_cff ,_dcbb ,_gcb ,_feac ,_cab int )int {if _eda .GBAtOverride [0]{_egb &=0xFFFD;if _eda .GBAtY [0]==0&&_eda .GBAtX [0]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [0]&0x1))<<1;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [0]),_dcbb +int (_eda .GBAtY [0])))<<1;};};if _eda .GBAtOverride [1]{_egb &=0xDFFF;if _eda .GBAtY [1]==0&&_eda .GBAtX [1]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [1]&0x1))<<13;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [1]),_dcbb +int (_eda .GBAtY [1])))<<13;};};if _eda .GBAtOverride [2]{_egb &=0xFDFF;if _eda .GBAtY [2]==0&&_eda .GBAtX [2]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [2]&0x1))<<9;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [2]),_dcbb +int (_eda .GBAtY [2])))<<9;};};if _eda .GBAtOverride [3]{_egb &=0xBFFF;if _eda .GBAtY [3]==0&&_eda .GBAtX [3]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [3]&0x1))<<14;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [3]),_dcbb +int (_eda .GBAtY [3])))<<14;};};if _eda .GBAtOverride [4]{_egb &=0xEFFF;if _eda .GBAtY [4]==0&&_eda .GBAtX [4]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [4]&0x1))<<12;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [4]),_dcbb +int (_eda .GBAtY [4])))<<12;};};if _eda .GBAtOverride [5]{_egb &=0xFFDF;if _eda .GBAtY [5]==0&&_eda .GBAtX [5]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [5]&0x1))<<5;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [5]),_dcbb +int (_eda .GBAtY [5])))<<5;};};if _eda .GBAtOverride [6]{_egb &=0xFFFB;if _eda .GBAtY [6]==0&&_eda .GBAtX [6]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [6]&0x1))<<2;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [6]),_dcbb +int (_eda .GBAtY [6])))<<2;};};if _eda .GBAtOverride [7]{_egb &=0xFFF7;if _eda .GBAtY [7]==0&&_eda .GBAtX [7]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [7]&0x1))<<3;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [7]),_dcbb +int (_eda .GBAtY [7])))<<3;};};if _eda .GBAtOverride [8]{_egb &=0xF7FF;if _eda .GBAtY [8]==0&&_eda .GBAtX [8]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [8]&0x1))<<11;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [8]),_dcbb +int (_eda .GBAtY [8])))<<11;};};if _eda .GBAtOverride [9]{_egb &=0xFFEF;if _eda .GBAtY [9]==0&&_eda .GBAtX [9]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [9]&0x1))<<4;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [9]),_dcbb +int (_eda .GBAtY [9])))<<4;};};if _eda .GBAtOverride [10]{_egb &=0x7FFF;if _eda .GBAtY [10]==0&&_eda .GBAtX [10]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [10]&0x1))<<15;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [10]),_dcbb +int (_eda .GBAtY [10])))<<15;};};if _eda .GBAtOverride [11]{_egb &=0xFDFF;if _eda .GBAtY [11]==0&&_eda .GBAtX [11]>=-int8 (_feac ){_egb |=(_gcb >>uint (int8 (_cab )-_eda .GBAtX [11]&0x1))<<10;
}else {_egb |=int (_eda .getPixel (_cff +int (_eda .GBAtX [11]),_dcbb +int (_eda .GBAtY [11])))<<10;};};return _egb ;};func (_edge *GenericRegion )writeGBAtPixels (_aeeg _d .BinaryWriter )(_aaf int ,_ddfb error ){const _fagb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _edge .UseMMR {return 0,nil ;};_aeac :=1;if _edge .GBTemplate ==0{_aeac =4;}else if _edge .UseExtTemplates {_aeac =12;};if len (_edge .GBAtX )!=_aeac {return 0,_bde .Errorf (_fagb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_edge .GBAtY )!=_aeac {return 0,_bde .Errorf (_fagb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _bfaee :=0;_bfaee < _aeac ;_bfaee ++{if _ddfb =_aeeg .WriteByte (byte (_edge .GBAtX [_bfaee ]));_ddfb !=nil {return _aaf ,_bde .Wrap (_ddfb ,_fagb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_aaf ++;if _ddfb =_aeeg .WriteByte (byte (_edge .GBAtY [_bfaee ]));
_ddfb !=nil {return _aaf ,_bde .Wrap (_ddfb ,_fagb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_aaf ++;};return _aaf ,nil ;};func (_cedd *SymbolDictionary )setRefinementAtPixels ()error {if !_cedd .UseRefinementAggregation ||_cedd .SdrTemplate !=0{return nil ;
};if _efgf :=_cedd .readRefinementAtPixels (2);_efgf !=nil {return _efgf ;};return nil ;};func (_egae *HalftoneRegion )parseHeader ()error {if _aggd :=_egae .RegionSegment .parseHeader ();_aggd !=nil {return _aggd ;};_ccdb ,_ggbf :=_egae ._faa .ReadBit ();
if _ggbf !=nil {return _ggbf ;};_egae .HDefaultPixel =int8 (_ccdb );_eeec ,_ggbf :=_egae ._faa .ReadBits (3);if _ggbf !=nil {return _ggbf ;};_egae .CombinationOperator =_gc .CombinationOperator (_eeec &0xf);_ccdb ,_ggbf =_egae ._faa .ReadBit ();if _ggbf !=nil {return _ggbf ;
};if _ccdb ==1{_egae .HSkipEnabled =true ;};_eeec ,_ggbf =_egae ._faa .ReadBits (2);if _ggbf !=nil {return _ggbf ;};_egae .HTemplate =byte (_eeec &0xf);_ccdb ,_ggbf =_egae ._faa .ReadBit ();if _ggbf !=nil {return _ggbf ;};if _ccdb ==1{_egae .IsMMREncoded =true ;
};_eeec ,_ggbf =_egae ._faa .ReadBits (32);if _ggbf !=nil {return _ggbf ;};_egae .HGridWidth =uint32 (_eeec &_b .MaxUint32 );_eeec ,_ggbf =_egae ._faa .ReadBits (32);if _ggbf !=nil {return _ggbf ;};_egae .HGridHeight =uint32 (_eeec &_b .MaxUint32 );_eeec ,_ggbf =_egae ._faa .ReadBits (32);
if _ggbf !=nil {return _ggbf ;};_egae .HGridX =int32 (_eeec &_b .MaxInt32 );_eeec ,_ggbf =_egae ._faa .ReadBits (32);if _ggbf !=nil {return _ggbf ;};_egae .HGridY =int32 (_eeec &_b .MaxInt32 );_eeec ,_ggbf =_egae ._faa .ReadBits (16);if _ggbf !=nil {return _ggbf ;
};_egae .HRegionX =uint16 (_eeec &_b .MaxUint16 );_eeec ,_ggbf =_egae ._faa .ReadBits (16);if _ggbf !=nil {return _ggbf ;};_egae .HRegionY =uint16 (_eeec &_b .MaxUint16 );if _ggbf =_egae .computeSegmentDataStructure ();_ggbf !=nil {return _ggbf ;};return _egae .checkInput ();
};func (_bff *Header )Encode (w _d .BinaryWriter )(_gdeg int ,_ddd error ){const _dcae ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _eeb _d .BinaryWriter ;_gd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _ddd !=nil {_gd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ddd );}else {_gd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bff );
_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _bff .SegmentData !=nil {_bab ,_cbf :=_bff .SegmentData .(SegmentEncoder );
if !_cbf {return 0,_bde .Errorf (_dcae ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bff .SegmentData );
};_eeb =_d .BufferedMSB ();_gdeg ,_ddd =_bab .Encode (_eeb );if _ddd !=nil {return 0,_bde .Wrap (_ddd ,_dcae ,"");};_bff .SegmentDataLength =uint64 (_gdeg );};if _bff .pageSize ()==4{_bff .PageAssociationFieldSize =true ;};var _fcgd int ;_fcgd ,_ddd =_bff .writeSegmentNumber (w );
if _ddd !=nil {return 0,_bde .Wrap (_ddd ,_dcae ,"");};_gdeg +=_fcgd ;if _ddd =_bff .writeFlags (w );_ddd !=nil {return _gdeg ,_bde .Wrap (_ddd ,_dcae ,"");};_gdeg ++;_fcgd ,_ddd =_bff .writeReferredToCount (w );if _ddd !=nil {return 0,_bde .Wrap (_ddd ,_dcae ,"");
};_gdeg +=_fcgd ;_fcgd ,_ddd =_bff .writeReferredToSegments (w );if _ddd !=nil {return 0,_bde .Wrap (_ddd ,_dcae ,"");};_gdeg +=_fcgd ;_fcgd ,_ddd =_bff .writeSegmentPageAssociation (w );if _ddd !=nil {return 0,_bde .Wrap (_ddd ,_dcae ,"");};_gdeg +=_fcgd ;
_fcgd ,_ddd =_bff .writeSegmentDataLength (w );if _ddd !=nil {return 0,_bde .Wrap (_ddd ,_dcae ,"");};_gdeg +=_fcgd ;_bff .HeaderLength =int64 (_gdeg )-int64 (_bff .SegmentDataLength );if _eeb !=nil {if _ ,_ddd =w .Write (_eeb .Data ());_ddd !=nil {return _gdeg ,_bde .Wrap (_ddd ,_dcae ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _gdeg ,nil ;};func _dadffa (_gbcf *_d .Reader ,_aeega *Header )*TextRegion {_gdff :=&TextRegion {_dcbba :_gbcf ,Header :_aeega ,RegionInfo :NewRegionSegment (_gbcf )};return _gdff ;};func (_gdcb *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gdcb ._faee };
func (_fgag *PatternDictionary )checkInput ()error {if _fgag .HdpHeight < 1||_fgag .HdpWidth < 1{return _ca .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _fgag .IsMMREncoded {if _fgag .HDTemplate !=0{_gd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_bafe *TextRegion )String ()string {_efgce :=&_bd .Builder {};_efgce .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_efgce .WriteString (_bafe .RegionInfo .String ()+"\u000a");_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bafe .SbrTemplate ));
_efgce .WriteString (_gg .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bafe .SbDsOffset ));_efgce .WriteString (_gg .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bafe .DefaultPixel ));
_efgce .WriteString (_gg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bafe .CombinationOperator ));_efgce .WriteString (_gg .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bafe .IsTransposed ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bafe .ReferenceCorner ));_efgce .WriteString (_gg .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bafe .UseRefinement ));
_efgce .WriteString (_gg .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bafe .IsHuffmanEncoded ));if _bafe .IsHuffmanEncoded {_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bafe .SbHuffRSize ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bafe .SbHuffRDY ));_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bafe .SbHuffRDX ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bafe .SbHuffRDHeight ));_efgce .WriteString (_gg .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bafe .SbHuffRDWidth ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bafe .SbHuffDT ));_efgce .WriteString (_gg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bafe .SbHuffDS ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bafe .SbHuffFS ));};_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bafe .SbrATX ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bafe .SbrATY ));_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bafe .NumberOfSymbolInstances ));
_efgce .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bafe .SbrATX ));return _efgce .String ();};func (_acd *GenericRefinementRegion )getPixel (_ffa *_gc .Bitmap ,_egd ,_dag int )int {if _egd < 0||_egd >=_ffa .Width {return 0;
};if _dag < 0||_dag >=_ffa .Height {return 0;};if _ffa .GetPixel (_egd ,_dag ){return 1;};return 0;};func (_fgeb *SymbolDictionary )decodeAggregate (_edbd ,_gefb uint32 )error {var (_edfd int64 ;_bbee error ;);if _fgeb .IsHuffmanEncoded {_edfd ,_bbee =_fgeb .huffDecodeRefAggNInst ();
if _bbee !=nil {return _bbee ;};}else {_edade ,_fabe :=_fgeb ._efcac .DecodeInt (_fgeb ._agad );if _fabe !=nil {return _fabe ;};_edfd =int64 (_edade );};if _edfd > 1{return _fgeb .decodeThroughTextRegion (_edbd ,_gefb ,uint32 (_edfd ));}else if _edfd ==1{return _fgeb .decodeRefinedSymbol (_edbd ,_gefb );
};return nil ;};func (_dbgd *PageInformationSegment )Init (h *Header ,r *_d .Reader )(_ceggd error ){_dbgd ._acea =r ;if _ceggd =_dbgd .parseHeader ();_ceggd !=nil {return _bde .Wrap (_ceggd ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_fdcad *PageInformationSegment )readIsStriped ()error {_fgcc ,_cece :=_fdcad ._acea .ReadBit ();if _cece !=nil {return _cece ;};if _fgcc ==1{_fdcad .IsStripe =true ;};return nil ;};func (_fdacg *SymbolDictionary )setInSyms ()error {if _fdacg .Header .RTSegments !=nil {return _fdacg .retrieveImportSymbols ();
};_fdacg ._dcfaf =make ([]*_gc .Bitmap ,0);return nil ;};func (_abgd *PageInformationSegment )readIsLossless ()error {_ecgg ,_bfcc :=_abgd ._acea .ReadBit ();if _bfcc !=nil {return _bfcc ;};if _ecgg ==1{_abgd .IsLossless =true ;};return nil ;};func (_bcba *GenericRegion )decodeTemplate1 (_eeef ,_abeg ,_gfb int ,_aca ,_bda int )(_efdf error ){const _baad ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_eba ,_abg int ;_dfbe ,_dca int ;_aa byte ;_adg ,_fbgc int ;);if _eeef >=1{_aa ,_efdf =_bcba .Bitmap .GetByte (_bda );if _efdf !=nil {return _bde .Wrap (_efdf ,_baad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dfbe =int (_aa );};if _eeef >=2{_aa ,_efdf =_bcba .Bitmap .GetByte (_bda -_bcba .Bitmap .RowStride );
if _efdf !=nil {return _bde .Wrap (_efdf ,_baad ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dca =int (_aa )<<5;};_eba =((_dfbe >>1)&0x1f8)|((_dca >>1)&0x1e00);for _bcfa :=0;_bcfa < _gfb ;_bcfa =_adg {var (_aeb byte ;_ffd int ;);_adg =_bcfa +8;if _ggdb :=_abeg -_bcfa ;
_ggdb > 8{_ffd =8;}else {_ffd =_ggdb ;};if _eeef > 0{_dfbe <<=8;if _adg < _abeg {_aa ,_efdf =_bcba .Bitmap .GetByte (_bda +1);if _efdf !=nil {return _bde .Wrap (_efdf ,_baad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dfbe |=int (_aa );};};
if _eeef > 1{_dca <<=8;if _adg < _abeg {_aa ,_efdf =_bcba .Bitmap .GetByte (_bda -_bcba .Bitmap .RowStride +1);if _efdf !=nil {return _bde .Wrap (_efdf ,_baad ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dca |=int (_aa )<<5;};};for _geff :=0;
_geff < _ffd ;_geff ++{if _bcba ._ddge {_abg =_bcba .overrideAtTemplate1 (_eba ,_bcfa +_geff ,_eeef ,int (_aeb ),_geff );_bcba ._ead .SetIndex (int32 (_abg ));}else {_bcba ._ead .SetIndex (int32 (_eba ));};_fbgc ,_efdf =_bcba ._ace .DecodeBit (_bcba ._ead );
if _efdf !=nil {return _bde .Wrap (_efdf ,_baad ,"");};_aeb |=byte (_fbgc )<<uint (7-_geff );_gdcc :=uint (8-_geff );_eba =((_eba &0xefb)<<1)|_fbgc |((_dfbe >>_gdcc )&0x8)|((_dca >>_gdcc )&0x200);};if _cdf :=_bcba .Bitmap .SetByte (_aca ,_aeb );_cdf !=nil {return _bde .Wrap (_cdf ,_baad ,"");
};_aca ++;_bda ++;};return nil ;};func (_bfbff *PatternDictionary )computeSegmentDataStructure ()error {_bfbff .DataOffset =_bfbff ._abegf .AbsolutePosition ();_bfbff .DataHeaderLength =_bfbff .DataOffset -_bfbff .DataHeaderOffset ;_bfbff .DataLength =int64 (_bfbff ._abegf .AbsoluteLength ())-_bfbff .DataHeaderLength ;
return nil ;};func (_edgd *HalftoneRegion )computeX (_bbf ,_dgaaa int )int {return _edgd .shiftAndFill (int (_edgd .HGridX )+_bbf *int (_edgd .HRegionY )+_dgaaa *int (_edgd .HRegionX ));};func (_ccbb *TextRegion )decodeRI ()(int64 ,error ){if !_ccbb .UseRefinement {return 0,nil ;
};if _ccbb .IsHuffmanEncoded {_agdd ,_fcaa :=_ccbb ._dcbba .ReadBit ();return int64 (_agdd ),_fcaa ;};_babfc ,_aebce :=_ccbb ._daa .DecodeInt (_ccbb ._ceb );return int64 (_babfc ),_aebce ;};func (_fbg *GenericRegion )decodeSLTP ()(int ,error ){switch _fbg .GBTemplate {case 0:_fbg ._ead .SetIndex (0x9B25);
case 1:_fbg ._ead .SetIndex (0x795);case 2:_fbg ._ead .SetIndex (0xE5);case 3:_fbg ._ead .SetIndex (0x195);};return _fbg ._ace .DecodeBit (_fbg ._ead );};func (_gga *GenericRegion )Encode (w _d .BinaryWriter )(_bagf int ,_begd error ){const _gbd ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _gga .Bitmap ==nil {return 0,_bde .Error (_gbd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_gdf ,_begd :=_gga .RegionSegment .Encode (w );if _begd !=nil {return 0,_bde .Wrap (_begd ,_gbd ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_bagf +=_gdf ;if _begd =w .SkipBits (4);_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _efde int ;if _gga .IsTPGDon {_efde =1;};if _begd =w .WriteBit (_efde );
_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_efde =0;if _begd =w .WriteBit (int (_gga .GBTemplate >>1)&0x01);_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _begd =w .WriteBit (int (_gga .GBTemplate )&0x01);_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _gga .UseMMR {_efde =1;};if _begd =w .WriteBit (_efde );
_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bagf ++;if _gdf ,_begd =_gga .writeGBAtPixels (w );_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"");};_bagf +=_gdf ;_cde :=_cad .New ();
if _begd =_cde .EncodeBitmap (_gga .Bitmap ,_gga .IsTPGDon );_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"");};_cde .Final ();var _cadd int64 ;if _cadd ,_begd =_cde .WriteTo (w );_begd !=nil {return _bagf ,_bde .Wrap (_begd ,_gbd ,"");};_bagf +=int (_cadd );
return _bagf ,nil ;};func (_egcb *TextRegion )encodeSymbols (_agaff _d .BinaryWriter )(_fgdf int ,_gfebf error ){const _ebdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_cafb :=make ([]byte ,4);_f .BigEndian .PutUint32 (_cafb ,_egcb .NumberOfSymbols );
if _fgdf ,_gfebf =_agaff .Write (_cafb );_gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_bbacd ,_gfebf :=_gc .NewClassedPoints (_egcb ._eacc ,_egcb ._bfdf );
if _gfebf !=nil {return 0,_bde .Wrap (_gfebf ,_ebdb ,"");};var _cgcf ,_dcgg int ;_caca :=_cad .New ();_caca .Init ();if _gfebf =_caca .EncodeInteger (_cad .IADT ,0);_gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_cacg ,_gfebf :=_bbacd .GroupByY ();if _gfebf !=nil {return 0,_bde .Wrap (_gfebf ,_ebdb ,"");};for _ ,_ggaf :=range _cacg {_badg :=int (_ggaf .YAtIndex (0));_eaab :=_badg -_cgcf ;if _gfebf =_caca .EncodeInteger (_cad .IADT ,_eaab );_gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"");
};var _dfce int ;for _gacb ,_dbbe :=range _ggaf .IntSlice {switch _gacb {case 0:_aba :=int (_ggaf .XAtIndex (_gacb ))-_dcgg ;if _gfebf =_caca .EncodeInteger (_cad .IAFS ,_aba );_gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"");};_dcgg +=_aba ;
_dfce =_dcgg ;default:_gcfg :=int (_ggaf .XAtIndex (_gacb ))-_dfce ;if _gfebf =_caca .EncodeInteger (_cad .IADS ,_gcfg );_gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"");};_dfce +=_gcfg ;};_bfafe ,_fdab :=_egcb ._adgg .Get (_dbbe );if _fdab !=nil {return _fgdf ,_bde .Wrap (_fdab ,_ebdb ,"");
};_faabd ,_eegd :=_egcb ._bgd [_bfafe ];if !_eegd {_faabd ,_eegd =_egcb ._ddef [_bfafe ];if !_eegd {return _fgdf ,_bde .Errorf (_ebdb ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bfafe );
};};if _fdab =_caca .EncodeIAID (_egcb ._aedg ,_faabd );_fdab !=nil {return _fgdf ,_bde .Wrap (_fdab ,_ebdb ,"");};};if _gfebf =_caca .EncodeOOB (_cad .IADS );_gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"");};};_caca .Final ();_dgbb ,_gfebf :=_caca .WriteTo (_agaff );
if _gfebf !=nil {return _fgdf ,_bde .Wrap (_gfebf ,_ebdb ,"");};_fgdf +=int (_dgbb );return _fgdf ,nil ;};type GenericRefinementRegion struct{_cg templater ;_cb templater ;_cgb *_d .Reader ;_cbc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;
Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_gc .Bitmap ;ReferenceBitmap *_gc .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_bea *_ge .Decoder ;_a *_ge .DecoderStats ;_df bool ;_gfde []bool ;};func (_bdcde *RegionSegment )parseHeader ()error {const _acec ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_gd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_dadd ,_def :=_bdcde ._fggf .ReadBits (32);if _def !=nil {return _bde .Wrap (_def ,_acec ,"\u0077\u0069\u0064t\u0068");};_bdcde .BitmapWidth =uint32 (_dadd &_b .MaxUint32 );_dadd ,_def =_bdcde ._fggf .ReadBits (32);if _def !=nil {return _bde .Wrap (_def ,_acec ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_bdcde .BitmapHeight =uint32 (_dadd &_b .MaxUint32 );_dadd ,_def =_bdcde ._fggf .ReadBits (32);if _def !=nil {return _bde .Wrap (_def ,_acec ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bdcde .XLocation =uint32 (_dadd &_b .MaxUint32 );
_dadd ,_def =_bdcde ._fggf .ReadBits (32);if _def !=nil {return _bde .Wrap (_def ,_acec ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bdcde .YLocation =uint32 (_dadd &_b .MaxUint32 );if _ ,_def =_bdcde ._fggf .ReadBits (5);_def !=nil {return _bde .Wrap (_def ,_acec ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _def =_bdcde .readCombinationOperator ();_def !=nil {return _bde .Wrap (_def ,_acec ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_aga *GenericRefinementRegion )decodeTemplate (_afgc ,_bdg ,_fbe ,_bcd ,_gec ,_afc ,_fef ,_ffe ,_eaa ,_dgf int ,_bcad templater )(_baf error ){var (_eafd ,_dgaf ,_gda ,_age ,_bdb int16 ;
_dgfa ,_cf ,_cgf ,_efca int ;_bbg byte ;);if _eaa >=1&&(_eaa -1)< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf -_bcd );if _baf !=nil {return ;};_dgfa =int (_bbg );};if _eaa >=0&&(_eaa )< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf );
if _baf !=nil {return ;};_cf =int (_bbg );};if _eaa >=-1&&(_eaa +1)< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf +_bcd );if _baf !=nil {return ;};_cgf =int (_bbg );};_dgf ++;if _afgc >=1{_bbg ,_baf =_aga .RegionBitmap .GetByte (_ffe -_fbe );
if _baf !=nil {return ;};_efca =int (_bbg );};_ffe ++;_efdc :=_aga .ReferenceDX %8;_gafa :=6+_efdc ;_dgcb :=_dgf %_bcd ;if _gafa >=0{if _gafa < 8{_eafd =int16 (_dgfa >>uint (_gafa ))&0x07;};if _gafa < 8{_dgaf =int16 (_cf >>uint (_gafa ))&0x07;};if _gafa < 8{_gda =int16 (_cgf >>uint (_gafa ))&0x07;
};if _gafa ==6&&_dgcb > 1{if _eaa >=1&&(_eaa -1)< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf -_bcd -2);if _baf !=nil {return _baf ;};_eafd |=int16 (_bbg <<2)&0x04;};if _eaa >=0&&_eaa < _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf -2);
if _baf !=nil {return _baf ;};_dgaf |=int16 (_bbg <<2)&0x04;};if _eaa >=-1&&_eaa +1< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf +_bcd -2);if _baf !=nil {return _baf ;};_gda |=int16 (_bbg <<2)&0x04;};};if _gafa ==0{_dgfa =0;
_cf =0;_cgf =0;if _dgcb < _bcd -1{if _eaa >=1&&_eaa -1< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf -_bcd );if _baf !=nil {return _baf ;};_dgfa =int (_bbg );};if _eaa >=0&&_eaa < _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf );
if _baf !=nil {return _baf ;};_cf =int (_bbg );};if _eaa >=-1&&_eaa +1< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf +_bcd );if _baf !=nil {return _baf ;};_cgf =int (_bbg );};};_dgf ++;};}else {_eafd =int16 (_dgfa <<1)&0x07;
_dgaf =int16 (_cf <<1)&0x07;_gda =int16 (_cgf <<1)&0x07;_dgfa =0;_cf =0;_cgf =0;if _dgcb < _bcd -1{if _eaa >=1&&_eaa -1< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf -_bcd );if _baf !=nil {return _baf ;};_dgfa =int (_bbg );
};if _eaa >=0&&_eaa < _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf );if _baf !=nil {return _baf ;};_cf =int (_bbg );};if _eaa >=-1&&_eaa +1< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf +_bcd );
if _baf !=nil {return _baf ;};_cgf =int (_bbg );};_dgf ++;};_eafd |=int16 ((_dgfa >>7)&0x07);_dgaf |=int16 ((_cf >>7)&0x07);_gda |=int16 ((_cgf >>7)&0x07);};_age =int16 (_efca >>6);_bdb =0;_bgc :=(2-_efdc )%8;_dgfa <<=uint (_bgc );_cf <<=uint (_bgc );_cgf <<=uint (_bgc );
_efca <<=2;var _gfdg int ;for _edc :=0;_edc < _bdg ;_edc ++{_cbcf :=_edc &0x07;_ab :=_bcad .form (_eafd ,_dgaf ,_gda ,_age ,_bdb );if _aga ._df {_bbg ,_baf =_aga .RegionBitmap .GetByte (_aga .RegionBitmap .GetByteIndex (_edc ,_afgc ));if _baf !=nil {return _baf ;
};_aga ._a .SetIndex (int32 (_aga .overrideAtTemplate0 (int (_ab ),_edc ,_afgc ,int (_bbg ),_cbcf )));}else {_aga ._a .SetIndex (int32 (_ab ));};_gfdg ,_baf =_aga ._bea .DecodeBit (_aga ._a );if _baf !=nil {return _baf ;};if _baf =_aga .RegionBitmap .SetPixel (_edc ,_afgc ,byte (_gfdg ));
_baf !=nil {return _baf ;};_eafd =((_eafd <<1)|0x01&int16 (_dgfa >>7))&0x07;_dgaf =((_dgaf <<1)|0x01&int16 (_cf >>7))&0x07;_gda =((_gda <<1)|0x01&int16 (_cgf >>7))&0x07;_age =((_age <<1)|0x01&int16 (_efca >>7))&0x07;_bdb =int16 (_gfdg );if (_edc -int (_aga .ReferenceDX ))%8==5{_dgfa =0;
_cf =0;_cgf =0;if ((_edc -int (_aga .ReferenceDX ))/8)+1< _aga .ReferenceBitmap .RowStride {if _eaa >=1&&(_eaa -1)< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf -_bcd );if _baf !=nil {return _baf ;};_dgfa =int (_bbg );
};if _eaa >=0&&_eaa < _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf );if _baf !=nil {return _baf ;};_cf =int (_bbg );};if _eaa >=-1&&(_eaa +1)< _aga .ReferenceBitmap .Height {_bbg ,_baf =_aga .ReferenceBitmap .GetByte (_dgf +_bcd );
if _baf !=nil {return _baf ;};_cgf =int (_bbg );};};_dgf ++;}else {_dgfa <<=1;_cf <<=1;_cgf <<=1;};if _cbcf ==5&&_afgc >=1{if ((_edc >>3)+1)>=_aga .RegionBitmap .RowStride {_efca =0;}else {_bbg ,_baf =_aga .RegionBitmap .GetByte (_ffe -_fbe );if _baf !=nil {return _baf ;
};_efca =int (_bbg );};_ffe ++;}else {_efca <<=1;};};return nil ;};func (_dbab *TextRegion )getSymbols ()error {if _dbab .Header .RTSegments !=nil {return _dbab .initSymbols ();};return nil ;};func NewGenericRegion (r *_d .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cbce :r };
};func (_cdac *Header )writeReferredToSegments (_abcc _d .BinaryWriter )(_ceeg int ,_fedc error ){const _bffec ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_dbg uint16 ;
_bfbf uint32 ;);_agb :=_cdac .referenceSize ();_cfbe :=1;_cadc :=make ([]byte ,_agb );for _ ,_cgfa :=range _cdac .RTSNumbers {switch _agb {case 4:_bfbf =uint32 (_cgfa );_f .BigEndian .PutUint32 (_cadc ,_bfbf );_cfbe ,_fedc =_abcc .Write (_cadc );if _fedc !=nil {return 0,_bde .Wrap (_fedc ,_bffec ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");
};case 2:_dbg =uint16 (_cgfa );_f .BigEndian .PutUint16 (_cadc ,_dbg );_cfbe ,_fedc =_abcc .Write (_cadc );if _fedc !=nil {return 0,_bde .Wrap (_fedc ,_bffec ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _fedc =_abcc .WriteByte (byte (_cgfa ));
_fedc !=nil {return 0,_bde .Wrap (_fedc ,_bffec ,"\u0075\u0069\u006et\u0038");};};_ceeg +=_cfbe ;};return _ceeg ,nil ;};func (_bfgb *TextRegion )decodeDfs ()(int64 ,error ){if _bfgb .IsHuffmanEncoded {if _bfgb .SbHuffFS ==3{if _bfgb ._adaca ==nil {var _cddcd error ;
_bfgb ._adaca ,_cddcd =_bfgb .getUserTable (0);if _cddcd !=nil {return 0,_cddcd ;};};return _bfgb ._adaca .Decode (_bfgb ._dcbba );};_bcade ,_gcca :=_fc .GetStandardTable (6+int (_bfgb .SbHuffFS ));if _gcca !=nil {return 0,_gcca ;};return _bcade .Decode (_bfgb ._dcbba );
};_bec ,_aeegf :=_bfgb ._daa .DecodeInt (_bfgb ._effc );if _aeegf !=nil {return 0,_aeegf ;};return int64 (_bec ),nil ;};func (_ffg *Header )pageSize ()uint {if _ffg .PageAssociation <=255{return 1;};return 4;};var _ templater =&template0 {};func (_gbae *TextRegion )readUseRefinement ()error {if !_gbae .UseRefinement ||_gbae .SbrTemplate !=0{return nil ;
};var (_cbbdc byte ;_afaf error ;);_gbae .SbrATX =make ([]int8 ,2);_gbae .SbrATY =make ([]int8 ,2);_cbbdc ,_afaf =_gbae ._dcbba .ReadByte ();if _afaf !=nil {return _afaf ;};_gbae .SbrATX [0]=int8 (_cbbdc );_cbbdc ,_afaf =_gbae ._dcbba .ReadByte ();if _afaf !=nil {return _afaf ;
};_gbae .SbrATY [0]=int8 (_cbbdc );_cbbdc ,_afaf =_gbae ._dcbba .ReadByte ();if _afaf !=nil {return _afaf ;};_gbae .SbrATX [1]=int8 (_cbbdc );_cbbdc ,_afaf =_gbae ._dcbba .ReadByte ();if _afaf !=nil {return _afaf ;};_gbae .SbrATY [1]=int8 (_cbbdc );return nil ;
};func (_cffc *PageInformationSegment )parseHeader ()(_egad error ){_gd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _fgbg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _egad !=nil {_fgbg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_egad .Error ();}else {_fgbg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gd .Log .Trace (_fgbg );}();if _egad =_cffc .readWidthAndHeight ();
_egad !=nil {return _egad ;};if _egad =_cffc .readResolution ();_egad !=nil {return _egad ;};_ ,_egad =_cffc ._acea .ReadBit ();if _egad !=nil {return _egad ;};if _egad =_cffc .readCombinationOperatorOverrideAllowed ();_egad !=nil {return _egad ;};if _egad =_cffc .readRequiresAuxiliaryBuffer ();
_egad !=nil {return _egad ;};if _egad =_cffc .readCombinationOperator ();_egad !=nil {return _egad ;};if _egad =_cffc .readDefaultPixelValue ();_egad !=nil {return _egad ;};if _egad =_cffc .readContainsRefinement ();_egad !=nil {return _egad ;};if _egad =_cffc .readIsLossless ();
_egad !=nil {return _egad ;};if _egad =_cffc .readIsStriped ();_egad !=nil {return _egad ;};if _egad =_cffc .readMaxStripeSize ();_egad !=nil {return _egad ;};if _egad =_cffc .checkInput ();_egad !=nil {return _egad ;};_gd .Log .Trace ("\u0025\u0073",_cffc );
return nil ;};func (_acbed *TableSegment )HtOOB ()int32 {return _acbed ._cbade };func (_gcag *RegionSegment )Size ()int {return 17};func (_bgcf *TextRegion )GetRegionBitmap ()(*_gc .Bitmap ,error ){if _bgcf .RegionBitmap !=nil {return _bgcf .RegionBitmap ,nil ;
};if !_bgcf .IsHuffmanEncoded {if _ccab :=_bgcf .setCodingStatistics ();_ccab !=nil {return nil ,_ccab ;};};if _geadd :=_bgcf .createRegionBitmap ();_geadd !=nil {return nil ,_geadd ;};if _fbgad :=_bgcf .decodeSymbolInstances ();_fbgad !=nil {return nil ,_fbgad ;
};return _bgcf .RegionBitmap ,nil ;};func (_caf *GenericRegion )Init (h *Header ,r *_d .Reader )error {_caf .RegionSegment =NewRegionSegment (r );_caf ._cbce =r ;return _caf .parseHeader ();};func (_gge *GenericRegion )getPixel (_dbe ,_aegg int )int8 {if _dbe < 0||_dbe >=_gge .Bitmap .Width {return 0;
};if _aegg < 0||_aegg >=_gge .Bitmap .Height {return 0;};if _gge .Bitmap .GetPixel (_dbe ,_aegg ){return 1;};return 0;};func (_cc *GenericRefinementRegion )decodeTypicalPredictedLine (_eg ,_dcg ,_af ,_cd ,_ef ,_gad int )error {_ac :=_eg -int (_cc .ReferenceDY );
_ed :=_cc .ReferenceBitmap .GetByteIndex (0,_ac );_deb :=_cc .RegionBitmap .GetByteIndex (0,_eg );var _beg error ;switch _cc .TemplateID {case 0:_beg =_cc .decodeTypicalPredictedLineTemplate0 (_eg ,_dcg ,_af ,_cd ,_ef ,_gad ,_deb ,_ac ,_ed );case 1:_beg =_cc .decodeTypicalPredictedLineTemplate1 (_eg ,_dcg ,_af ,_cd ,_ef ,_gad ,_deb ,_ac ,_ed );
};return _beg ;};func (_fga *GenericRefinementRegion )parseHeader ()(_fbf error ){_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_efb :=_c .Now ();defer func (){if _fbf ==nil {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_c .Since (_efb ).Nanoseconds ());
}else {_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_fbf );
};}();if _fbf =_fga .RegionInfo .parseHeader ();_fbf !=nil {return _fbf ;};_ ,_fbf =_fga ._cgb .ReadBits (6);if _fbf !=nil {return _fbf ;};_fga .IsTPGROn ,_fbf =_fga ._cgb .ReadBool ();if _fbf !=nil {return _fbf ;};var _bga int ;_bga ,_fbf =_fga ._cgb .ReadBit ();
if _fbf !=nil {return _fbf ;};_fga .TemplateID =int8 (_bga );switch _fga .TemplateID {case 0:_fga .Template =_fga ._cg ;if _fbf =_fga .readAtPixels ();_fbf !=nil {return ;};case 1:_fga .Template =_fga ._cb ;};return nil ;};type Type int ;func (_acfc *TextRegion )setParameters (_gbfg *_ge .Decoder ,_cafa ,_bebbd bool ,_adgc ,_bagc uint32 ,_cecf uint32 ,_debb int8 ,_gfca uint32 ,_edfdd int8 ,_egdb _gc .CombinationOperator ,_dffd int8 ,_cafg int16 ,_cdeg ,_ddbf ,_gdda ,_bdfg ,_eecb ,_dabd ,_fegg ,_aefg ,_daeb ,_cgacd int8 ,_adcc ,_dcedd []int8 ,_cfffa []*_gc .Bitmap ,_ddfd int8 ){_acfc ._daa =_gbfg ;
_acfc .IsHuffmanEncoded =_cafa ;_acfc .UseRefinement =_bebbd ;_acfc .RegionInfo .BitmapWidth =_adgc ;_acfc .RegionInfo .BitmapHeight =_bagc ;_acfc .NumberOfSymbolInstances =_cecf ;_acfc .SbStrips =_debb ;_acfc .NumberOfSymbols =_gfca ;_acfc .DefaultPixel =_edfdd ;
_acfc .CombinationOperator =_egdb ;_acfc .IsTransposed =_dffd ;_acfc .ReferenceCorner =_cafg ;_acfc .SbDsOffset =_cdeg ;_acfc .SbHuffFS =_ddbf ;_acfc .SbHuffDS =_gdda ;_acfc .SbHuffDT =_bdfg ;_acfc .SbHuffRDWidth =_eecb ;_acfc .SbHuffRDHeight =_dabd ;_acfc .SbHuffRSize =_daeb ;
_acfc .SbHuffRDX =_fegg ;_acfc .SbHuffRDY =_aefg ;_acfc .SbrTemplate =_cgacd ;_acfc .SbrATX =_adcc ;_acfc .SbrATY =_dcedd ;_acfc .Symbols =_cfffa ;_acfc ._ffaeb =_ddfd ;};func (_gfebe *SymbolDictionary )Encode (w _d .BinaryWriter )(_fbad int ,_agfe error ){const _acbc ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _gfebe ==nil {return 0,_bde .Error (_acbc ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _fbad ,_agfe =_gfebe .encodeFlags (w );
_agfe !=nil {return _fbad ,_bde .Wrap (_agfe ,_acbc ,"");};_bbbc ,_agfe :=_gfebe .encodeATFlags (w );if _agfe !=nil {return _fbad ,_bde .Wrap (_agfe ,_acbc ,"");};_fbad +=_bbbc ;if _bbbc ,_agfe =_gfebe .encodeRefinementATFlags (w );_agfe !=nil {return _fbad ,_bde .Wrap (_agfe ,_acbc ,"");
};_fbad +=_bbbc ;if _bbbc ,_agfe =_gfebe .encodeNumSyms (w );_agfe !=nil {return _fbad ,_bde .Wrap (_agfe ,_acbc ,"");};_fbad +=_bbbc ;if _bbbc ,_agfe =_gfebe .encodeSymbols (w );_agfe !=nil {return _fbad ,_bde .Wrap (_agfe ,_acbc ,"");};_fbad +=_bbbc ;
return _fbad ,nil ;};func (_gfda *PageInformationSegment )String ()string {_gbcb :=&_bd .Builder {};_gbcb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_gbcb .WriteString (_gg .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gfda .PageBMHeight ));_gbcb .WriteString (_gg .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gfda .PageBMWidth ));
_gbcb .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gfda .ResolutionX ));_gbcb .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gfda .ResolutionY ));
_gbcb .WriteString (_gg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gfda ._fgad ));_gbcb .WriteString (_gg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gfda ._faee ));
_gbcb .WriteString (_gg .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gfda .IsLossless ));_gbcb .WriteString (_gg .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gfda ._dec ));
_gbcb .WriteString (_gg .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gfda ._caab ));_gbcb .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gfda .IsStripe ));
_gbcb .WriteString (_gg .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gfda .MaxStripeSize ));return _gbcb .String ();};func (_feba *TextRegion )checkInput ()error {const _gbbe ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_feba .UseRefinement {if _feba .SbrTemplate !=0{_gd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_feba .SbrTemplate =0;};};if _feba .SbHuffFS ==2||_feba .SbHuffRDWidth ==2||_feba .SbHuffRDHeight ==2||_feba .SbHuffRDX ==2||_feba .SbHuffRDY ==2{return _bde .Error (_gbbe ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_feba .UseRefinement {if _feba .SbHuffRSize !=0{_gd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_feba .SbHuffRSize =0;};if _feba .SbHuffRDY !=0{_gd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_feba .SbHuffRDY =0;};if _feba .SbHuffRDX !=0{_gd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_feba .SbHuffRDX =0;};if _feba .SbHuffRDWidth !=0{_gd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_feba .SbHuffRDWidth =0;};if _feba .SbHuffRDHeight !=0{_gd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_feba .SbHuffRDHeight =0;};};return nil ;
};func (_eebc *TextRegion )blit (_faec *_gc .Bitmap ,_cfaee int64 )error {if _eebc .IsTransposed ==0&&(_eebc .ReferenceCorner ==2||_eebc .ReferenceCorner ==3){_eebc ._adad +=int64 (_faec .Width -1);}else if _eebc .IsTransposed ==1&&(_eebc .ReferenceCorner ==0||_eebc .ReferenceCorner ==2){_eebc ._adad +=int64 (_faec .Height -1);
};_abed :=_eebc ._adad ;if _eebc .IsTransposed ==1{_abed ,_cfaee =_cfaee ,_abed ;};switch _eebc .ReferenceCorner {case 0:_cfaee -=int64 (_faec .Height -1);case 2:_cfaee -=int64 (_faec .Height -1);_abed -=int64 (_faec .Width -1);case 3:_abed -=int64 (_faec .Width -1);
};_gadb :=_gc .Blit (_faec ,_eebc .RegionBitmap ,int (_abed ),int (_cfaee ),_eebc .CombinationOperator );if _gadb !=nil {return _gadb ;};if _eebc .IsTransposed ==0&&(_eebc .ReferenceCorner ==0||_eebc .ReferenceCorner ==1){_eebc ._adad +=int64 (_faec .Width -1);
};if _eebc .IsTransposed ==1&&(_eebc .ReferenceCorner ==1||_eebc .ReferenceCorner ==3){_eebc ._adad +=int64 (_faec .Height -1);};return nil ;};func (_ggeg *SymbolDictionary )encodeNumSyms (_ffba _d .BinaryWriter )(_dgee int ,_eefd error ){const _bgbc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_dgae :=make ([]byte ,4);_f .BigEndian .PutUint32 (_dgae ,_ggeg .NumberOfExportedSymbols );if _dgee ,_eefd =_ffba .Write (_dgae );_eefd !=nil {return _dgee ,_bde .Wrap (_eefd ,_bgbc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_f .BigEndian .PutUint32 (_dgae ,_ggeg .NumberOfNewSymbols );_ddfab ,_eefd :=_ffba .Write (_dgae );if _eefd !=nil {return _dgee ,_bde .Wrap (_eefd ,_bgbc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dgee +_ddfab ,nil ;};
func (_gcbe *TextRegion )decodeIds ()(int64 ,error ){const _eecg ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _gcbe .IsHuffmanEncoded {if _gcbe .SbHuffDS ==3{if _gcbe ._efeb ==nil {_ggbbg :=0;if _gcbe .SbHuffFS ==3{_ggbbg ++;};var _bad error ;_gcbe ._efeb ,_bad =_gcbe .getUserTable (_ggbbg );
if _bad !=nil {return 0,_bde .Wrap (_bad ,_eecg ,"");};};return _gcbe ._efeb .Decode (_gcbe ._dcbba );};_gbed ,_bbed :=_fc .GetStandardTable (8+int (_gcbe .SbHuffDS ));if _bbed !=nil {return 0,_bde .Wrap (_bbed ,_eecg ,"");};return _gbed .Decode (_gcbe ._dcbba );
};_dbga ,_fadf :=_gcbe ._daa .DecodeInt (_gcbe ._ccgbe );if _fadf !=nil {return 0,_bde .Wrap (_fadf ,_eecg ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_dbga ),nil ;};func (_ggfg *SymbolDictionary )checkInput ()error {if _ggfg .SdHuffDecodeHeightSelection ==2{_gd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ggfg .SdHuffDecodeHeightSelection );
};if _ggfg .SdHuffDecodeWidthSelection ==2{_gd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ggfg .SdHuffDecodeWidthSelection );
};if _ggfg .IsHuffmanEncoded {if _ggfg .SdTemplate !=0{_gd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ggfg .SdTemplate );
};if !_ggfg .UseRefinementAggregation {if !_ggfg .UseRefinementAggregation {if _ggfg ._acdbd {_gd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ggfg ._acdbd =false ;};if _ggfg ._cdcb {_gd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ggfg ._cdcb =false ;};};};}else {if _ggfg .SdHuffBMSizeSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ggfg .SdHuffBMSizeSelection =0;};if _ggfg .SdHuffDecodeWidthSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ggfg .SdHuffDecodeWidthSelection =0;};if _ggfg .SdHuffDecodeHeightSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ggfg .SdHuffDecodeHeightSelection =0;};};if !_ggfg .UseRefinementAggregation {if _ggfg .SdrTemplate !=0{_gd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ggfg .SdrTemplate );
_ggfg .SdrTemplate =0;};};if !_ggfg .IsHuffmanEncoded ||!_ggfg .UseRefinementAggregation {if _ggfg .SdHuffAggInstanceSelection {_gd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ggfg .SdHuffAggInstanceSelection );
};};return nil ;};func (_dbgb *SymbolDictionary )setAtPixels ()error {if _dbgb .IsHuffmanEncoded {return nil ;};_agba :=1;if _dbgb .SdTemplate ==0{_agba =4;};if _gbgg :=_dbgb .readAtPixels (_agba );_gbgg !=nil {return _gbgg ;};return nil ;};func (_dfgd *TextRegion )decodeDT ()(_ecfc int64 ,_bcgc error ){if _dfgd .IsHuffmanEncoded {if _dfgd .SbHuffDT ==3{_ecfc ,_bcgc =_dfgd ._aafc .Decode (_dfgd ._dcbba );
if _bcgc !=nil {return 0,_bcgc ;};}else {var _fgafa _fc .Tabler ;_fgafa ,_bcgc =_fc .GetStandardTable (11+int (_dfgd .SbHuffDT ));if _bcgc !=nil {return 0,_bcgc ;};_ecfc ,_bcgc =_fgafa .Decode (_dfgd ._dcbba );if _bcgc !=nil {return 0,_bcgc ;};};}else {var _gbf int32 ;
_gbf ,_bcgc =_dfgd ._daa .DecodeInt (_dfgd ._ccfg );if _bcgc !=nil {return ;};_ecfc =int64 (_gbf );};_ecfc *=int64 (_dfgd .SbStrips );return _ecfc ,nil ;};func (_gafaa *Header )writeFlags (_cbbgf _d .BinaryWriter )(_cegfg error ){const _gfcf ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_ddgc :=byte (_gafaa .Type );if _cegfg =_cbbgf .WriteByte (_ddgc );_cegfg !=nil {return _bde .Wrap (_cegfg ,_gfcf ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_gafaa .RetainFlag &&!_gafaa .PageAssociationFieldSize {return nil ;};if _cegfg =_cbbgf .SkipBits (-8);_cegfg !=nil {return _bde .Wrap (_cegfg ,_gfcf ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _bage int ;if _gafaa .RetainFlag {_bage =1;};if _cegfg =_cbbgf .WriteBit (_bage );_cegfg !=nil {return _bde .Wrap (_cegfg ,_gfcf ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bage =0;
if _gafaa .PageAssociationFieldSize {_bage =1;};if _cegfg =_cbbgf .WriteBit (_bage );_cegfg !=nil {return _bde .Wrap (_cegfg ,_gfcf ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cbbgf .FinishByte ();
return nil ;};func (_caag *SymbolDictionary )decodeHeightClassCollectiveBitmap (_ecfa int64 ,_eecf ,_bdaf uint32 )(*_gc .Bitmap ,error ){if _ecfa ==0{_bcedb :=_gc .New (int (_bdaf ),int (_eecf ));var (_dbgg byte ;_abec error ;);for _eged :=0;_eged < len (_bcedb .Data );
_eged ++{_dbgg ,_abec =_caag ._cgad .ReadByte ();if _abec !=nil {return nil ,_abec ;};if _abec =_bcedb .SetByte (_eged ,_dbgg );_abec !=nil {return nil ,_abec ;};};return _bcedb ,nil ;};if _caag ._ceec ==nil {_caag ._ceec =NewGenericRegion (_caag ._cgad );
};_caag ._ceec .setParameters (true ,_caag ._cgad .AbsolutePosition (),_ecfa ,_eecf ,_bdaf );_caga ,_cdcbb :=_caag ._ceec .GetRegionBitmap ();if _cdcbb !=nil {return nil ,_cdcbb ;};return _caga ,nil ;};func NewHeader (d Documenter ,r *_d .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_ecf :=&Header {Reader :r };
if _dgcf :=_ecf .parse (d ,r ,offset ,organizationType );_dgcf !=nil {return nil ,_bde .Wrap (_dgcf ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _ecf ,nil ;};func (_bdag *TableSegment )HtPS ()int32 {return _bdag ._fcbd };func (_gefd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _gefd .IsHuffmanEncoded {switch _gefd .SdHuffDecodeWidthSelection {case 0:_debaf ,_fcba :=_fc .GetStandardTable (2);
if _fcba !=nil {return 0,_fcba ;};return _debaf .Decode (_gefd ._cgad );case 1:_bfeb ,_ebgga :=_fc .GetStandardTable (3);if _ebgga !=nil {return 0,_ebgga ;};return _bfeb .Decode (_gefd ._cgad );case 3:if _gefd ._cgee ==nil {var _abga int ;if _gefd .SdHuffDecodeHeightSelection ==3{_abga ++;
};_gaa ,_dfag :=_gefd .getUserTable (_abga );if _dfag !=nil {return 0,_dfag ;};_gefd ._cgee =_gaa ;};return _gefd ._cgee .Decode (_gefd ._cgad );};}else {_acfd ,_fbde :=_gefd ._efcac .DecodeInt (_gefd ._geffcb );if _fbde !=nil {return 0,_fbde ;};return int64 (_acfd ),nil ;
};return 0,nil ;};func (_fac *GenericRegion )decodeTemplate0b (_cfg ,_dbbc ,_bfae int ,_bgcb ,_cgd int )(_efg error ){const _gbca ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_ege ,_deag int ;_cega ,_ddf int ;
_edfb byte ;_bdba int ;);if _cfg >=1{_edfb ,_efg =_fac .Bitmap .GetByte (_cgd );if _efg !=nil {return _bde .Wrap (_efg ,_gbca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cega =int (_edfb );};if _cfg >=2{_edfb ,_efg =_fac .Bitmap .GetByte (_cgd -_fac .Bitmap .RowStride );
if _efg !=nil {return _bde .Wrap (_efg ,_gbca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ddf =int (_edfb )<<6;};_ege =(_cega &0xf0)|(_ddf &0x3800);for _ecae :=0;_ecae < _bfae ;_ecae =_bdba {var (_bdc byte ;_baae int ;);_bdba =_ecae +8;if _abf :=_dbbc -_ecae ;
_abf > 8{_baae =8;}else {_baae =_abf ;};if _cfg > 0{_cega <<=8;if _bdba < _dbbc {_edfb ,_efg =_fac .Bitmap .GetByte (_cgd +1);if _efg !=nil {return _bde .Wrap (_efg ,_gbca ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cega |=int (_edfb );};};
if _cfg > 1{_ddf <<=8;if _bdba < _dbbc {_edfb ,_efg =_fac .Bitmap .GetByte (_cgd -_fac .Bitmap .RowStride +1);if _efg !=nil {return _bde .Wrap (_efg ,_gbca ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ddf |=int (_edfb )<<6;};};for _bbc :=0;_bbc < _baae ;
_bbc ++{_cdb :=uint (7-_bbc );if _fac ._ddge {_deag =_fac .overrideAtTemplate0b (_ege ,_ecae +_bbc ,_cfg ,int (_bdc ),_bbc ,int (_cdb ));_fac ._ead .SetIndex (int32 (_deag ));}else {_fac ._ead .SetIndex (int32 (_ege ));};var _abd int ;_abd ,_efg =_fac ._ace .DecodeBit (_fac ._ead );
if _efg !=nil {return _bde .Wrap (_efg ,_gbca ,"");};_bdc |=byte (_abd <<_cdb );_ege =((_ege &0x7bf7)<<1)|_abd |((_cega >>_cdb )&0x10)|((_ddf >>_cdb )&0x800);};if _ccdf :=_fac .Bitmap .SetByte (_bgcb ,_bdc );_ccdf !=nil {return _bde .Wrap (_ccdf ,_gbca ,"");
};_bgcb ++;_cgd ++;};return nil ;};func (_fgf *SymbolDictionary )decodeNewSymbols (_agd ,_cbaf uint32 ,_bede *_gc .Bitmap ,_bced ,_aded int32 )error {if _fgf ._gaea ==nil {_fgf ._gaea =_eefe (_fgf ._cgad ,nil );if _fgf ._efcac ==nil {var _fgde error ;_fgf ._efcac ,_fgde =_ge .New (_fgf ._cgad );
if _fgde !=nil {return _fgde ;};};if _fgf ._dcbd ==nil {_fgf ._dcbd =_ge .NewStats (65536,1);};};_fgf ._gaea .setParameters (_fgf ._dcbd ,_fgf ._efcac ,_fgf .SdrTemplate ,_agd ,_cbaf ,_bede ,_bced ,_aded ,false ,_fgf .SdrATX ,_fgf .SdrATY );return _fgf .addSymbol (_fgf ._gaea );
};func (_eeaea *TableSegment )HtHigh ()int32 {return _eeaea ._dgef };func (_eefff *SymbolDictionary )setCodingStatistics ()error {if _eefff ._fdcg ==nil {_eefff ._fdcg =_ge .NewStats (512,1);};if _eefff ._acbe ==nil {_eefff ._acbe =_ge .NewStats (512,1);
};if _eefff ._geffcb ==nil {_eefff ._geffcb =_ge .NewStats (512,1);};if _eefff ._agad ==nil {_eefff ._agad =_ge .NewStats (512,1);};if _eefff ._fbgb ==nil {_eefff ._fbgb =_ge .NewStats (512,1);};if _eefff .UseRefinementAggregation &&_eefff ._ecfb ==nil {_eefff ._ecfb =_ge .NewStats (1<<uint (_eefff ._dffe ),1);
_eefff ._gcgc =_ge .NewStats (512,1);_eefff ._fgbe =_ge .NewStats (512,1);};if _eefff ._dcbd ==nil {_eefff ._dcbd =_ge .NewStats (65536,1);};if _eefff ._efcac ==nil {var _ffeae error ;_eefff ._efcac ,_ffeae =_ge .New (_eefff ._cgad );if _ffeae !=nil {return _ffeae ;
};};return nil ;};func (_fcfg *HalftoneRegion )computeGrayScalePlanes (_gbac []*_gc .Bitmap ,_fdfd int )([][]int ,error ){_cege :=make ([][]int ,_fcfg .HGridHeight );for _fbgg :=0;_fbgg < len (_cege );_fbgg ++{_cege [_fbgg ]=make ([]int ,_fcfg .HGridWidth );
};for _cdea :=0;_cdea < int (_fcfg .HGridHeight );_cdea ++{for _baca :=0;_baca < int (_fcfg .HGridWidth );_baca +=8{var _gbad int ;if _ccg :=int (_fcfg .HGridWidth )-_baca ;_ccg > 8{_gbad =8;}else {_gbad =_ccg ;};_gff :=_gbac [0].GetByteIndex (_baca ,_cdea );
for _gedg :=0;_gedg < _gbad ;_gedg ++{_gcc :=_gedg +_baca ;_cege [_cdea ][_gcc ]=0;for _baaed :=0;_baaed < _fdfd ;_baaed ++{_afd ,_dada :=_gbac [_baaed ].GetByte (_gff );if _dada !=nil {return nil ,_dada ;};_gdd :=_afd >>uint (7-_gcc &7);_gbaf :=_gdd &1;
_cfcb :=1<<uint (_baaed );_bbb :=int (_gbaf )*_cfcb ;_cege [_cdea ][_gcc ]+=_bbb ;};};};};return _cege ,nil ;};func (_dfeg *GenericRegion )overrideAtTemplate3 (_acab ,_cfce ,_ebb ,_dceb ,_bbcf int )int {_acab &=0x3EF;if _dfeg .GBAtY [0]==0&&_dfeg .GBAtX [0]>=-int8 (_bbcf ){_acab |=(_dceb >>uint (7-(int8 (_bbcf )+_dfeg .GBAtX [0]))&0x1)<<4;
}else {_acab |=int (_dfeg .getPixel (_cfce +int (_dfeg .GBAtX [0]),_ebb +int (_dfeg .GBAtY [0])))<<4;};return _acab ;};func (_fbga *HalftoneRegion )renderPattern (_adac [][]int )(_dbbb error ){var _dbc ,_aec int ;for _cgfb :=0;_cgfb < int (_fbga .HGridHeight );
_cgfb ++{for _edbc :=0;_edbc < int (_fbga .HGridWidth );_edbc ++{_dbc =_fbga .computeX (_cgfb ,_edbc );_aec =_fbga .computeY (_cgfb ,_edbc );_dfega :=_fbga .Patterns [_adac [_cgfb ][_edbc ]];if _dbbb =_gc .Blit (_dfega ,_fbga .HalftoneRegionBitmap ,_dbc +int (_fbga .HGridX ),_aec +int (_fbga .HGridY ),_fbga .CombinationOperator );
_dbbb !=nil {return _dbbb ;};};};return nil ;};func (_efad *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bffbe :=range _efad .Header .RTSegments {if _bffbe .Type ==0{_caagf ,_fbeag :=_bffbe .GetSegmentData ();if _fbeag !=nil {return _fbeag ;
};_eed ,_fbdg :=_caagf .(*SymbolDictionary );if !_fbdg {return _gg .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_caagf );
};_fadca ,_fbeag :=_eed .GetDictionary ();if _fbeag !=nil {return _gg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bffbe .SegmentNumber ,_fbeag .Error ());
};_efad ._dcfaf =append (_efad ._dcfaf ,_fadca ...);_efad ._bcgg +=_eed .NumberOfExportedSymbols ;};};return nil ;};func (_gdag *TextRegion )decodeSymbolInstances ()error {_agbd ,_gbcea :=_gdag .decodeStripT ();if _gbcea !=nil {return _gbcea ;};var (_beee int64 ;
_cebd uint32 ;);for _cebd < _gdag .NumberOfSymbolInstances {_acbg ,_dcdg :=_gdag .decodeDT ();if _dcdg !=nil {return _dcdg ;};_agbd +=_acbg ;var _cdcg int64 ;_bgca :=true ;_gdag ._adad =0;for {if _bgca {_cdcg ,_dcdg =_gdag .decodeDfs ();if _dcdg !=nil {return _dcdg ;
};_beee +=_cdcg ;_gdag ._adad =_beee ;_bgca =false ;}else {_cagf ,_gcad :=_gdag .decodeIds ();if _e .Is (_gcad ,_bb .ErrOOB ){break ;};if _gcad !=nil {return _gcad ;};if _cebd >=_gdag .NumberOfSymbolInstances {break ;};_gdag ._adad +=_cagf +int64 (_gdag .SbDsOffset );
};_geab ,_adgeb :=_gdag .decodeCurrentT ();if _adgeb !=nil {return _adgeb ;};_ggae :=_agbd +_geab ;_cdedf ,_adgeb :=_gdag .decodeID ();if _adgeb !=nil {return _adgeb ;};_cegga ,_adgeb :=_gdag .decodeRI ();if _adgeb !=nil {return _adgeb ;};_agef ,_adgeb :=_gdag .decodeIb (_cegga ,_cdedf );
if _adgeb !=nil {return _adgeb ;};if _adgeb =_gdag .blit (_agef ,_ggae );_adgeb !=nil {return _adgeb ;};_cebd ++;};};return nil ;};func (_feg *SymbolDictionary )readRefinementAtPixels (_fdddg int )error {_feg .SdrATX =make ([]int8 ,_fdddg );_feg .SdrATY =make ([]int8 ,_fdddg );
var (_dfagd byte ;_bfbfd error ;);for _fgcb :=0;_fgcb < _fdddg ;_fgcb ++{_dfagd ,_bfbfd =_feg ._cgad .ReadByte ();if _bfbfd !=nil {return _bfbfd ;};_feg .SdrATX [_fgcb ]=int8 (_dfagd );_dfagd ,_bfbfd =_feg ._cgad .ReadByte ();if _bfbfd !=nil {return _bfbfd ;
};_feg .SdrATY [_fgcb ]=int8 (_dfagd );};return nil ;};func (_fae *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gb ,_eb ,_gbe ,_ad ,_dfebb ,_dge ,_ggd ,_ecd ,_ag int )error {var (_fb ,_dad ,_bca ,_ce ,_dadf ,_efd int ;_ggg byte ;_gae error ;
);if _gb > 0{_ggg ,_gae =_fae .RegionBitmap .GetByte (_ggd -_gbe );if _gae !=nil {return _gae ;};_bca =int (_ggg );};if _ecd > 0&&_ecd <=_fae .ReferenceBitmap .Height {_ggg ,_gae =_fae .ReferenceBitmap .GetByte (_ag -_ad +_dge );if _gae !=nil {return _gae ;
};_ce =int (_ggg )<<4;};if _ecd >=0&&_ecd < _fae .ReferenceBitmap .Height {_ggg ,_gae =_fae .ReferenceBitmap .GetByte (_ag +_dge );if _gae !=nil {return _gae ;};_dadf =int (_ggg )<<1;};if _ecd > -2&&_ecd < _fae .ReferenceBitmap .Height -1{_ggg ,_gae =_fae .ReferenceBitmap .GetByte (_ag +_ad +_dge );
if _gae !=nil {return _gae ;};_efd =int (_ggg );};_fb =((_bca >>5)&0x6)|((_efd >>2)&0x30)|(_dadf &0x180)|(_ce &0xc00);var _gcee int ;for _db :=0;_db < _dfebb ;_db =_gcee {var _fce int ;_gcee =_db +8;var _bbe int ;if _bbe =_eb -_db ;_bbe > 8{_bbe =8;};_dadff :=_gcee < _eb ;
_dfaf :=_gcee < _fae .ReferenceBitmap .Width ;_dbb :=_dge +1;if _gb > 0{_ggg =0;if _dadff {_ggg ,_gae =_fae .RegionBitmap .GetByte (_ggd -_gbe +1);if _gae !=nil {return _gae ;};};_bca =(_bca <<8)|int (_ggg );};if _ecd > 0&&_ecd <=_fae .ReferenceBitmap .Height {var _eca int ;
if _dfaf {_ggg ,_gae =_fae .ReferenceBitmap .GetByte (_ag -_ad +_dbb );if _gae !=nil {return _gae ;};_eca =int (_ggg )<<4;};_ce =(_ce <<8)|_eca ;};if _ecd >=0&&_ecd < _fae .ReferenceBitmap .Height {var _fcd int ;if _dfaf {_ggg ,_gae =_fae .ReferenceBitmap .GetByte (_ag +_dbb );
if _gae !=nil {return _gae ;};_fcd =int (_ggg )<<1;};_dadf =(_dadf <<8)|_fcd ;};if _ecd > -2&&_ecd < (_fae .ReferenceBitmap .Height -1){_ggg =0;if _dfaf {_ggg ,_gae =_fae .ReferenceBitmap .GetByte (_ag +_ad +_dbb );if _gae !=nil {return _gae ;};};_efd =(_efd <<8)|int (_ggg );
};for _gaf :=0;_gaf < _bbe ;_gaf ++{var _dcf int ;_gfe :=false ;_cee :=(_fb >>4)&0x1ff;if _cee ==0x1ff{_gfe =true ;_dcf =1;}else if _cee ==0x00{_gfe =true ;};if !_gfe {if _fae ._df {_dad =_fae .overrideAtTemplate0 (_fb ,_db +_gaf ,_gb ,_fce ,_gaf );_fae ._a .SetIndex (int32 (_dad ));
}else {_fae ._a .SetIndex (int32 (_fb ));};_dcf ,_gae =_fae ._bea .DecodeBit (_fae ._a );if _gae !=nil {return _gae ;};};_feb :=uint (7-_gaf );_fce |=_dcf <<_feb ;_fb =((_fb &0xdb6)<<1)|_dcf |(_bca >>_feb +5)&0x002|((_efd >>_feb +2)&0x010)|((_dadf >>_feb )&0x080)|((_ce >>_feb )&0x400);
};_gae =_fae .RegionBitmap .SetByte (_ggd ,byte (_fce ));if _gae !=nil {return _gae ;};_ggd ++;_ag ++;};return nil ;};func (_fbfc *TextRegion )encodeFlags (_acgg _d .BinaryWriter )(_eegf int ,_gffbg error ){const _debab ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gffbg =_acgg .WriteBit (int (_fbfc .SbrTemplate ));_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_gffbg =_acgg .WriteBits (uint64 (_fbfc .SbDsOffset ),5);_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _gffbg =_acgg .WriteBit (int (_fbfc .DefaultPixel ));_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_gffbg =_acgg .WriteBits (uint64 (_fbfc .CombinationOperator ),2);
_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _gffbg =_acgg .WriteBit (int (_fbfc .IsTransposed ));_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_gffbg =_acgg .WriteBits (uint64 (_fbfc .ReferenceCorner ),2);_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_gffbg =_acgg .WriteBits (uint64 (_fbfc .LogSBStrips ),2);
_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bdga int ;if _fbfc .UseRefinement {_bdga =1;};if _gffbg =_acgg .WriteBit (_bdga );_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_bdga =0;if _fbfc .IsHuffmanEncoded {_bdga =1;};if _gffbg =_acgg .WriteBit (_bdga );_gffbg !=nil {return _eegf ,_bde .Wrap (_gffbg ,_debab ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_eegf =2;return _eegf ,nil ;};func (_gbge *SymbolDictionary )readRegionFlags ()error {var (_gebe uint64 ;
_dbaa int ;);_ ,_eeg :=_gbge ._cgad .ReadBits (3);if _eeg !=nil {return _eeg ;};_dbaa ,_eeg =_gbge ._cgad .ReadBit ();if _eeg !=nil {return _eeg ;};_gbge .SdrTemplate =int8 (_dbaa );_gebe ,_eeg =_gbge ._cgad .ReadBits (2);if _eeg !=nil {return _eeg ;};
_gbge .SdTemplate =int8 (_gebe &0xf);_dbaa ,_eeg =_gbge ._cgad .ReadBit ();if _eeg !=nil {return _eeg ;};if _dbaa ==1{_gbge ._acdbd =true ;};_dbaa ,_eeg =_gbge ._cgad .ReadBit ();if _eeg !=nil {return _eeg ;};if _dbaa ==1{_gbge ._cdcb =true ;};_dbaa ,_eeg =_gbge ._cgad .ReadBit ();
if _eeg !=nil {return _eeg ;};if _dbaa ==1{_gbge .SdHuffAggInstanceSelection =true ;};_dbaa ,_eeg =_gbge ._cgad .ReadBit ();if _eeg !=nil {return _eeg ;};_gbge .SdHuffBMSizeSelection =int8 (_dbaa );_gebe ,_eeg =_gbge ._cgad .ReadBits (2);if _eeg !=nil {return _eeg ;
};_gbge .SdHuffDecodeWidthSelection =int8 (_gebe &0xf);_gebe ,_eeg =_gbge ._cgad .ReadBits (2);if _eeg !=nil {return _eeg ;};_gbge .SdHuffDecodeHeightSelection =int8 (_gebe &0xf);_dbaa ,_eeg =_gbge ._cgad .ReadBit ();if _eeg !=nil {return _eeg ;};if _dbaa ==1{_gbge .UseRefinementAggregation =true ;
};_dbaa ,_eeg =_gbge ._cgad .ReadBit ();if _eeg !=nil {return _eeg ;};if _dbaa ==1{_gbge .IsHuffmanEncoded =true ;};return nil ;};func (_fcef *PageInformationSegment )encodeStripingInformation (_fbfd _d .BinaryWriter )(_bfec int ,_cdcd error ){const _ccbd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_fcef .IsStripe {if _bfec ,_cdcd =_fbfd .Write ([]byte {0x00,0x00});_cdcd !=nil {return 0,_bde .Wrap (_cdcd ,_ccbd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bfec ,nil ;};_cbg :=make ([]byte ,2);_f .BigEndian .PutUint16 (_cbg ,_fcef .MaxStripeSize |1<<15);
if _bfec ,_cdcd =_fbfd .Write (_cbg );_cdcd !=nil {return 0,_bde .Wrapf (_cdcd ,_ccbd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_fcef .MaxStripeSize );};return _bfec ,nil ;};func (_cbca *TextRegion )decodeCurrentT ()(int64 ,error ){if _cbca .SbStrips !=1{if _cbca .IsHuffmanEncoded {_ecag ,_gedc :=_cbca ._dcbba .ReadBits (byte (_cbca .LogSBStrips ));
return int64 (_ecag ),_gedc ;};_eege ,_ddfae :=_cbca ._daa .DecodeInt (_cbca ._bgcd );if _ddfae !=nil {return 0,_ddfae ;};return int64 (_eege ),nil ;};return 0,nil ;};func (_bfcce *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_cgfeg int ;_efae int32 ;
_ffed error ;_gfad =int32 (_bfcce ._bcgg +_bfcce .NumberOfNewSymbols );_fdcf =make ([]int ,_gfad ););for _daec :=int32 (0);_daec < _gfad ;_daec +=_efae {if _bfcce .IsHuffmanEncoded {_ecdda ,_ebgf :=_fc .GetStandardTable (1);if _ebgf !=nil {return nil ,_ebgf ;
};_bgce ,_ebgf :=_ecdda .Decode (_bfcce ._cgad );if _ebgf !=nil {return nil ,_ebgf ;};_efae =int32 (_bgce );}else {_efae ,_ffed =_bfcce ._efcac .DecodeInt (_bfcce ._fbgb );if _ffed !=nil {return nil ,_ffed ;};};if _efae !=0{if _daec +_efae > _gfad {return nil ,_bde .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _dgfaad :=_daec ;_dgfaad < _daec +_efae ;_dgfaad ++{_fdcf [_dgfaad ]=_cgfeg ;};};if _cgfeg ==0{_cgfeg =1;}else {_cgfeg =0;};};return _fdcf ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_bfed *HalftoneRegion )checkInput ()error {if _bfed .IsMMREncoded {if _bfed .HTemplate !=0{_gd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bfed .HTemplate );
};if _bfed .HSkipEnabled {_gd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bfed .HSkipEnabled );
};};return nil ;};func (_dced *SymbolDictionary )getSbSymCodeLen ()int8 {_eccd :=int8 (_b .Ceil (_b .Log (float64 (_dced ._bcgg +_dced .NumberOfNewSymbols ))/_b .Log (2)));if _dced .IsHuffmanEncoded &&_eccd < 1{return 1;};return _eccd ;};func (_ddgb *PageInformationSegment )CombinationOperator ()_gc .CombinationOperator {return _ddgb ._fgad ;
};type OrganizationType uint8 ;func (_bdcd *GenericRegion )overrideAtTemplate0a (_fdca ,_bcff ,_bgb ,_faf ,_ebgg ,_cegg int )int {if _bdcd .GBAtOverride [0]{_fdca &=0xFFEF;if _bdcd .GBAtY [0]==0&&_bdcd .GBAtX [0]>=-int8 (_ebgg ){_fdca |=(_faf >>uint (int8 (_cegg )-_bdcd .GBAtX [0]&0x1))<<4;
}else {_fdca |=int (_bdcd .getPixel (_bcff +int (_bdcd .GBAtX [0]),_bgb +int (_bdcd .GBAtY [0])))<<4;};};if _bdcd .GBAtOverride [1]{_fdca &=0xFBFF;if _bdcd .GBAtY [1]==0&&_bdcd .GBAtX [1]>=-int8 (_ebgg ){_fdca |=(_faf >>uint (int8 (_cegg )-_bdcd .GBAtX [1]&0x1))<<10;
}else {_fdca |=int (_bdcd .getPixel (_bcff +int (_bdcd .GBAtX [1]),_bgb +int (_bdcd .GBAtY [1])))<<10;};};if _bdcd .GBAtOverride [2]{_fdca &=0xF7FF;if _bdcd .GBAtY [2]==0&&_bdcd .GBAtX [2]>=-int8 (_ebgg ){_fdca |=(_faf >>uint (int8 (_cegg )-_bdcd .GBAtX [2]&0x1))<<11;
}else {_fdca |=int (_bdcd .getPixel (_bcff +int (_bdcd .GBAtX [2]),_bgb +int (_bdcd .GBAtY [2])))<<11;};};if _bdcd .GBAtOverride [3]{_fdca &=0x7FFF;if _bdcd .GBAtY [3]==0&&_bdcd .GBAtX [3]>=-int8 (_ebgg ){_fdca |=(_faf >>uint (int8 (_cegg )-_bdcd .GBAtX [3]&0x1))<<15;
}else {_fdca |=int (_bdcd .getPixel (_bcff +int (_bdcd .GBAtX [3]),_bgb +int (_bdcd .GBAtY [3])))<<15;};};return _fdca ;};var _ _fc .BasicTabler =&TableSegment {};func (_faeg *GenericRegion )computeSegmentDataStructure ()error {_faeg .DataOffset =_faeg ._cbce .AbsolutePosition ();
_faeg .DataHeaderLength =_faeg .DataOffset -_faeg .DataHeaderOffset ;_faeg .DataLength =int64 (_faeg ._cbce .AbsoluteLength ())-_faeg .DataHeaderLength ;return nil ;};func (_ggeb *Header )CleanSegmentData (){if _ggeb .SegmentData !=nil {_ggeb .SegmentData =nil ;
};};func (_gdccf *SymbolDictionary )encodeSymbols (_cbed _d .BinaryWriter )(_affe int ,_fdcab error ){const _dgfc ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_egfef :=_cad .New ();_egfef .Init ();_cba ,_fdcab :=_gdccf ._cdgf .SelectByIndexes (_gdccf ._gecb );
if _fdcab !=nil {return 0,_bde .Wrap (_fdcab ,_dgfc ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gagf :=map[*_gc .Bitmap ]int {};for _bed ,_dbag :=range _cba .Values {_gagf [_dbag ]=_bed ;};_cba .SortByHeight ();var _ebggb ,_agfb int ;_gebd ,_fdcab :=_cba .GroupByHeight ();
if _fdcab !=nil {return 0,_bde .Wrap (_fdcab ,_dgfc ,"");};for _ ,_gafaf :=range _gebd .Values {_cgefg :=_gafaf .Values [0].Height ;_fccd :=_cgefg -_ebggb ;if _fdcab =_egfef .EncodeInteger (_cad .IADH ,_fccd );_fdcab !=nil {return 0,_bde .Wrapf (_fdcab ,_dgfc ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fccd );
};_ebggb =_cgefg ;_fbbe ,_bdfc :=_gafaf .GroupByWidth ();if _bdfc !=nil {return 0,_bde .Wrapf (_bdfc ,_dgfc ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cgefg );};var _aafa int ;for _ ,_edce :=range _fbbe .Values {for _ ,_cfge :=range _edce .Values {_egeg :=_cfge .Width ;
_fgada :=_egeg -_aafa ;if _bdfc =_egfef .EncodeInteger (_cad .IADW ,_fgada );_bdfc !=nil {return 0,_bde .Wrapf (_bdfc ,_dgfc ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fgada );};_aafa +=_fgada ;
if _bdfc =_egfef .EncodeBitmap (_cfge ,false );_bdfc !=nil {return 0,_bde .Wrapf (_bdfc ,_dgfc ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_cgefg ,_egeg );};_ccgc :=_gagf [_cfge ];_gdccf ._cgab [_ccgc ]=_agfb ;
_agfb ++;};};if _bdfc =_egfef .EncodeOOB (_cad .IADW );_bdfc !=nil {return 0,_bde .Wrap (_bdfc ,_dgfc ,"\u0049\u0041\u0044\u0057");};};if _fdcab =_egfef .EncodeInteger (_cad .IAEX ,0);_fdcab !=nil {return 0,_bde .Wrap (_fdcab ,_dgfc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fdcab =_egfef .EncodeInteger (_cad .IAEX ,len (_gdccf ._gecb ));_fdcab !=nil {return 0,_bde .Wrap (_fdcab ,_dgfc ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_egfef .Final ();_gbdc ,_fdcab :=_egfef .WriteTo (_cbed );
if _fdcab !=nil {return 0,_bde .Wrap (_fdcab ,_dgfc ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_gbdc ),nil ;};func (_bfa *template1 )setIndex (_fdac *_ge .DecoderStats ){_fdac .SetIndex (0x080)};func (_bcee *TextRegion )decodeID ()(int64 ,error ){if _bcee .IsHuffmanEncoded {if _bcee ._ebdg ==nil {_bdde ,_gebb :=_bcee ._dcbba .ReadBits (byte (_bcee ._ffaeb ));
return int64 (_bdde ),_gebb ;};return _bcee ._ebdg .Decode (_bcee ._dcbba );};return _bcee ._daa .DecodeIAID (uint64 (_bcee ._ffaeb ),_bcee ._aacg );};type RegionSegment struct{_fggf *_d .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;
YLocation uint32 ;CombinaionOperator _gc .CombinationOperator ;};func (_bbfg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_gc .Points ,symbols *_gc .Bitmaps ,classIDs *_bf .IntSlice ,boxes *_gc .Boxes ,width ,height ,symBits int ){_bbfg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_bbfg ._bgd =globalSymbolsMap ;_bbfg ._ddef =localSymbolsMap ;_bbfg ._bfdf =comps ;_bbfg ._eacc =inLL ;_bbfg ._fcbcg =symbols ;_bbfg ._adgg =classIDs ;_bbfg ._gcab =boxes ;_bbfg ._aedg =symBits ;};func (_fgac *SymbolDictionary )readAtPixels (_cfcf int )error {_fgac .SdATX =make ([]int8 ,_cfcf );
_fgac .SdATY =make ([]int8 ,_cfcf );var (_efaf byte ;_bddg error ;);for _eeac :=0;_eeac < _cfcf ;_eeac ++{_efaf ,_bddg =_fgac ._cgad .ReadByte ();if _bddg !=nil {return _bddg ;};_fgac .SdATX [_eeac ]=int8 (_efaf );_efaf ,_bddg =_fgac ._cgad .ReadByte ();
if _bddg !=nil {return _bddg ;};_fgac .SdATY [_eeac ]=int8 (_efaf );};return nil ;};func (_deae *GenericRegion )decodeTemplate0a (_cge ,_ceg ,_gbcd int ,_gbdb ,_bfef int )(_cdd error ){const _agf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_eab ,_ecg int ;_bbag ,_ecdc int ;_debf byte ;_dee int ;);if _cge >=1{_debf ,_cdd =_deae .Bitmap .GetByte (_bfef );if _cdd !=nil {return _bde .Wrap (_cdd ,_agf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bbag =int (_debf );};if _cge >=2{_debf ,_cdd =_deae .Bitmap .GetByte (_bfef -_deae .Bitmap .RowStride );
if _cdd !=nil {return _bde .Wrap (_cdd ,_agf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ecdc =int (_debf )<<6;};_eab =(_bbag &0xf0)|(_ecdc &0x3800);for _ggag :=0;_ggag < _gbcd ;_ggag =_dee {var (_cfe byte ;_ggab int ;);_dee =_ggag +8;if _ggf :=_ceg -_ggag ;
_ggf > 8{_ggab =8;}else {_ggab =_ggf ;};if _cge > 0{_bbag <<=8;if _dee < _ceg {_debf ,_cdd =_deae .Bitmap .GetByte (_bfef +1);if _cdd !=nil {return _bde .Wrap (_cdd ,_agf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bbag |=int (_debf );};};if _cge > 1{_ebd :=_bfef -_deae .Bitmap .RowStride +1;
_ecdc <<=8;if _dee < _ceg {_debf ,_cdd =_deae .Bitmap .GetByte (_ebd );if _cdd !=nil {return _bde .Wrap (_cdd ,_agf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ecdc |=int (_debf )<<6;}else {_ecdc |=0;};};for _cbe :=0;_cbe < _ggab ;_cbe ++{_aeg :=uint (7-_cbe );
if _deae ._ddge {_ecg =_deae .overrideAtTemplate0a (_eab ,_ggag +_cbe ,_cge ,int (_cfe ),_cbe ,int (_aeg ));_deae ._ead .SetIndex (int32 (_ecg ));}else {_deae ._ead .SetIndex (int32 (_eab ));};var _eff int ;_eff ,_cdd =_deae ._ace .DecodeBit (_deae ._ead );
if _cdd !=nil {return _bde .Wrap (_cdd ,_agf ,"");};_cfe |=byte (_eff )<<_aeg ;_eab =((_eab &0x7bf7)<<1)|_eff |((_bbag >>_aeg )&0x10)|((_ecdc >>_aeg )&0x800);};if _baa :=_deae .Bitmap .SetByte (_gbdb ,_cfe );_baa !=nil {return _bde .Wrap (_baa ,_agf ,"");
};_gbdb ++;_bfef ++;};return nil ;};func (_fcbfb *GenericRegion )overrideAtTemplate2 (_dadg ,_agfd ,_eccgf ,_egca ,_cfgg int )int {_dadg &=0x3FB;if _fcbfb .GBAtY [0]==0&&_fcbfb .GBAtX [0]>=-int8 (_cfgg ){_dadg |=(_egca >>uint (7-(int8 (_cfgg )+_fcbfb .GBAtX [0]))&0x1)<<2;
}else {_dadg |=int (_fcbfb .getPixel (_agfd +int (_fcbfb .GBAtX [0]),_eccgf +int (_fcbfb .GBAtY [0])))<<2;};return _dadg ;};func (_gfbbe *TextRegion )setCodingStatistics ()error {if _gfbbe ._ccfg ==nil {_gfbbe ._ccfg =_ge .NewStats (512,1);};if _gfbbe ._effc ==nil {_gfbbe ._effc =_ge .NewStats (512,1);
};if _gfbbe ._ccgbe ==nil {_gfbbe ._ccgbe =_ge .NewStats (512,1);};if _gfbbe ._bgcd ==nil {_gfbbe ._bgcd =_ge .NewStats (512,1);};if _gfbbe ._ceb ==nil {_gfbbe ._ceb =_ge .NewStats (512,1);};if _gfbbe ._ceba ==nil {_gfbbe ._ceba =_ge .NewStats (512,1);
};if _gfbbe ._gfcd ==nil {_gfbbe ._gfcd =_ge .NewStats (512,1);};if _gfbbe ._aacg ==nil {_gfbbe ._aacg =_ge .NewStats (1<<uint (_gfbbe ._ffaeb ),1);};if _gfbbe ._efgc ==nil {_gfbbe ._efgc =_ge .NewStats (512,1);};if _gfbbe ._bcedg ==nil {_gfbbe ._bcedg =_ge .NewStats (512,1);
};if _gfbbe ._daa ==nil {var _bdaaa error ;_gfbbe ._daa ,_bdaaa =_ge .New (_gfbbe ._dcbba );if _bdaaa !=nil {return _bdaaa ;};};return nil ;};func (_bfefa *PatternDictionary )readGrayMax ()error {_gggeee ,_geba :=_bfefa ._abegf .ReadBits (32);if _geba !=nil {return _geba ;
};_bfefa .GrayMax =uint32 (_gggeee &_b .MaxUint32 );return nil ;};func (_dedef *RegionSegment )Encode (w _d .BinaryWriter )(_gadf int ,_fab error ){const _geffc ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_gfcb :=make ([]byte ,4);_f .BigEndian .PutUint32 (_gfcb ,_dedef .BitmapWidth );_gadf ,_fab =w .Write (_gfcb );if _fab !=nil {return 0,_bde .Wrap (_fab ,_geffc ,"\u0057\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_gfcb ,_dedef .BitmapHeight );var _bfaa int ;
_bfaa ,_fab =w .Write (_gfcb );if _fab !=nil {return 0,_bde .Wrap (_fab ,_geffc ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_gadf +=_bfaa ;_f .BigEndian .PutUint32 (_gfcb ,_dedef .XLocation );_bfaa ,_fab =w .Write (_gfcb );if _fab !=nil {return 0,_bde .Wrap (_fab ,_geffc ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_gadf +=_bfaa ;_f .BigEndian .PutUint32 (_gfcb ,_dedef .YLocation );_bfaa ,_fab =w .Write (_gfcb );if _fab !=nil {return 0,_bde .Wrap (_fab ,_geffc ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gadf +=_bfaa ;if _fab =w .WriteByte (byte (_dedef .CombinaionOperator )&0x07);
_fab !=nil {return 0,_bde .Wrap (_fab ,_geffc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_gadf ++;return _gadf ,nil ;};func (_cfc *GenericRegion )GetRegionInfo ()*RegionSegment {return _cfc .RegionSegment };
func (_gdaf *GenericRegion )decodeTemplate2 (_dfed ,_bcaf ,_dgg int ,_fddd ,_agg int )(_aged error ){const _aff ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_egf ,_abcb int ;_edg ,_fge int ;_cdfb byte ;_gfea ,_dfdg int ;
);if _dfed >=1{_cdfb ,_aged =_gdaf .Bitmap .GetByte (_agg );if _aged !=nil {return _bde .Wrap (_aged ,_aff ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_edg =int (_cdfb );};if _dfed >=2{_cdfb ,_aged =_gdaf .Bitmap .GetByte (_agg -_gdaf .Bitmap .RowStride );
if _aged !=nil {return _bde .Wrap (_aged ,_aff ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_fge =int (_cdfb )<<4;};_egf =(_edg >>3&0x7c)|(_fge >>3&0x380);for _cede :=0;_cede < _dgg ;_cede =_gfea {var (_abb byte ;
_fdgc int ;);_gfea =_cede +8;if _fefd :=_bcaf -_cede ;_fefd > 8{_fdgc =8;}else {_fdgc =_fefd ;};if _dfed > 0{_edg <<=8;if _gfea < _bcaf {_cdfb ,_aged =_gdaf .Bitmap .GetByte (_agg +1);if _aged !=nil {return _bde .Wrap (_aged ,_aff ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_edg |=int (_cdfb );};};if _dfed > 1{_fge <<=8;if _gfea < _bcaf {_cdfb ,_aged =_gdaf .Bitmap .GetByte (_agg -_gdaf .Bitmap .RowStride +1);if _aged !=nil {return _bde .Wrap (_aged ,_aff ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_fge |=int (_cdfb )<<4;};};for _afe :=0;_afe < _fdgc ;_afe ++{_fccc :=uint (10-_afe );if _gdaf ._ddge {_abcb =_gdaf .overrideAtTemplate2 (_egf ,_cede +_afe ,_dfed ,int (_abb ),_afe );_gdaf ._ead .SetIndex (int32 (_abcb ));}else {_gdaf ._ead .SetIndex (int32 (_egf ));
};_dfdg ,_aged =_gdaf ._ace .DecodeBit (_gdaf ._ead );if _aged !=nil {return _bde .Wrap (_aged ,_aff ,"");};_abb |=byte (_dfdg <<uint (7-_afe ));_egf =((_egf &0x1bd)<<1)|_dfdg |((_edg >>_fccc )&0x4)|((_fge >>_fccc )&0x80);};if _eadb :=_gdaf .Bitmap .SetByte (_fddd ,_abb );
_eadb !=nil {return _bde .Wrap (_eadb ,_aff ,"");};_fddd ++;_agg ++;};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_gcga *PageInformationSegment )readResolution ()error {_fcccg ,_fafe :=_gcga ._acea .ReadBits (32);if _fafe !=nil {return _fafe ;
};_gcga .ResolutionX =int (_fcccg &_b .MaxInt32 );_fcccg ,_fafe =_gcga ._acea .ReadBits (32);if _fafe !=nil {return _fafe ;};_gcga .ResolutionY =int (_fcccg &_b .MaxInt32 );return nil ;};func (_abfe *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_abfe .SdHuffAggInstanceSelection {_dffae ,_dcag :=_fc .GetStandardTable (1);
if _dcag !=nil {return 0,_dcag ;};return _dffae .Decode (_abfe ._cgad );};if _abfe ._agce ==nil {var (_adacb int ;_ggfb error ;);if _abfe .SdHuffDecodeHeightSelection ==3{_adacb ++;};if _abfe .SdHuffDecodeWidthSelection ==3{_adacb ++;};if _abfe .SdHuffBMSizeSelection ==3{_adacb ++;
};_abfe ._agce ,_ggfb =_abfe .getUserTable (_adacb );if _ggfb !=nil {return 0,_ggfb ;};};return _abfe ._agce .Decode (_abfe ._cgad );};func (_aag *SymbolDictionary )String ()string {_beaa :=&_bd .Builder {};_beaa .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_beaa .WriteString (_gg .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_aag .SdrTemplate ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_aag .SdTemplate ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_aag ._acdbd ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_aag ._cdcb ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_aag .SdHuffAggInstanceSelection ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_aag .SdHuffBMSizeSelection ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_aag .SdHuffDecodeWidthSelection ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_aag .SdHuffDecodeHeightSelection ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_aag .UseRefinementAggregation ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_aag .IsHuffmanEncoded ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_aag .SdATX ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_aag .SdATY ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_aag .SdrATX ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_aag .SdrATY ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_aag .NumberOfExportedSymbols ));_beaa .WriteString (_gg .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_aag .NumberOfNewSymbols ));
_beaa .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_aag ._bcgg ));_beaa .WriteString (_gg .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_aag ._bdbb ));
return _beaa .String ();};func (_aed *Header )readSegmentNumber (_cfb *_d .Reader )error {const _bfab ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_bagd :=make ([]byte ,4);_ ,_gbafc :=_cfb .Read (_bagd );
if _gbafc !=nil {return _bde .Wrap (_gbafc ,_bfab ,"");};_aed .SegmentNumber =_f .BigEndian .Uint32 (_bagd );return nil ;};func (_ee *GenericRefinementRegion )Init (header *Header ,r *_d .Reader )error {_ee ._cbc =header ;_ee ._cgb =r ;_ee .RegionInfo =NewRegionSegment (r );
return _ee .parseHeader ();};func (_aaa *TextRegion )GetRegionInfo ()*RegionSegment {return _aaa .RegionInfo };func (_efef *Header )referenceSize ()uint {switch {case _efef .SegmentNumber <=255:return 1;case _efef .SegmentNumber <=65535:return 2;default:return 4;
};};func (_edad *SymbolDictionary )encodeRefinementATFlags (_bccc _d .BinaryWriter )(_edaa int ,_agge error ){const _fca ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_edad .UseRefinementAggregation ||_edad .SdrTemplate !=0{return 0,nil ;};for _ffgc :=0;_ffgc < 2;_ffgc ++{if _agge =_bccc .WriteByte (byte (_edad .SdrATX [_ffgc ]));_agge !=nil {return _edaa ,_bde .Wrapf (_agge ,_fca ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ffgc );
};_edaa ++;if _agge =_bccc .WriteByte (byte (_edad .SdrATY [_ffgc ]));_agge !=nil {return _edaa ,_bde .Wrapf (_agge ,_fca ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ffgc );};_edaa ++;};return _edaa ,nil ;};type GenericRegion struct{_cbce *_d .Reader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_ddge bool ;
Bitmap *_gc .Bitmap ;_ace *_ge .Decoder ;_ead *_ge .DecoderStats ;_gfed *_dd .Decoder ;};func (_geg *template0 )form (_edd ,_ddg ,_afb ,_ged ,_cef int16 )int16 {return (_edd <<10)|(_ddg <<7)|(_afb <<4)|(_ged <<1)|_cef ;};func (_gbbd *TextRegion )initSymbols ()error {const _bfdfc ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_eeba :=range _gbbd .Header .RTSegments {if _eeba ==nil {return _bde .Error (_bfdfc ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _eeba .Type ==0{_efdfd ,_eafbf :=_eeba .GetSegmentData ();if _eafbf !=nil {return _bde .Wrap (_eafbf ,_bfdfc ,"");};_cefg ,_fbeaf :=_efdfd .(*SymbolDictionary );if !_fbeaf {return _bde .Error (_bfdfc ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cefg ._ecfb =_gbbd ._aacg ;_debg ,_eafbf :=_cefg .GetDictionary ();if _eafbf !=nil {return _bde .Wrap (_eafbf ,_bfdfc ,"");};_gbbd .Symbols =append (_gbbd .Symbols ,_debg ...);};};_gbbd .NumberOfSymbols =uint32 (len (_gbbd .Symbols ));return nil ;};
func (_ffae *HalftoneRegion )Init (hd *Header ,r *_d .Reader )error {_ffae ._faa =r ;_ffae ._aab =hd ;_ffae .RegionSegment =NewRegionSegment (r );return _ffae .parseHeader ();};func (_dc *GenericRefinementRegion )GetRegionBitmap ()(*_gc .Bitmap ,error ){var _gfg error ;
_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gfg !=nil {_gd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gfg );
}else {_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dc .RegionBitmap !=nil {return _dc .RegionBitmap ,nil ;};_cgba :=0;if _dc .ReferenceBitmap ==nil {_dc .ReferenceBitmap ,_gfg =_dc .getGrReference ();if _gfg !=nil {return nil ,_gfg ;};};if _dc ._bea ==nil {_dc ._bea ,_gfg =_ge .New (_dc ._cgb );
if _gfg !=nil {return nil ,_gfg ;};};if _dc ._a ==nil {_dc ._a =_ge .NewStats (8192,1);};_dc .RegionBitmap =_gc .New (int (_dc .RegionInfo .BitmapWidth ),int (_dc .RegionInfo .BitmapHeight ));if _dc .TemplateID ==0{if _gfg =_dc .updateOverride ();_gfg !=nil {return nil ,_gfg ;
};};_ddad :=(_dc .RegionBitmap .Width +7)&-8;var _fa int ;if _dc .IsTPGROn {_fa =int (-_dc .ReferenceDY )*_dc .ReferenceBitmap .RowStride ;};_de :=_fa +1;for _ga :=0;_ga < _dc .RegionBitmap .Height ;_ga ++{if _dc .IsTPGROn {_dfb ,_bfe :=_dc .decodeSLTP ();
if _bfe !=nil {return nil ,_bfe ;};_cgba ^=_dfb ;};if _cgba ==0{_gfg =_dc .decodeOptimized (_ga ,_dc .RegionBitmap .Width ,_dc .RegionBitmap .RowStride ,_dc .ReferenceBitmap .RowStride ,_ddad ,_fa ,_de );if _gfg !=nil {return nil ,_gfg ;};}else {_gfg =_dc .decodeTypicalPredictedLine (_ga ,_dc .RegionBitmap .Width ,_dc .RegionBitmap .RowStride ,_dc .ReferenceBitmap .RowStride ,_ddad ,_fa );
if _gfg !=nil {return nil ,_gfg ;};};};return _dc .RegionBitmap ,nil ;};func (_gfd *EndOfStripe )Init (h *Header ,r *_d .Reader )error {_gfd ._ggb =r ;return _gfd .parseHeader ();};func (_afgb *PageInformationSegment )readMaxStripeSize ()error {_dbba ,_ffc :=_afgb ._acea .ReadBits (15);
if _ffc !=nil {return _ffc ;};_afgb .MaxStripeSize =uint16 (_dbba &_b .MaxUint16 );return nil ;};func (_fdfb *HalftoneRegion )computeY (_dabe ,_aaeg int )int {return _fdfb .shiftAndFill (int (_fdfb .HGridY )+_dabe *int (_fdfb .HRegionX )-_aaeg *int (_fdfb .HRegionY ));
};func (_abdd *Header )parse (_bcab Documenter ,_gdegc *_d .Reader ,_feda int64 ,_cfff OrganizationType )(_cec error ){const _dgab ="\u0070\u0061\u0072s\u0065";_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _cec !=nil {_gd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cec );}else {_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_cec =_gdegc .Seek (_feda ,_gf .SeekStart );if _cec !=nil {return _bde .Wrap (_cec ,_dgab ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _cec =_abdd .readSegmentNumber (_gdegc );_cec !=nil {return _bde .Wrap (_cec ,_dgab ,"");
};if _cec =_abdd .readHeaderFlags ();_cec !=nil {return _bde .Wrap (_cec ,_dgab ,"");};var _bafc uint64 ;_bafc ,_cec =_abdd .readNumberOfReferredToSegments (_gdegc );if _cec !=nil {return _bde .Wrap (_cec ,_dgab ,"");};_abdd .RTSNumbers ,_cec =_abdd .readReferredToSegmentNumbers (_gdegc ,int (_bafc ));
if _cec !=nil {return _bde .Wrap (_cec ,_dgab ,"");};_cec =_abdd .readSegmentPageAssociation (_bcab ,_gdegc ,_bafc ,_abdd .RTSNumbers ...);if _cec !=nil {return _bde .Wrap (_cec ,_dgab ,"");};if _abdd .Type !=TEndOfFile {if _cec =_abdd .readSegmentDataLength (_gdegc );
_cec !=nil {return _bde .Wrap (_cec ,_dgab ,"");};};_abdd .readDataStartOffset (_gdegc ,_cfff );_abdd .readHeaderLength (_gdegc ,_feda );_gd .Log .Trace ("\u0025\u0073",_abdd );return nil ;};type TableSegment struct{_aagb *_d .Reader ;_cbade int32 ;_fcbd int32 ;
_gfedg int32 ;_accc int32 ;_dgef int32 ;};func (_bcda *TextRegion )Init (header *Header ,r *_d .Reader )error {_bcda .Header =header ;_bcda ._dcbba =r ;_bcda .RegionInfo =NewRegionSegment (_bcda ._dcbba );return _bcda .parseHeader ();};func (_afbg *TextRegion )createRegionBitmap ()error {_afbg .RegionBitmap =_gc .New (int (_afbg .RegionInfo .BitmapWidth ),int (_afbg .RegionInfo .BitmapHeight ));
if _afbg .DefaultPixel !=0{_afbg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cbb *GenericRefinementRegion )overrideAtTemplate0 (_cgc ,_ffea ,_eee ,_fcbf ,_ebc int )int {if _cbb ._gfde [0]{_cgc &=0xfff7;if _cbb .GrAtY [0]==0&&int (_cbb .GrAtX [0])>=-_ebc {_cgc |=(_fcbf >>uint (7-(_ebc +int (_cbb .GrAtX [0])))&0x1)<<3;
}else {_cgc |=_cbb .getPixel (_cbb .RegionBitmap ,_ffea +int (_cbb .GrAtX [0]),_eee +int (_cbb .GrAtY [0]))<<3;};};if _cbb ._gfde [1]{_cgc &=0xefff;if _cbb .GrAtY [1]==0&&int (_cbb .GrAtX [1])>=-_ebc {_cgc |=(_fcbf >>uint (7-(_ebc +int (_cbb .GrAtX [1])))&0x1)<<12;
}else {_cgc |=_cbb .getPixel (_cbb .ReferenceBitmap ,_ffea +int (_cbb .GrAtX [1]),_eee +int (_cbb .GrAtY [1]));};};return _cgc ;};func (_edbg *GenericRegion )decodeLine (_adcd ,_fgge ,_bcf int )error {const _dcbg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_fcda :=_edbg .Bitmap .GetByteIndex (0,_adcd );_ggdg :=_fcda -_edbg .Bitmap .RowStride ;switch _edbg .GBTemplate {case 0:if !_edbg .UseExtTemplates {return _edbg .decodeTemplate0a (_adcd ,_fgge ,_bcf ,_fcda ,_ggdg );};return _edbg .decodeTemplate0b (_adcd ,_fgge ,_bcf ,_fcda ,_ggdg );
case 1:return _edbg .decodeTemplate1 (_adcd ,_fgge ,_bcf ,_fcda ,_ggdg );case 2:return _edbg .decodeTemplate2 (_adcd ,_fgge ,_bcf ,_fcda ,_ggdg );case 3:return _edbg .decodeTemplate3 (_adcd ,_fgge ,_bcf ,_fcda ,_ggdg );};return _bde .Errorf (_dcbg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_edbg .GBTemplate );
};func (_gcfe *PatternDictionary )readTemplate ()error {_cae ,_gdbe :=_gcfe ._abegf .ReadBits (2);if _gdbe !=nil {return _gdbe ;};_gcfe .HDTemplate =byte (_cae );return nil ;};func (_egg *PageInformationSegment )readDefaultPixelValue ()error {_fcge ,_eae :=_egg ._acea .ReadBit ();
if _eae !=nil {return _eae ;};_egg .DefaultPixelValue =uint8 (_fcge &0xf);return nil ;};func (_bba *EndOfStripe )LineNumber ()int {return _bba ._dda };func (_gcd *TableSegment )StreamReader ()*_d .Reader {return _gcd ._aagb };type template1 struct{};func (_deab *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _acbd ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _deab .SbHuffRSize ==0{_gcfb ,_cgeg :=_fc .GetStandardTable (1);if _cgeg !=nil {return 0,_bde .Wrap (_cgeg ,_acbd ,"");};return _gcfb .Decode (_deab ._dcbba );};if _deab ._egfg ==nil {var (_fgcbb int ;_baeb error ;);if _deab .SbHuffFS ==3{_fgcbb ++;
};if _deab .SbHuffDS ==3{_fgcbb ++;};if _deab .SbHuffDT ==3{_fgcbb ++;};if _deab .SbHuffRDWidth ==3{_fgcbb ++;};if _deab .SbHuffRDHeight ==3{_fgcbb ++;};if _deab .SbHuffRDX ==3{_fgcbb ++;};if _deab .SbHuffRDY ==3{_fgcbb ++;};_deab ._egfg ,_baeb =_deab .getUserTable (_fgcbb );
if _baeb !=nil {return 0,_bde .Wrap (_baeb ,_acbd ,"");};};_feaa ,_cddca :=_deab ._egfg .Decode (_deab ._dcbba );if _cddca !=nil {return 0,_bde .Wrap (_cddca ,_acbd ,"");};return _feaa ,nil ;};func (_fg *GenericRefinementRegion )getGrReference ()(*_gc .Bitmap ,error ){segments :=_fg ._cbc .RTSegments ;
if len (segments )==0{return nil ,_ca .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ea ,_gag :=segments [0].GetSegmentData ();
if _gag !=nil {return nil ,_gag ;};_dfa ,_gef :=_ea .(Regioner );if !_gef {return nil ,_gg .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ea );
};return _dfa .GetRegionBitmap ();};func (_gbgc *Header )readReferredToSegmentNumbers (_affb *_d .Reader ,_aad int )([]int ,error ){const _efbcc ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_aebb :=make ([]int ,_aad );if _aad > 0{_gbgc .RTSegments =make ([]*Header ,_aad );var (_dac uint64 ;_dbda error ;);for _afbd :=0;_afbd < _aad ;_afbd ++{_dac ,_dbda =_affb .ReadBits (byte (_gbgc .referenceSize ())<<3);if _dbda !=nil {return nil ,_bde .Wrapf (_dbda ,_efbcc ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_afbd );
};_aebb [_afbd ]=int (_dac &_b .MaxInt32 );};};return _aebb ,nil ;};func (_ec *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ec .RegionInfo };func (_cdef *PageInformationSegment )readWidthAndHeight ()error {_cgac ,_aedf :=_cdef ._acea .ReadBits (32);
if _aedf !=nil {return _aedf ;};_cdef .PageBMWidth =int (_cgac &_b .MaxInt32 );_cgac ,_aedf =_cdef ._acea .ReadBits (32);if _aedf !=nil {return _aedf ;};_cdef .PageBMHeight =int (_cgac &_b .MaxInt32 );return nil ;};func (_edfe *GenericRegion )setOverrideFlag (_abdf int ){_edfe .GBAtOverride [_abdf ]=true ;
_edfe ._ddge =true ;};func (_deagc *HalftoneRegion )combineGrayscalePlanes (_bgfa []*_gc .Bitmap ,_gdgb int )error {_cda :=0;for _adcf :=0;_adcf < _bgfa [_gdgb ].Height ;_adcf ++{for _cbbg :=0;_cbbg < _bgfa [_gdgb ].Width ;_cbbg +=8{_abbe ,_ecbb :=_bgfa [_gdgb +1].GetByte (_cda );
if _ecbb !=nil {return _ecbb ;};_acca ,_ecbb :=_bgfa [_gdgb ].GetByte (_cda );if _ecbb !=nil {return _ecbb ;};_ecbb =_bgfa [_gdgb ].SetByte (_cda ,_gc .CombineBytes (_acca ,_abbe ,_gc .CmbOpXor ));if _ecbb !=nil {return _ecbb ;};_cda ++;};};return nil ;
};func (_ded *Header )writeSegmentNumber (_bcbd _d .BinaryWriter )(_dgge int ,_efce error ){_dae :=make ([]byte ,4);_f .BigEndian .PutUint32 (_dae ,_ded .SegmentNumber );if _dgge ,_efce =_bcbd .Write (_dae );_efce !=nil {return 0,_bde .Wrap (_efce ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _dgge ,nil ;};type EndOfStripe struct{_ggb *_d .Reader ;_dda int ;};func (_beae *TextRegion )decodeRdh ()(int64 ,error ){const _ggdea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _beae .IsHuffmanEncoded {if _beae .SbHuffRDHeight ==3{if _beae ._gaeff ==nil {var (_bfabb int ;
_deg error ;);if _beae .SbHuffFS ==3{_bfabb ++;};if _beae .SbHuffDS ==3{_bfabb ++;};if _beae .SbHuffDT ==3{_bfabb ++;};if _beae .SbHuffRDWidth ==3{_bfabb ++;};_beae ._gaeff ,_deg =_beae .getUserTable (_bfabb );if _deg !=nil {return 0,_bde .Wrap (_deg ,_ggdea ,"");
};};return _beae ._gaeff .Decode (_beae ._dcbba );};_cagg ,_dgcd :=_fc .GetStandardTable (14+int (_beae .SbHuffRDHeight ));if _dgcd !=nil {return 0,_bde .Wrap (_dgcd ,_ggdea ,"");};return _cagg .Decode (_beae ._dcbba );};_ebcf ,_gebba :=_beae ._daa .DecodeInt (_beae ._gfcd );
if _gebba !=nil {return 0,_bde .Wrap (_gebba ,_ggdea ,"");};return int64 (_ebcf ),nil ;};type HalftoneRegion struct{_faa *_d .Reader ;_aab *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
HDefaultPixel int8 ;CombinationOperator _gc .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_gc .Bitmap ;
Patterns []*_gc .Bitmap ;};func (_fedb *GenericRefinementRegion )String ()string {_bgf :=&_bd .Builder {};_bgf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bgf .WriteString (_fedb .RegionInfo .String ()+"\u000a");
_bgf .WriteString (_gg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fedb .IsTPGROn ));_bgf .WriteString (_gg .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fedb .TemplateID ));
_bgf .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fedb .GrAtX ));_bgf .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fedb .GrAtY ));
_bgf .WriteString (_gg .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fedb .ReferenceDX ));_bgf .WriteString (_gg .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fedb .ReferenceDY ));
return _bgf .String ();};func (_cfab *SymbolDictionary )setExportedSymbols (_gac []int ){for _ebae :=uint32 (0);_ebae < _cfab ._bcgg +_cfab .NumberOfNewSymbols ;_ebae ++{if _gac [_ebae ]==1{var _fbcd *_gc .Bitmap ;if _ebae < _cfab ._bcgg {_fbcd =_cfab ._dcfaf [_ebae ];
}else {_fbcd =_cfab ._bae [_ebae -_cfab ._bcgg ];};_gd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fbcd );
_cfab ._cgef =append (_cfab ._cgef ,_fbcd );};};};type EncodeInitializer interface{InitEncode ();};func (_efcf *SymbolDictionary )decodeHeightClassBitmap (_ddgbg *_gc .Bitmap ,_bggf int64 ,_ccc int ,_cffcg []int )error {for _aceb :=_bggf ;_aceb < int64 (_efcf ._bdbb );
_aceb ++{var _aefc int ;for _gead :=_bggf ;_gead <=_aceb -1;_gead ++{_aefc +=_cffcg [_gead ];};_gfa :=_be .Rect (_aefc ,0,_aefc +_cffcg [_aceb ],_ccc );_faag ,_cfcea :=_gc .Extract (_gfa ,_ddgbg );if _cfcea !=nil {return _cfcea ;};_efcf ._bae [_aceb ]=_faag ;
_efcf ._ceea =append (_efcf ._ceea ,_faag );};return nil ;};