//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_b "github.com/unidoc/unipdf/v3/common";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "image";_c "math";
);func (_ccg Settings )Validate ()error {const _bba ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _ccg .Thresh < 0.4||_ccg .Thresh > 0.98{return _cb .Error (_bba ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _ccg .WeightFactor < 0.0||_ccg .WeightFactor > 1.0{return _cb .Error (_bba ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _ccg .RankHaus < 0.5||_ccg .RankHaus > 1.0{return _cb .Error (_bba ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _ccg .SizeHaus < 1||_ccg .SizeHaus > 10{return _cb .Error (_bba ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _ccg .Components {case _fb .ComponentConn ,_fb .ComponentCharacters ,_fb .ComponentWords :default:return _cb .Error (_bba ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _fb .Component ;Method Method ;};func (_cbc *Classer )ComputeLLCorners ()(_bf error ){const _de ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _cbc .PtaUL ==nil {return _cb .Error (_de ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_bd :=len (*_cbc .PtaUL );_cbc .PtaLL =&_fb .Points {};var (_ab ,_gb float32 ;_e ,_dd int ;
_gc *_fb .Bitmap ;);for _fa :=0;_fa < _bd ;_fa ++{_ab ,_gb ,_bf =_cbc .PtaUL .GetGeometry (_fa );if _bf !=nil {_b .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bf );
return _cb .Wrap (_bf ,_de ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_e ,_bf =_cbc .ClassIDs .Get (_fa );if _bf !=nil {_b .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_bf );
return _cb .Wrap (_bf ,_de ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_gc ,_bf =_cbc .UndilatedTemplates .GetBitmap (_e );if _bf !=nil {_b .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bf );
return _cb .Wrap (_bf ,_de ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_dd =_gc .Height ;_cbc .PtaLL .AddPoint (_ab ,_gb +float32 (_dd ));};return nil ;};func (_bga *similarTemplatesFinder )Next ()int {var (_gaf ,_fga ,_fdc ,_efb int ;
_bbb bool ;_ege *_fb .Bitmap ;_efc error ;);for {if _bga .Index >=25{return -1;};_fga =_bga .Width +TwoByTwoWalk [2*_bga .Index ];_gaf =_bga .Height +TwoByTwoWalk [2*_bga .Index +1];if _gaf < 1||_fga < 1{_bga .Index ++;continue ;};if len (_bga .CurrentNumbers )==0{_bga .CurrentNumbers ,_bbb =_bga .Classer .TemplatesSize .GetSlice (uint64 (_fga )*uint64 (_gaf ));
if !_bbb {_bga .Index ++;continue ;};_bga .N =0;};_fdc =len (_bga .CurrentNumbers );for ;_bga .N < _fdc ;_bga .N ++{_efb =_bga .CurrentNumbers [_bga .N ];_ege ,_efc =_bga .Classer .DilatedTemplates .GetBitmap (_efb );if _efc !=nil {_b .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _ege .Width -2*JbAddedPixels ==_fga &&_ege .Height -2*JbAddedPixels ==_gaf {return _efb ;};};_bga .Index ++;_bga .CurrentNumbers =nil ;};};func (_agf *Classer )AddPage (inputPage *_fb .Bitmap ,pageNumber int ,method Method )(_cg error ){const _fbe ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_agf .Widths [pageNumber ]=inputPage .Width ;_agf .Heights [pageNumber ]=inputPage .Height ;if _cg =_agf .verifyMethod (method );_cg !=nil {return _cb .Wrap (_cg ,_fbe ,"");};_bc ,_d ,_cg :=inputPage .GetComponents (_agf .Settings .Components ,_agf .Settings .MaxCompWidth ,_agf .Settings .MaxCompHeight );
if _cg !=nil {return _cb .Wrap (_cg ,_fbe ,"");};_b .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bc );if _cg =_agf .addPageComponents (inputPage ,_d ,_bc ,pageNumber ,method );_cg !=nil {return _cb .Wrap (_cg ,_fbe ,"");
};return nil ;};func DefaultSettings ()Settings {_gefg :=&Settings {};_gefg .SetDefault ();return *_gefg };func Init (settings Settings )(*Classer ,error ){const _a ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_fe :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_gf .IntsMap {},TemplateAreas :&_gf .IntSlice {},ComponentPageNumbers :&_gf .IntSlice {},ClassIDs :&_gf .IntSlice {},ComponentsNumber :&_gf .IntSlice {},CentroidPoints :&_fb .Points {},CentroidPointsTemplates :&_fb .Points {},UndilatedTemplates :&_fb .Bitmaps {},DilatedTemplates :&_fb .Bitmaps {},ClassInstances :&_fb .BitmapsArray {},FgTemplates :&_gf .NumSlice {}};
if _ag :=_fe .Settings .Validate ();_ag !=nil {return nil ,_cb .Wrap (_ag ,_a ,"");};return _fe ,nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_gf .IntSlice ;TemplateAreas *_gf .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;
NumberOfClasses int ;ClassInstances *_fb .BitmapsArray ;UndilatedTemplates *_fb .Bitmaps ;DilatedTemplates *_fb .Bitmaps ;TemplatesSize _gf .IntsMap ;FgTemplates *_gf .NumSlice ;CentroidPoints *_fb .Points ;CentroidPointsTemplates *_fb .Points ;ClassIDs *_gf .IntSlice ;
ComponentPageNumbers *_gf .IntSlice ;PtaUL *_fb .Points ;PtaLL *_fb .Points ;};func (_dfg *Classer )classifyRankHouseNonOne (_ebc *_fb .Boxes ,_fcd ,_edg ,_ade *_fb .Bitmaps ,_egbd *_fb .Points ,_eff *_gf .NumSlice ,_bff int )(_fgbe error ){const _cae ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gage ,_fca ,_aaa ,_gfg float32 ;_aaf ,_ced ,_eac int ;_bgd ,_dege ,_abe ,_abec ,_dde *_fb .Bitmap ;_bec ,_bgc bool ;);_ffe :=_fb .MakePixelSumTab8 ();for _ede :=0;_ede < len (_fcd .Values );_ede ++{if _dege ,_fgbe =_edg .GetBitmap (_ede );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _aaf ,_fgbe =_eff .GetInt (_ede );_fgbe !=nil {_b .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ede ,_fgbe );
};if _abe ,_fgbe =_ade .GetBitmap (_ede );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gage ,_fca ,_fgbe =_egbd .GetGeometry (_ede );_fgbe !=nil {return _cb .Wrapf (_fgbe ,_cae ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_eab :=len (_dfg .UndilatedTemplates .Values );_bec =false ;_bdcd :=_cafg (_dfg ,_dege );for _eac =_bdcd .Next ();_eac > -1;{if _abec ,_fgbe =_dfg .UndilatedTemplates .GetBitmap (_eac );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _ced ,_fgbe =_dfg .FgTemplates .GetInt (_eac );_fgbe !=nil {_b .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eac ,_fgbe );
};if _dde ,_fgbe =_dfg .DilatedTemplates .GetBitmap (_eac );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _aaa ,_gfg ,_fgbe =_dfg .CentroidPointsTemplates .GetGeometry (_eac );
_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bgc ,_fgbe =_fb .RankHausTest (_dege ,_abe ,_abec ,_dde ,_gage -_aaa ,_fca -_gfg ,MaxDiffWidth ,MaxDiffHeight ,_aaf ,_ced ,float32 (_dfg .Settings .RankHaus ),_ffe );
if _fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"");};if _bgc {_bec =true ;if _fgbe =_dfg .ClassIDs .Add (_eac );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"");};if _fgbe =_dfg .ComponentPageNumbers .Add (_bff );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"");
};if _dfg .Settings .KeepClassInstances {_acf ,_cba :=_dfg .ClassInstances .GetBitmaps (_eac );if _cba !=nil {return _cb .Wrap (_cba ,_cae ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _bgd ,_cba =_fcd .GetBitmap (_ede );_cba !=nil {return _cb .Wrap (_cba ,_cae ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_acf .Values =append (_acf .Values ,_bgd );_da ,_cba :=_ebc .Get (_ede );if _cba !=nil {return _cb .Wrap (_cba ,_cae ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_acf .Boxes =append (_acf .Boxes ,_da );};break ;};};if !_bec {if _fgbe =_dfg .ClassIDs .Add (_eab );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fgbe =_dfg .ComponentPageNumbers .Add (_bff );_fgbe !=nil {return _cb .Wrap (_fgbe ,_cae ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fdfa :=&_fb .Bitmaps {};_bgd =_fcd .Values [_ede ];_fdfa .AddBitmap (_bgd );_cad ,_aaac :=_bgd .Width ,_bgd .Height ;_dfg .TemplatesSize .Add (uint64 (_cad )*uint64 (_aaac ),_eab );_aag ,_gcc :=_ebc .Get (_ede );if _gcc !=nil {return _cb .Wrap (_gcc ,_cae ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fdfa .AddBox (_aag );_dfg .ClassInstances .AddBitmaps (_fdfa );_dfg .CentroidPointsTemplates .AddPoint (_gage ,_fca );_dfg .UndilatedTemplates .AddBitmap (_dege );_dfg .DilatedTemplates .AddBitmap (_abe );_dfg .FgTemplates .AddInt (_aaf );};};_dfg .NumberOfClasses =len (_dfg .UndilatedTemplates .Values );
return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func _cafg (_cgce *Classer ,_bdca *_fb .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_bdca .Width ,Height :_bdca .Height ,Classer :_cgce };
};func (_ffcg *Classer )classifyRankHouseOne (_bccg *_fb .Boxes ,_gdb ,_fbfa ,_dcb *_fb .Bitmaps ,_dda *_fb .Points ,_aac int )(_cf error ){const _gdba ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dea ,_dfa ,_dfaf ,_dcdc float32 ;_caf int ;_fbdd ,_aaba ,_agg ,_ccd ,_ggg *_fb .Bitmap ;_bfdgd ,_fadc bool ;);for _ea :=0;_ea < len (_gdb .Values );_ea ++{_aaba =_fbfa .Values [_ea ];_agg =_dcb .Values [_ea ];_dea ,_dfa ,_cf =_dda .GetGeometry (_ea );
if _cf !=nil {return _cb .Wrapf (_cf ,_gdba ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_fea :=len (_ffcg .UndilatedTemplates .Values );_bfdgd =false ;_fdg :=_cafg (_ffcg ,_aaba );for _caf =_fdg .Next ();_caf > -1;
{_ccd ,_cf =_ffcg .UndilatedTemplates .GetBitmap (_caf );if _cf !=nil {return _cb .Wrap (_cf ,_gdba ,"\u0062\u006d\u0033");};_ggg ,_cf =_ffcg .DilatedTemplates .GetBitmap (_caf );if _cf !=nil {return _cb .Wrap (_cf ,_gdba ,"\u0062\u006d\u0034");};_dfaf ,_dcdc ,_cf =_ffcg .CentroidPointsTemplates .GetGeometry (_caf );
if _cf !=nil {return _cb .Wrap (_cf ,_gdba ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fadc ,_cf =_fb .HausTest (_aaba ,_agg ,_ccd ,_ggg ,_dea -_dfaf ,_dfa -_dcdc ,MaxDiffWidth ,MaxDiffHeight );
if _cf !=nil {return _cb .Wrap (_cf ,_gdba ,"");};if _fadc {_bfdgd =true ;if _cf =_ffcg .ClassIDs .Add (_caf );_cf !=nil {return _cb .Wrap (_cf ,_gdba ,"");};if _cf =_ffcg .ComponentPageNumbers .Add (_aac );_cf !=nil {return _cb .Wrap (_cf ,_gdba ,"");
};if _ffcg .Settings .KeepClassInstances {_bfa ,_ecf :=_ffcg .ClassInstances .GetBitmaps (_caf );if _ecf !=nil {return _cb .Wrap (_ecf ,_gdba ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fbdd ,_ecf =_gdb .GetBitmap (_ea );if _ecf !=nil {return _cb .Wrap (_ecf ,_gdba ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_bfa .AddBitmap (_fbdd );_dge ,_ecf :=_bccg .Get (_ea );if _ecf !=nil {return _cb .Wrap (_ecf ,_gdba ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bfa .AddBox (_dge );};break ;};};if !_bfdgd {if _cf =_ffcg .ClassIDs .Add (_fea );_cf !=nil {return _cb .Wrap (_cf ,_gdba ,"");
};if _cf =_ffcg .ComponentPageNumbers .Add (_aac );_cf !=nil {return _cb .Wrap (_cf ,_gdba ,"");};_eaf :=&_fb .Bitmaps {};_fbdd ,_cf =_gdb .GetBitmap (_ea );if _cf !=nil {return _cb .Wrap (_cf ,_gdba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eaf .Values =append (_eaf .Values ,_fbdd );
_geed ,_bdag :=_fbdd .Width ,_fbdd .Height ;_ffcg .TemplatesSize .Add (uint64 (_bdag )*uint64 (_geed ),_fea );_baga ,_feab :=_bccg .Get (_ea );if _feab !=nil {return _cb .Wrap (_feab ,_gdba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eaf .AddBox (_baga );
_ffcg .ClassInstances .AddBitmaps (_eaf );_ffcg .CentroidPointsTemplates .AddPoint (_dea ,_dfa );_ffcg .UndilatedTemplates .AddBitmap (_aaba );_ffcg .DilatedTemplates .AddBitmap (_agg );};};return nil ;};func (_fc *Classer )getULCorners (_ef *_fb .Bitmap ,_fac *_fb .Boxes )error {const _aa ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _ef ==nil {return _cb .Error (_aa ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _fac ==nil {return _cb .Error (_aa ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _fc .PtaUL ==nil {_fc .PtaUL =&_fb .Points {};
};_dc :=len (*_fac );var (_ac ,_gce ,_ad ,_agfb int ;_ff ,_bb ,_fg ,_bda float32 ;_acd error ;_af *_g .Rectangle ;_ca *_fb .Bitmap ;_ged _g .Point ;);for _ga :=0;_ga < _dc ;_ga ++{_ac =_fc .BaseIndex +_ga ;if _ff ,_bb ,_acd =_fc .CentroidPoints .GetGeometry (_ac );
_acd !=nil {return _cb .Wrap (_acd ,_aa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _gce ,_acd =_fc .ClassIDs .Get (_ac );_acd !=nil {return _cb .Wrap (_acd ,_aa ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _fg ,_bda ,_acd =_fc .CentroidPointsTemplates .GetGeometry (_gce );_acd !=nil {return _cb .Wrap (_acd ,_aa ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ec :=_fg -_ff ;
_cde :=_bda -_bb ;if _ec >=0{_ad =int (_ec +0.5);}else {_ad =int (_ec -0.5);};if _cde >=0{_agfb =int (_cde +0.5);}else {_agfb =int (_cde -0.5);};if _af ,_acd =_fac .Get (_ga );_acd !=nil {return _cb .Wrap (_acd ,_aa ,"");};_cc ,_ffd :=_af .Min .X ,_af .Min .Y ;
_ca ,_acd =_fc .UndilatedTemplates .GetBitmap (_gce );if _acd !=nil {return _cb .Wrap (_acd ,_aa ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_ged ,_acd =_fad (_ef ,_cc ,_ffd ,_ad ,_agfb ,_ca );if _acd !=nil {return _cb .Wrap (_acd ,_aa ,"");};_fc .PtaUL .AddPoint (float32 (_cc -_ad +_ged .X ),float32 (_ffd -_agfb +_ged .Y ));};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_gbb *Classer )verifyMethod (_cce Method )error {if _cce !=RankHaus &&_cce !=Correlation {return _cb .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_bfdc *Classer )classifyRankHaus (_cbg *_fb .Boxes ,_dgb *_fb .Bitmaps ,_bfe int )error {const _fge ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _cbg ==nil {return _cb .Error (_fge ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _dgb ==nil {return _cb .Error (_fge ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_gef :=len (_dgb .Values );if _gef ==0{return _cb .Error (_fge ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_faga :=_dgb .CountPixels ();_bag :=_bfdc .Settings .SizeHaus ;_eeb :=_fb .SelCreateBrick (_bag ,_bag ,_bag /2,_bag /2,_fb .SelHit );_egb :=&_fb .Bitmaps {Values :make ([]*_fb .Bitmap ,_gef )};_gee :=&_fb .Bitmaps {Values :make ([]*_fb .Bitmap ,_gef )};
var (_gd ,_fbd ,_dfc *_fb .Bitmap ;_fbf error ;);for _fec :=0;_fec < _gef ;_fec ++{_gd ,_fbf =_dgb .GetBitmap (_fec );if _fbf !=nil {return _cb .Wrap (_fbf ,_fge ,"");};_fbd ,_fbf =_gd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _fbf !=nil {return _cb .Wrap (_fbf ,_fge ,"");};_dfc ,_fbf =_fb .Dilate (nil ,_fbd ,_eeb );if _fbf !=nil {return _cb .Wrap (_fbf ,_fge ,"");};_egb .Values [_gef ]=_fbd ;_gee .Values [_gef ]=_dfc ;};_baa ,_fbf :=_fb .Centroids (_egb .Values );if _fbf !=nil {return _cb .Wrap (_fbf ,_fge ,"");
};if _fbf =_baa .Add (_bfdc .CentroidPoints );_fbf !=nil {_b .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _bfdc .Settings .RankHaus ==1.0{_fbf =_bfdc .classifyRankHouseOne (_cbg ,_dgb ,_egb ,_gee ,_baa ,_bfe );
}else {_fbf =_bfdc .classifyRankHouseNonOne (_cbg ,_dgb ,_egb ,_gee ,_baa ,_faga ,_bfe );};if _fbf !=nil {return _cb .Wrap (_fbf ,_fge ,"");};return nil ;};func _fad (_eef *_fb .Bitmap ,_gag ,_ffc ,_ffdg ,_bcdf int ,_age *_fb .Bitmap )(_ed _g .Point ,_gcee error ){const _eg ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _eef ==nil {return _ed ,_cb .Error (_eg ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _age ==nil {return _ed ,_cb .Error (_eg ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gba ,_ccf :=_age .Width ,_age .Height ;_ba ,_bcc :=_gag -_ffdg -JbAddedPixels ,_ffc -_bcdf -JbAddedPixels ;_b .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gag ,_ffc ,_gba ,_ccf ,_ba ,_bcc );
_cac ,_gcee :=_fb .Rect (_ba ,_bcc ,_gba ,_ccf );if _gcee !=nil {return _ed ,_cb .Wrap (_gcee ,_eg ,"");};_gac ,_ ,_gcee :=_eef .ClipRectangle (_cac );if _gcee !=nil {_b .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_cac );
return _ed ,_cb .Wrap (_gcee ,_eg ,"");};_egd :=_fb .New (_gac .Width ,_gac .Height );_geb :=_c .MaxInt32 ;var _fbg ,_df ,_ded ,_db ,_eee int ;for _fbg =-1;_fbg <=1;_fbg ++{for _df =-1;_df <=1;_df ++{if _ ,_gcee =_fb .Copy (_egd ,_gac );_gcee !=nil {return _ed ,_cb .Wrap (_gcee ,_eg ,"");
};if _gcee =_egd .RasterOperation (_df ,_fbg ,_gba ,_ccf ,_fb .PixSrcXorDst ,_age ,0,0);_gcee !=nil {return _ed ,_cb .Wrap (_gcee ,_eg ,"");};_ded =_egd .CountPixels ();if _ded < _geb {_db =_df ;_eee =_fbg ;_geb =_ded ;};};};_ed .X =_db ;_ed .Y =_eee ;
return _ed ,nil ;};var _fbc bool ;const JbAddedPixels =6;func (_bge *Settings )SetDefault (){if _bge .MaxCompWidth ==0{switch _bge .Components {case _fb .ComponentConn :_bge .MaxCompWidth =MaxConnCompWidth ;case _fb .ComponentCharacters :_bge .MaxCompWidth =MaxCharCompWidth ;
case _fb .ComponentWords :_bge .MaxCompWidth =MaxWordCompWidth ;};};if _bge .MaxCompHeight ==0{_bge .MaxCompHeight =MaxCompHeight ;};if _bge .Thresh ==0.0{_bge .Thresh =0.9;};if _bge .WeightFactor ==0.0{_bge .WeightFactor =0.75;};if _bge .RankHaus ==0.0{_bge .RankHaus =0.97;
};if _bge .SizeHaus ==0{_bge .SizeHaus =2;};};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;
};type Method int ;const (RankHaus Method =iota ;Correlation ;);func (_cbce *Classer )classifyCorrelation (_deg *_fb .Boxes ,_fbce *_fb .Bitmaps ,_gagf int )error {const _dg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _deg ==nil {return _cb .Error (_dg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _fbce ==nil {return _cb .Error (_dg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_eea :=len (_fbce .Values );if _eea ==0{_b .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_fgb ,_gca *_fb .Bitmap ;_gg error ;);_ggf :=&_fb .Bitmaps {Values :make ([]*_fb .Bitmap ,_eea )};for _agc ,_gfc :=range _fbce .Values {_gca ,_gg =_gfc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _gg !=nil {return _cb .Wrap (_gg ,_dg ,"");};_ggf .Values [_agc ]=_gca ;};_eeg :=_cbce .FgTemplates ;_geba :=_fb .MakePixelSumTab8 ();_gaa :=_fb .MakePixelCentroidTab8 ();_gcb :=make ([]int ,_eea );_gcg :=make ([][]int ,_eea );_fag :=_fb .Points (make ([]_fb .Point ,_eea ));
_dee :=&_fag ;var (_eb ,_agff int ;_bdc ,_fcc ,_ddf int ;_cga ,_bg int ;_acda byte ;);for _feg ,_adc :=range _ggf .Values {_gcg [_feg ]=make ([]int ,_adc .Height );_eb =0;_agff =0;_fcc =(_adc .Height -1)*_adc .RowStride ;_bdc =0;for _bg =_adc .Height -1;
_bg >=0;_bg ,_fcc =_bg -1,_fcc -_adc .RowStride {_gcg [_feg ][_bg ]=_bdc ;_ddf =0;for _cga =0;_cga < _adc .RowStride ;_cga ++{_acda =_adc .Data [_fcc +_cga ];_ddf +=_geba [_acda ];_eb +=_gaa [_acda ]+_cga *8*_geba [_acda ];};_bdc +=_ddf ;_agff +=_ddf *_bg ;
};_gcb [_feg ]=_bdc ;if _bdc > 0{(*_dee )[_feg ]=_fb .Point {X :float32 (_eb )/float32 (_bdc ),Y :float32 (_agff )/float32 (_bdc )};}else {(*_dee )[_feg ]=_fb .Point {X :float32 (_adc .Width )/float32 (2),Y :float32 (_adc .Height )/float32 (2)};};};if _gg =_cbce .CentroidPoints .Add (_dee );
_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_bfdg ,_ecg ,_aba int ;_ebd float64 ;_ega ,_gfa ,_be ,_ddc float32 ;_aga ,_ce _fb .Point ;_aab bool ;_cace *similarTemplatesFinder ;_gec int ;
_fdb *_fb .Bitmap ;_cdeg *_g .Rectangle ;_cbbf *_fb .Bitmaps ;);for _gec ,_gca =range _ggf .Values {_ecg =_gcb [_gec ];if _ega ,_gfa ,_gg =_dee .GetGeometry (_gec );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_aab =false ;
_eca :=len (_cbce .UndilatedTemplates .Values );_cace =_cafg (_cbce ,_gca );for _cgac :=_cace .Next ();_cgac > -1;{if _fdb ,_gg =_cbce .UndilatedTemplates .GetBitmap (_cgac );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _aba ,_gg =_eeg .GetInt (_cgac );_gg !=nil {_b .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gg );};if _be ,_ddc ,_gg =_cbce .CentroidPointsTemplates .GetGeometry (_cgac );
_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _cbce .Settings .WeightFactor > 0.0{if _bfdg ,_gg =_cbce .TemplateAreas .Get (_cgac );_gg !=nil {_b .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_gg );
};_ebd =_cbce .Settings .Thresh +(1.0-_cbce .Settings .Thresh )*_cbce .Settings .WeightFactor *float64 (_aba )/float64 (_bfdg );}else {_ebd =_cbce .Settings .Thresh ;};_eba ,_eeeg :=_fb .CorrelationScoreThresholded (_gca ,_fdb ,_ecg ,_aba ,_aga .X -_ce .X ,_aga .Y -_ce .Y ,MaxDiffWidth ,MaxDiffHeight ,_geba ,_gcg [_gec ],float32 (_ebd ));
if _eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"");};if _fbc {var (_cgg ,_ddb float64 ;_bee ,_cbbc int ;);_cgg ,_eeeg =_fb .CorrelationScore (_gca ,_fdb ,_ecg ,_aba ,_ega -_be ,_gfa -_ddc ,MaxDiffWidth ,MaxDiffHeight ,_geba );if _eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ddb ,_eeeg =_fb .CorrelationScoreSimple (_gca ,_fdb ,_ecg ,_aba ,_ega -_be ,_gfa -_ddc ,MaxDiffWidth ,MaxDiffHeight ,_geba );if _eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bee =int (_c .Sqrt (_cgg *float64 (_ecg )*float64 (_aba )));_cbbc =int (_c .Sqrt (_ddb *float64 (_ecg )*float64 (_aba )));if (_cgg >=_ebd )!=(_ddb >=_ebd ){return _cb .Errorf (_dg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_bee ,_cgg ,_cgg >=_ebd ,_cbbc ,_ddb ,_ddb >=_ebd ,_cgg -_ddb );
};if _cgg >=_ebd !=_eba {return _cb .Errorf (_dg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cgg ,_cgg *float64 (_ecg )*float64 (_aba ),_bee ,_ebd ,float32 (_ebd )*float32 (_ecg )*float32 (_aba ),_eba );
};};if _eba {_aab =true ;if _eeeg =_cbce .ClassIDs .Add (_cgac );_eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _eeeg =_cbce .ComponentPageNumbers .Add (_gagf );_eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _cbce .Settings .KeepClassInstances {if _fgb ,_eeeg =_fbce .GetBitmap (_gec );_eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _cbbf ,_eeeg =_cbce .ClassInstances .GetBitmaps (_cgac );
_eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_cbbf .AddBitmap (_fgb );if _cdeg ,_eeeg =_deg .Get (_gec );_eeeg !=nil {return _cb .Wrap (_eeeg ,_dg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_cbbf .AddBox (_cdeg );};break ;};};if !_aab {if _gg =_cbce .ClassIDs .Add (_eca );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _gg =_cbce .ComponentPageNumbers .Add (_gagf );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cbbf =&_fb .Bitmaps {};if _fgb ,_gg =_fbce .GetBitmap (_gec );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cbbf .AddBitmap (_fgb );_bac ,_fde :=_fgb .Width ,_fgb .Height ;_egdf :=uint64 (_fde )*uint64 (_bac );_cbce .TemplatesSize .Add (_egdf ,_eca );
if _cdeg ,_gg =_deg .Get (_gec );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cbbf .AddBox (_cdeg );_cbce .ClassInstances .AddBitmaps (_cbbf );_cbce .CentroidPointsTemplates .AddPoint (_ega ,_gfa );_cbce .FgTemplates .AddInt (_ecg );
_cbce .UndilatedTemplates .AddBitmap (_fgb );_bfdg =(_gca .Width -2*JbAddedPixels )*(_gca .Height -2*JbAddedPixels );if _gg =_cbce .TemplateAreas .Add (_bfdg );_gg !=nil {return _cb .Wrap (_gg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_cbce .NumberOfClasses =len (_cbce .UndilatedTemplates .Values );
return nil ;};func (_fd *Classer )addPageComponents (_bfd *_fb .Bitmap ,_gbg *_fb .Boxes ,_bcd *_fb .Bitmaps ,_ge int ,_cd Method )error {const _ee ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _bfd ==nil {return _cb .Error (_ee ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _gbg ==nil ||_bcd ==nil ||len (*_gbg )==0{_b .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_bfd );
return nil ;};var _cgc error ;switch _cd {case RankHaus :_cgc =_fd .classifyRankHaus (_gbg ,_bcd ,_ge );case Correlation :_cgc =_fd .classifyCorrelation (_gbg ,_bcd ,_ge );default:_b .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_cd );
return _cb .Error (_ee ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _cgc !=nil {return _cb .Wrap (_cgc ,_ee ,"");};if _cgc =_fd .getULCorners (_bfd ,_gbg );_cgc !=nil {return _cb .Wrap (_cgc ,_ee ,"");
};_cbb :=len (*_gbg );_fd .BaseIndex +=_cbb ;if _cgc =_fd .ComponentsNumber .Add (_cbb );_cgc !=nil {return _cb .Wrap (_cgc ,_ee ,"");};return nil ;};