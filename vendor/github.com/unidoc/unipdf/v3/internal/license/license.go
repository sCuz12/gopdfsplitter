//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_dd "bytes";_a "compress/gzip";_g "crypto";_cf "crypto/aes";_cb "crypto/cipher";_dc "crypto/hmac";_ce "crypto/rand";_fa "crypto/rsa";_df "crypto/sha256";_dca "crypto/sha512";_cff "crypto/x509";_gfe "encoding/base64";_ba "encoding/hex";
_ea "encoding/json";_aa "encoding/pem";_ad "errors";_fd "fmt";_adb "github.com/unidoc/unipdf/v3/common";_gd "io";_b "io/ioutil";_ca "net";_gf "net/http";_f "os";_e "path/filepath";_gb "sort";_eg "strings";_c "sync";_ac "time";);const _cdb ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};var _ae =_ac .Date (2020,1,1,0,0,0,0,_ac .UTC );
var _acfg =_ac .Date (2019,6,6,0,0,0,0,_ac .UTC );func (_addf *LicenseKey )Validate ()error {if _addf ._egg {return nil ;};if len (_addf .LicenseId )< 10{return _fd .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_addf .CustomerId )< 10{return _fd .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_addf .CustomerName )< 1{return _fd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _cfc .After (_addf .CreatedAt ){return _fd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _addf .ExpiresAt ==nil {_da :=_addf .CreatedAt .AddDate (1,0,0);if _ae .After (_da ){_da =_ae ;};_addf .ExpiresAt =&_da ;};if _addf .CreatedAt .After (*_addf .ExpiresAt ){return _fd .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _addf .isExpired (){_fdcd :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _fd .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_fdcd );};if len (_addf .CreatorName )< 1{return _fd .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_addf .CreatorEmail )< 1{return _fd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _addf .CreatedAt .After (_acfg ){if !_addf .UniPDF {return _fd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func (_ge *LicenseKey )TypeToString ()string {if _ge ._egg {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _ge .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _ge .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _ge .Tier ==LicenseTierIndividual ||_ge .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _cbbf ()*meteredClient {_acgc :=meteredClient {_dbc :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_eggd :&_gf .Client {Timeout :30*_ac .Second }};
if _dbca :=_f .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_eg .HasPrefix (_dbca ,"\u0068\u0074\u0074\u0070"){_acgc ._dbc =_dbca ;};return &_acgc ;};func (_gcb *meteredClient )checkinUsage (_dbg meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_dbg .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_dbg .PackageVersion =_adb .Version ;var _cg meteredUsageCheckinResp ;_gda :=_gcb ._dbc +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_cbeg ,_daf :=_ea .Marshal (_dbg );if _daf !=nil {return _cg ,_daf ;
};_ged ,_daf :=_adg (_cbeg );if _daf !=nil {return _cg ,_daf ;};_eca ,_daf :=_gf .NewRequest ("\u0050\u004f\u0053\u0054",_gda ,_ged );if _daf !=nil {return _cg ,_daf ;};_eca .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_eca .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_eca .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_eca .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gcb ._gba );_aac ,_daf :=_gcb ._eggd .Do (_eca );if _daf !=nil {return _cg ,_daf ;};defer _aac .Body .Close ();if _aac .StatusCode !=200{_aba ,_egb :=_afa (_aac );if _egb !=nil {return _cg ,_egb ;
};_egb =_ea .Unmarshal (_aba ,&_cg );if _egb !=nil {return _cg ,_egb ;};return _cg ,_fd .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_aac .StatusCode );
};_egd :=_aac .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_edb :=_dga (_dbg .MacAddress ,string (_cbeg ));if _edb !=_egd {_adb .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _cg ,_ad .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_ag ,_daf :=_afa (_aac );if _daf !=nil {return _cg ,_daf ;};_daf =_ea .Unmarshal (_ag ,&_cg );if _daf !=nil {return _cg ,_daf ;};return _cg ,nil ;};func _dga (_feb ,_agf string )string {_gee :=[]byte (_feb );_ffa :=_dc .New (_df .New ,_gee );_ffa .Write ([]byte (_agf ));
return _gfe .StdEncoding .EncodeToString (_ffa .Sum (nil ));};var _afg map[string ]struct{};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_adb .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_adb .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fd .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gfef !=nil &&(_gfef ._egg ||_gfef .Tier !=LicenseTierUnlicensed ){_adb .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _ad .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_edc :=_cbbf ();_edc ._gba =apiKey ;_ebb ,_addg :=_edc .getStatus ();if _addg !=nil {return _addg ;};
if !_ebb .Valid {return _ad .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_aed :=&LicenseKey {_egg :true ,_cbb :apiKey ,_cab :true };_gfef =_aed ;return nil ;};const (_gg ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_eaf ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);const _cagd ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
func GetLicenseKey ()*LicenseKey {if _gfef ==nil {return nil ;};_ffd :=*_gfef ;return &_ffd ;};func SetMeteredKeyPersistentCache (val bool ){_gfef ._cab =val };type meteredStatusForm struct{};func _dg ()(string ,error ){_dab :=_eg .TrimSpace (_f .Getenv (_gcf ));
if _dab ==""{_adb .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_gcf );
_egbb :=_fgab ();if len (_egbb )==0{return "",_fd .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gcf );
};_dab =_e .Join (_egbb ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_decd :=_f .MkdirAll (_dab ,0777);if _decd !=nil {return "",_decd ;};return _dab ,nil ;};type defaultStateHolder struct{};func (_aec *LicenseKey )ToString ()string {if _aec ._egg {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_fbe :=_fd .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_aec .LicenseId );_fbe +=_fd .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_aec .CustomerId );
_fbe +=_fd .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_aec .CustomerName );_fbe +=_fd .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_aec .Tier );_fbe +=_fd .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_adb .UtcTimeFormat (_aec .CreatedAt ));
if _aec .ExpiresAt ==nil {_fbe +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_fbe +=_fd .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_adb .UtcTimeFormat (*_aec .ExpiresAt ));
};_fbe +=_fd .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_aec .CreatorName ,_aec .CreatorEmail );return _fbe ;};const _bbe ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
type stateLoader interface{loadState (_fee string )(reportState ,error );updateState (_dbfb ,_dce ,_eaa string ,_fg int ,_dec bool ,_gfc int ,_fga int ,_eec _ac .Time ,_abf map[string ]int )error ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};func (_fdc *LicenseKey )isExpired ()bool {return _fdc .getExpiryDateToCompare ().After (*_fdc .ExpiresAt )};func (_bac defaultStateHolder )updateState (_beg ,_dcd ,_eafgg string ,_ddg int ,_bf bool ,_dag int ,_dfgd int ,_aef _ac .Time ,_fad map[string ]int )error {_abb ,_fdg :=_dg ();
if _fdg !=nil {return _fdg ;};if len (_beg )< 20{return _ad .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_aedf :=[]byte (_beg );_agb :=_dca .Sum512_256 (_aedf [:20]);_gdf :=_ba .EncodeToString (_agb [:]);_ebca :=_e .Join (_abb ,_gdf );
var _gfg reportState ;_gfg .Docs =int64 (_ddg );_gfg .NumErrors =int64 (_dfgd );_gfg .LimitDocs =_bf ;_gfg .RemainingDocs =int64 (_dag );_gfg .LastWritten =_ac .Now ().UTC ();_gfg .LastReported =_aef ;_gfg .Instance =_dcd ;_gfg .Next =_eafgg ;_gfg .Usage =_fad ;
_gea ,_fdg :=_ea .Marshal (_gfg );if _fdg !=nil {return _fdg ;};const _cgg ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_gea ,_fdg =_gdc ([]byte (_cgg ),_gea );if _fdg !=nil {return _fdg ;};_fdg =_b .WriteFile (_ebca ,_gea ,0600);
if _fdg !=nil {return _fdg ;};return nil ;};func (_dfg *LicenseKey )IsLicensed ()bool {return _dfg .Tier !=LicenseTierUnlicensed ||_dfg ._egg };var _cae =&_c .Mutex {};func _adg (_gff []byte )(_gd .Reader ,error ){_fbd :=new (_dd .Buffer );_geg :=_a .NewWriter (_fbd );
_geg .Write (_gff );_fbec :=_geg .Close ();if _fbec !=nil {return nil ,_fbec ;};return _fbd ,nil ;};func (_db *LicenseKey )getExpiryDateToCompare ()_ac .Time {if _db .Trial {return _ac .Now ().UTC ();};return _adb .ReleasedAt ;};func _bcf (_gab *_gf .Response )(_gd .ReadCloser ,error ){var _daab error ;
var _cgf _gd .ReadCloser ;switch _eg .ToLower (_gab .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_cgf ,_daab =_a .NewReader (_gab .Body );if _daab !=nil {return _cgf ,_daab ;
};defer _cgf .Close ();default:_cgf =_gab .Body ;};return _cgf ,nil ;};func TrackUse (useKey string ){if _gfef ==nil {return ;};if !_gfef ._egg ||len (_gfef ._cbb )==0{return ;};if len (useKey )==0{return ;};_cae .Lock ();defer _cae .Unlock ();if _gad ==nil {_gad =map[string ]int {};
};_gad [useKey ]++;};func GetMeteredState ()(MeteredStatus ,error ){if _gfef ==nil {return MeteredStatus {},_ad .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_gfef ._egg ||len (_gfef ._cbb )==0{return MeteredStatus {},_ad .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_dbf ,_bef :=_bed .loadState (_gfef ._cbb );if _bef !=nil {_adb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bef );return MeteredStatus {},_bef ;};if _dbf .Docs > 0{_af :=_abg ("","",true );if _af !=nil {return MeteredStatus {},_af ;};
};_cae .Lock ();defer _cae .Unlock ();_ff :=_cbbf ();_ff ._gba =_gfef ._cbb ;_dbff ,_bef :=_ff .getStatus ();if _bef !=nil {return MeteredStatus {},_bef ;};if !_dbff .Valid {return MeteredStatus {},_ad .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_ffb :=MeteredStatus {OK :true ,Credits :_dbff .OrgCredits ,Used :_dbff .OrgUsed };return _ffb ,nil ;};func _ega (_fc string ,_dfe []byte )(string ,error ){_cag ,_ :=_aa .Decode ([]byte (_fc ));if _cag ==nil {return "",_fd .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_gc ,_dfeb :=_cff .ParsePKCS1PrivateKey (_cag .Bytes );if _dfeb !=nil {return "",_dfeb ;};_gdd :=_dca .New ();_gdd .Write (_dfe );_add :=_gdd .Sum (nil );_bc ,_dfeb :=_fa .SignPKCS1v15 (_ce .Reader ,_gc ,_g .SHA512 ,_add );if _dfeb !=nil {return "",_dfeb ;
};_ga :=_gfe .StdEncoding .EncodeToString (_dfe );_ga +="\u000a\u002b\u000a";_ga +=_gfe .StdEncoding .EncodeToString (_bc );return _ga ,nil ;};const _gcf ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";type reportState struct{Instance string `json:"inst"`;
Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _ac .Time `json:"lr"`;LastWritten _ac .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func _fgab ()string {_dfd :=_f .Getenv ("\u0048\u004f\u004d\u0045");
if len (_dfd )==0{_dfd ,_ =_f .UserHomeDir ();};return _dfd ;};var _gad map[string ]int ;func MakeUnlicensedKey ()*LicenseKey {_ceb :=LicenseKey {};_ceb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_ceb .Tier =LicenseTierUnlicensed ;
_ceb .CreatedAt =_ac .Now ().UTC ();_ceb .CreatedAtInt =_ceb .CreatedAt .Unix ();return &_ceb ;};func _eb (_fdb string ,_cd string )([]byte ,error ){var (_ec int ;_eafg string ;);for _ ,_eafg =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ec =_eg .Index (_cd ,_eafg );
_ec !=-1{break ;};};if _ec ==-1{return nil ,_fd .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_de :=_cd [:_ec ];
_cfa :=_ec +len (_eafg );_cba :=_cd [_cfa :];if _de ==""||_cba ==""{return nil ,_fd .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_aad ,_fab :=_gfe .StdEncoding .DecodeString (_de );if _fab !=nil {return nil ,_fd .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ed ,_fab :=_gfe .StdEncoding .DecodeString (_cba );
if _fab !=nil {return nil ,_fd .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_cbf ,_ :=_aa .Decode ([]byte (_fdb ));if _cbf ==nil {return nil ,_fd .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_fda ,_fab :=_cff .ParsePKIXPublicKey (_cbf .Bytes );if _fab !=nil {return nil ,_fab ;};_fcf :=_fda .(*_fa .PublicKey );if _fcf ==nil {return nil ,_fd .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_dfb :=_dca .New ();_dfb .Write (_aad );_bca :=_dfb .Sum (nil );_fab =_fa .VerifyPKCS1v15 (_fcf ,_g .SHA512 ,_bca ,_ed );if _fab !=nil {return nil ,_fab ;};return _aad ,nil ;};func _abg (_fed string ,_fag string ,_baf bool )error {if _gfef ==nil {return _ad .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_gfef ._egg ||len (_gfef ._cbb )==0{return nil ;};if len (_fed )==0&&!_baf {return _ad .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_cae .Lock ();defer _cae .Unlock ();if _afg ==nil {_afg =map[string ]struct{}{};
};if _gad ==nil {_gad =map[string ]int {};};_ffc :=0;if len (_fed )> 0{_ ,_fbea :=_afg [_fed ];if !_fbea {_afg [_fed ]=struct{}{};_ffc ++;};};if _ffc ==0&&!_baf {return nil ;};_gad [_fag ]++;_dac :=_ac .Now ();_ceg ,_egad :=_bed .loadState (_gfef ._cbb );
if _egad !=nil {_adb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egad );return _egad ;};if _ceg .Usage ==nil {_ceg .Usage =map[string ]int {};};for _bcdf ,_dfa :=range _gad {if _bcdf !=""{_ceg .Usage [_bcdf ]+=_dfa ;};};_gad =nil ;const _fgc =24*_ac .Hour ;
const _bb =3*24*_ac .Hour ;if len (_ceg .Instance )==0||_dac .Sub (_ceg .LastReported )> _fgc ||(_ceg .LimitDocs &&_ceg .RemainingDocs <=_ceg .Docs +int64 (_ffc ))||_baf {_addc ,_eea :=_f .Hostname ();if _eea !=nil {return _eea ;};_eecg :=_ceg .Docs ;_bgd ,_dda ,_eea :=_fcc ();
if _eea !=nil {_adb .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_eea .Error ());_bgd =append (_bgd ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
_dda =append (_dda ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");}else {_gb .Strings (_dda );_gb .Strings (_bgd );_bafa ,_acb :=_aga ();if _acb !=nil {return _acb ;};_abd :=false ;
for _ ,_cdd :=range _dda {if _cdd ==_bafa .String (){_abd =true ;};};if !_abd {_dda =append (_dda ,_bafa .String ());};};_bgf :=_cbbf ();_bgf ._gba =_gfef ._cbb ;_eecg +=int64 (_ffc );_aecd :=meteredUsageCheckinForm {Instance :_ceg .Instance ,Next :_ceg .Next ,UsageNumber :int (_eecg ),NumFailed :_ceg .NumErrors ,Hostname :_addc ,LocalIP :_eg .Join (_dda ,"\u002c\u0020"),MacAddress :_eg .Join (_bgd ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_adb .Version ,Usage :_ceg .Usage ,IsPersistentCache :_gfef ._cab ,Timestamp :_dac .Unix ()};
if len (_bgd )==0{_aecd .MacAddress ="\u006e\u006f\u006e\u0065";};_fge :=int64 (0);_agd :=_ceg .NumErrors ;_aaf :=_dac ;_fdgd :=0;_dfbe :=_ceg .LimitDocs ;_ef ,_eea :=_bgf .checkinUsage (_aecd );if _eea !=nil {if _dac .Sub (_ceg .LastReported )> _bb {if !_ef .Success {return _ad .New (_ef .Message );
};return _ad .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_fge =_eecg ;_agd ++;
_aaf =_ceg .LastReported ;}else {_dfbe =_ef .LimitDocs ;_fdgd =_ef .RemainingDocs ;_agd =0;};if len (_ef .Instance )==0{_ef .Instance =_aecd .Instance ;};if len (_ef .Next )==0{_ef .Next =_aecd .Next ;};_eea =_bed .updateState (_bgf ._gba ,_ef .Instance ,_ef .Next ,int (_fge ),_dfbe ,_fdgd ,int (_agd ),_aaf ,nil );
if _eea !=nil {return _eea ;};if !_ef .Success {return _fd .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_ef .Message );};}else {_egad =_bed .updateState (_gfef ._cbb ,_ceg .Instance ,_ceg .Next ,int (_ceg .Docs )+_ffc ,_ceg .LimitDocs ,int (_ceg .RemainingDocs ),int (_ceg .NumErrors ),_ceg .LastReported ,_ceg .Usage );
if _egad !=nil {return _egad ;};};return nil ;};func _acg (_acc string ,_bab string ,_fb string )(string ,error ){_aae :=_eg .Index (_fb ,_acc );if _aae ==-1{return "",_fd .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_cfb :=_eg .Index (_fb ,_bab );if _cfb ==-1{return "",_fd .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dee :=_aae +len (_acc )+1;return _fb [_dee :_cfb -1],nil ;};var _gfef =MakeUnlicensedKey ();
func _cbg (_be string )(LicenseKey ,error ){var _ddca LicenseKey ;_gbb ,_gaf :=_acg (_gg ,_eaf ,_be );if _gaf !=nil {return _ddca ,_gaf ;};_aag ,_gaf :=_eb (_cdb ,_gbb );if _gaf !=nil {return _ddca ,_gaf ;};_gaf =_ea .Unmarshal (_aag ,&_ddca );if _gaf !=nil {return _ddca ,_gaf ;
};_ddca .CreatedAt =_ac .Unix (_ddca .CreatedAtInt ,0);if _ddca .ExpiresAtInt > 0{_ebd :=_ac .Unix (_ddca .ExpiresAtInt ,0);_ddca .ExpiresAt =&_ebd ;};return _ddca ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func _gdc (_fba ,_bdg []byte )([]byte ,error ){_caeg ,_agde :=_cf .NewCipher (_fba );
if _agde !=nil {return nil ,_agde ;};_aca :=make ([]byte ,_cf .BlockSize +len (_bdg ));_bba :=_aca [:_cf .BlockSize ];if _ ,_dad :=_gd .ReadFull (_ce .Reader ,_bba );_dad !=nil {return nil ,_dad ;};_gdg :=_cb .NewCFBEncrypter (_caeg ,_bba );_gdg .XORKeyStream (_aca [_cf .BlockSize :],_bdg );
_babb :=make ([]byte ,_gfe .URLEncoding .EncodedLen (len (_aca )));_gfe .URLEncoding .Encode (_babb ,_aca );return _babb ,nil ;};func _bacgd (_afab ,_abda []byte )([]byte ,error ){_fedg :=make ([]byte ,_gfe .URLEncoding .DecodedLen (len (_abda )));_agba ,_bee :=_gfe .URLEncoding .Decode (_fedg ,_abda );
if _bee !=nil {return nil ,_bee ;};_fedg =_fedg [:_agba ];_def ,_bee :=_cf .NewCipher (_afab );if _bee !=nil {return nil ,_bee ;};if len (_fedg )< _cf .BlockSize {return nil ,_ad .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_bcb :=_fedg [:_cf .BlockSize ];_fedg =_fedg [_cf .BlockSize :];_dde :=_cb .NewCFBDecrypter (_def ,_bcb );_dde .XORKeyStream (_fedg ,_fedg );return _fedg ,nil ;};var _bed stateLoader =defaultStateHolder {};func (_gfcf defaultStateHolder )loadState (_fbb string )(reportState ,error ){_daa ,_bcd :=_dg ();
if _bcd !=nil {return reportState {},_bcd ;};_bcd =_f .MkdirAll (_daa ,0777);if _bcd !=nil {return reportState {},_bcd ;};if len (_fbb )< 20{return reportState {},_ad .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_deb :=[]byte (_fbb );
_fdgf :=_dca .Sum512_256 (_deb [:20]);_bacg :=_ba .EncodeToString (_fdgf [:]);_aeb :=_e .Join (_daa ,_bacg );_cef ,_bcd :=_b .ReadFile (_aeb );if _bcd !=nil {if _f .IsNotExist (_bcd ){return reportState {},nil ;};_adb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bcd );
return reportState {},_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _fgd ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_cef ,_bcd =_bacgd ([]byte (_fgd ),_cef );if _bcd !=nil {return reportState {},_bcd ;
};var _eeb reportState ;_bcd =_ea .Unmarshal (_cef ,&_eeb );if _bcd !=nil {_adb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bcd );return reportState {},_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _eeb ,nil ;};func (_bg *meteredClient )getStatus ()(meteredStatusResp ,error ){var _cbe meteredStatusResp ;_caf :=_bg ._dbc +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _ab meteredStatusForm ;_ebc ,_cee :=_ea .Marshal (_ab );
if _cee !=nil {return _cbe ,_cee ;};_fdd ,_cee :=_adg (_ebc );if _cee !=nil {return _cbe ,_cee ;};_fe ,_cee :=_gf .NewRequest ("\u0050\u004f\u0053\u0054",_caf ,_fdd );if _cee !=nil {return _cbe ,_cee ;};_fe .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fe .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fe .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fe .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bg ._gba );_gac ,_cee :=_bg ._eggd .Do (_fe );if _cee !=nil {return _cbe ,_cee ;};defer _gac .Body .Close ();if _gac .StatusCode !=200{return _cbe ,_fd .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gac .StatusCode );
};_fabb ,_cee :=_afa (_gac );if _cee !=nil {return _cbe ,_cee ;};_cee =_ea .Unmarshal (_fabb ,&_cbe );if _cee !=nil {return _cbe ,_cee ;};return _cbe ,nil ;};func init (){_bgdf :=_f .Getenv (_bbe );_agc :=_f .Getenv (_cagd );if len (_bgdf )==0||len (_agc )==0{return ;
};_bd ,_cefd :=_b .ReadFile (_bgdf );if _cefd !=nil {_adb .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_cefd );return ;};
_cefd =SetLicenseKey (string (_bd ),_agc );if _cefd !=nil {_adb .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cefd );
return ;};};var _cfc =_ac .Date (2010,1,1,0,0,0,0,_ac .UTC );type meteredClient struct{_dbc string ;_gba string ;_eggd *_gf .Client ;};func _aga ()(_ca .IP ,error ){_bfb ,_fgcd :=_ca .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _fgcd !=nil {return nil ,_fgcd ;};defer _bfb .Close ();_aaa :=_bfb .LocalAddr ().(*_ca .UDPAddr );return _aaa .IP ,nil ;};func Track (docKey string ,useKey string )error {return _abg (docKey ,useKey ,!_gfef ._cab )};func _afa (_abdg *_gf .Response )([]byte ,error ){var _dff []byte ;
_ecb ,_ece :=_bcf (_abdg );if _ece !=nil {return _dff ,_ece ;};return _b .ReadAll (_ecb );};func SetLicenseKey (content string ,customerName string )error {_dbd ,_edfe :=_cbg (content );if _edfe !=nil {_adb .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_edfe );
return _edfe ;};if !_eg .EqualFold (_dbd .CustomerName ,customerName ){_adb .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_dbd .CustomerName ,customerName );
return _fd .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_dbd .CustomerName ,customerName );
};_edfe =_dbd .Validate ();if _edfe !=nil {_adb .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_edfe );
return _edfe ;};_gfef =&_dbd ;return nil ;};func _fcc ()([]string ,[]string ,error ){_cc ,_dcc :=_ca .Interfaces ();if _dcc !=nil {return nil ,nil ,_dcc ;};var _fgde []string ;var _ddce []string ;for _ ,_cagc :=range _cc {if _cagc .Flags &_ca .FlagUp ==0||_dd .Equal (_cagc .HardwareAddr ,nil ){continue ;
};_edf ,_acfe :=_cagc .Addrs ();if _acfe !=nil {return nil ,nil ,_acfe ;};_edbc :=0;for _ ,_fddc :=range _edf {var _fged _ca .IP ;switch _bce :=_fddc .(type ){case *_ca .IPNet :_fged =_bce .IP ;case *_ca .IPAddr :_fged =_bce .IP ;};if _fged .IsLoopback (){continue ;
};if _fged .To4 ()==nil {continue ;};_ddce =append (_ddce ,_fged .String ());_edbc ++;};_ebg :=_cagc .HardwareAddr .String ();if _ebg !=""&&_edbc > 0{_fgde =append (_fgde ,_ebg );};};return _fgde ,_ddce ,nil ;};type LicenseKey struct{LicenseId string `json:"license_id"`;
CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _ac .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_ac .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;
CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_egg bool ;_cbb string ;_cab bool ;};type meteredStatusResp struct{Valid bool `json:"valid"`;
OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};