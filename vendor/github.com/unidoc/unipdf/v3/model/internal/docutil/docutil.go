//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package docutil ;import (_d "errors";_c "fmt";_e "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/core";);func (_ggf *Catalog )NewOutputIntents ()*OutputIntents {return &OutputIntents {_cga :_ggf ._gc }};func (_cgf *Catalog )GetMetadata ()(*_cg .PdfObjectStream ,bool ){_gf ,_ga :=_cg .GetStream (_cgf .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));
return _gf ,_ga ;};type Image struct{Name string ;Width int ;Height int ;Colorspace _cg .PdfObjectName ;ColorComponents int ;BitsPerComponent int ;SMask *ImageSMask ;Stream *_cg .PdfObjectStream ;};func (_cb *OutputIntents )Get (i int )(OutputIntent ,bool ){if _cb ._eg ==nil {return OutputIntent {},false ;
};if i >=_cb ._eg .Len (){return OutputIntent {},false ;};_gce :=_cb ._eg .Get (i );_daf ,_af :=_cg .GetIndirect (_gce );if !_af {_gac ,_bde :=_cg .GetDict (_gce );return OutputIntent {Object :_gac },_bde ;};_feb ,_bef :=_cg .GetDict (_daf .PdfObject );
return OutputIntent {Object :_feb },_bef ;};func (_bdg Page )GetResourcesXObject ()(*_cg .PdfObjectDictionary ,bool ){_df ,_dcb :=_bdg .GetResources ();if !_dcb {return nil ,false ;};return _cg .GetDict (_df .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
};func (_eb Page )GetContents ()([]Content ,bool ){_abg ,_ed :=_cg .GetArray (_eb .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ed {_agb ,_aegd :=_cg .GetStream (_eb .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_aegd {return nil ,false ;};return []Content {{Stream :_agb ,_ff :_eb ,_ddc :0}},true ;};_fge :=make ([]Content ,_abg .Len ());for _ggc ,_eee :=range _abg .Elements (){_febb ,_gcb :=_cg .GetStream (_eee );if !_gcb {continue ;};_fge [_ggc ]=Content {Stream :_febb ,_ff :_eb ,_ddc :_ggc };
};return _fge ,true ;};type OutputIntent struct{Object *_cg .PdfObjectDictionary ;};func (_faa *OutputIntents )Len ()int {return _faa ._eg .Len ()};func (_gad *Document )AddIndirectObject (indirect *_cg .PdfIndirectObject ){for _ ,_bae :=range _gad .Objects {if _bae ==indirect {return ;
};};_gad .Objects =append (_gad .Objects ,indirect );};func (_egb Page )GetResources ()(*_cg .PdfObjectDictionary ,bool ){return _cg .GetDict (_egb .Object .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));};func (_gg *Catalog )HasMetadata ()bool {_fe :=_gg .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
return _fe !=nil ;};func (_gcc *Catalog )SetMetadata (data []byte )error {_bbg ,_fc :=_cg .MakeStream (data ,nil );if _fc !=nil {return _fc ;};_bbg .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));_bbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0058\u004d\u004c"));
_gcc .Object .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbg );_gcc ._gc .Objects =append (_gcc ._gc .Objects ,_bbg );return nil ;};func (_aea Content )GetData ()([]byte ,error ){_aabg ,_ded :=_cg .NewEncoderFromStream (_aea .Stream );if _ded !=nil {return nil ,_ded ;
};_gfc ,_ded :=_aabg .DecodeStream (_aea .Stream );if _ded !=nil {return nil ,_ded ;};return _gfc ,nil ;};type OutputIntents struct{_eg *_cg .PdfObjectArray ;_cga *Document ;_fdg *_cg .PdfIndirectObject ;};func _gceb (_afc _cg .PdfObject )(_cg .PdfObjectName ,error ){var _bf *_cg .PdfObjectName ;
var _begc *_cg .PdfObjectArray ;if _ab ,_gec :=_afc .(*_cg .PdfIndirectObject );_gec {if _agf ,_bac :=_ab .PdfObject .(*_cg .PdfObjectArray );_bac {_begc =_agf ;}else if _ca ,_fde :=_ab .PdfObject .(*_cg .PdfObjectName );_fde {_bf =_ca ;};}else if _cae ,_dbd :=_afc .(*_cg .PdfObjectArray );
_dbd {_begc =_cae ;}else if _afg ,_baeg :=_afc .(*_cg .PdfObjectName );_baeg {_bf =_afg ;};if _bf !=nil {switch *_bf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bf ,nil ;
case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bf ,nil ;};};if _begc !=nil &&_begc .Len ()> 0{if _ae ,_dgc :=_begc .Get (0).(*_cg .PdfObjectName );_dgc {switch *_ae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _begc .Len ()==1{return *_ae ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_ae ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_ae ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_ae ,nil ;};};};return "",nil ;};func (_acg *Document )FindCatalog ()(*Catalog ,bool ){var _ag *_cg .PdfObjectDictionary ;for _ ,_bbed :=range _acg .Objects {_dcf ,_bg :=_cg .GetDict (_bbed );
if !_bg {continue ;};if _dba ,_cgad :=_cg .GetName (_dcf .Get ("\u0054\u0079\u0070\u0065"));_cgad &&*_dba =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_ag =_dcf ;break ;};};if _ag ==nil {return nil ,false ;};return &Catalog {Object :_ag ,_gc :_acg },true ;
};func (_egbf *Content )SetData (data []byte )error {_ffd ,_dggb :=_cg .MakeStream (data ,_cg .NewFlateEncoder ());if _dggb !=nil {return _dggb ;};_gecd ,_eff :=_cg .GetArray (_egbf ._ff .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_eff &&_egbf ._ddc ==0{_egbf ._ff .Object .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ffd );}else {if _dggb =_gecd .Set (_egbf ._ddc ,_ffd );_dggb !=nil {return _dggb ;};};_egbf ._ff ._aeg .Objects =append (_egbf ._ff ._aeg .Objects ,_ffd );
return nil ;};func (_fgc *Page )Number ()int {return _fgc ._gab };type Page struct{_gab int ;Object *_cg .PdfObjectDictionary ;_aeg *Document ;};func (_de *Catalog )SetVersion (){_de .Object .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cg .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_de ._gc .Version .Major ,_de ._gc .Version .Minor )));
};func (_a *Catalog )SetOutputIntents (outputIntents *OutputIntents ){if _fd :=_a .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");_fd !=nil {for _feg ,_gbb :=range _a ._gc .Objects {if _gbb ==_fd {if outputIntents ._fdg ==_fd {return ;
};_a ._gc .Objects =append (_a ._gc .Objects [:_feg ],_a ._gc .Objects [_feg +1:]...);break ;};};};_dc :=outputIntents ._fdg ;if _dc ==nil {_dc =_cg .MakeIndirectObject (outputIntents ._eg );};_a .Object .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_dc );
_a ._gc .Objects =append (_a ._gc .Objects ,_dc );};func (_b *Catalog )GetPages ()([]Page ,bool ){_ec ,_f :=_cg .GetDict (_b .Object .Get ("\u0050\u0061\u0067e\u0073"));if !_f {return nil ,false ;};_cc ,_fa :=_cg .GetArray (_ec .Get ("\u004b\u0069\u0064\u0073"));
if !_fa {return nil ,false ;};_deg :=make ([]Page ,_cc .Len ());for _bb ,_dg :=range _cc .Elements (){_cd ,_da :=_cg .GetDict (_dg );if !_da {continue ;};_deg [_bb ]=Page {Object :_cd ,_gab :_bb +1,_aeg :_b ._gc };};return _deg ,true ;};func (_fcd Page )FindXObjectForms ()[]*_cg .PdfObjectStream {_gged ,_dce :=_fcd .GetResourcesXObject ();
if !_dce {return nil ;};_fdeg :=map[*_cg .PdfObjectStream ]struct{}{};var _gga func (_egc *_cg .PdfObjectDictionary ,_aba map[*_cg .PdfObjectStream ]struct{});_gga =func (_bcd *_cg .PdfObjectDictionary ,_bff map[*_cg .PdfObjectStream ]struct{}){for _ ,_gadd :=range _bcd .Keys (){_fad ,_gacdg :=_cg .GetStream (_bcd .Get (_gadd ));
if !_gacdg {continue ;};if _ ,_bdde :=_bff [_fad ];_bdde {continue ;};_cbc ,_dae :=_cg .GetName (_fad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dae ||_cbc .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_bff [_fad ]=struct{}{};_ecc ,_dae :=_cg .GetDict (_fad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_dae {continue ;};_bad ,_acga :=_cg .GetDict (_ecc .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if _acga {_gga (_bad ,_bff );};};};_gga (_gged ,_fdeg );var _efe []*_cg .PdfObjectStream ;for _gd :=range _fdeg {_efe =append (_efe ,_gd );};return _efe ;
};func (_gb *Catalog )SetMarkInfo (mi _cg .PdfObject ){_ee :=_cg .MakeIndirectObject (mi );_gb .Object .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",_ee );_gb ._gc .Objects =append (_gb ._gc .Objects ,_ee );};func (_bd *Catalog )GetMarkInfo ()(*_cg .PdfObjectDictionary ,bool ){_be ,_ecd :=_cg .GetDict (_bd .Object .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f"));
return _be ,_ecd ;};func (_ge *Document )GetPages ()([]Page ,bool ){_fgb ,_bc :=_ge .FindCatalog ();if !_bc {return nil ,false ;};return _fgb .GetPages ();};type Catalog struct{Object *_cg .PdfObjectDictionary ;_gc *Document ;};func (_ccd *Catalog )GetOutputIntents ()(*OutputIntents ,bool ){_bbe :=_ccd .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
if _bbe ==nil {return nil ,false ;};_dd ,_eec :=_cg .GetIndirect (_bbe );if !_eec {return nil ,false ;};_fg ,_ac :=_cg .GetArray (_dd .PdfObject );if !_ac {return nil ,false ;};return &OutputIntents {_fdg :_dd ,_eg :_fg ,_cga :_ccd ._gc },true ;};type Content struct{Stream *_cg .PdfObjectStream ;
_ddc int ;_ff Page ;};func (_bcf Page )FindXObjectImages ()([]*Image ,error ){_bdbe ,_egf :=_bcf .GetResourcesXObject ();if !_egf {return nil ,nil ;};var _cac []*Image ;var _bdec error ;_gcd :=map[*_cg .PdfObjectStream ]int {};_gacd :=map[*_cg .PdfObjectStream ]struct{}{};
var _agfc int ;for _ ,_dbdd :=range _bdbe .Keys (){_fag ,_cde :=_cg .GetStream (_bdbe .Get (_dbdd ));if !_cde {continue ;};if _ ,_cf :=_gcd [_fag ];_cf {continue ;};_cbf ,_fea :=_cg .GetName (_fag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fea ||_cbf .String ()!="\u0049\u006d\u0061g\u0065"{continue ;
};_fb :=Image {BitsPerComponent :8,Stream :_fag ,Name :string (_dbdd )};if _fb .Colorspace ,_bdec =_gceb (_fag .PdfObjectDictionary .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_bdec !=nil {_e .Log .Error ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0074\u0065r\u006d\u0069\u006e\u0065\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0073",_bdec );
continue ;};if _eeec ,_dfe :=_cg .GetIntVal (_fag .PdfObjectDictionary .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dfe {_fb .BitsPerComponent =_eeec ;};if _gge ,_bgc :=_cg .GetIntVal (_fag .PdfObjectDictionary .Get ("\u0057\u0069\u0064t\u0068"));
_bgc {_fb .Width =_gge ;};if _gccg ,_agg :=_cg .GetIntVal (_fag .PdfObjectDictionary .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_agg {_fb .Height =_gccg ;};if _def ,_aa :=_cg .GetStream (_fag .Get ("\u0053\u004d\u0061s\u006b"));_aa {_fb .SMask =&ImageSMask {Image :&_fb ,Stream :_def };
_gacd [_def ]=struct{}{};};switch _fb .Colorspace {case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":_fb .ColorComponents =3;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":_fb .ColorComponents =1;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":_fb .ColorComponents =4;
default:_fb .ColorComponents =-1;};_gcd [_fag ]=_agfc ;_cac =append (_cac ,&_fb );_agfc ++;};var _cgb []int ;for _ ,_baef :=range _cac {if _baef .SMask !=nil {_gfg ,_ebbc :=_gcd [_baef .SMask .Stream ];if _ebbc {_cgb =append (_cgb ,_gfg );};};};_bfb :=make ([]*Image ,len (_cac )-len (_cgb ));
_agfc =0;_dbac :for _ea ,_faf :=range _cac {for _ ,_bdd :=range _cgb {if _ea ==_bdd {continue _dbac ;};};_bfb [_agfc ]=_faf ;_agfc ++;};return _cac ,nil ;};func (_bdb *Document )AddStream (stream *_cg .PdfObjectStream ){for _ ,_ecf :=range _bdb .Objects {if _ecf ==stream {return ;
};};_bdb .Objects =append (_bdb .Objects ,stream );};type ImageSMask struct{Image *Image ;Stream *_cg .PdfObjectStream ;};type Document struct{ID [2]string ;Version _cg .Version ;Objects []_cg .PdfObject ;Info _cg .PdfObject ;Crypt *_cg .PdfCrypt ;UseHashBasedID bool ;
};func (_bdc *OutputIntents )Add (oi _cg .PdfObject )error {_cgc ,_fdb :=oi .(*_cg .PdfObjectDictionary );if !_fdb {return _d .New ("\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006et\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0061\u006e\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if _db ,_ef :=_cg .GetStream (_cgc .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));_ef {_bdc ._cga .Objects =append (_bdc ._cga .Objects ,_db );};_ba ,_baf :=oi .(*_cg .PdfIndirectObject );if !_baf {_ba =_cg .MakeIndirectObject (oi );
};if _bdc ._eg ==nil {_bdc ._eg =_cg .MakeArray (_ba );}else {_bdc ._eg .Append (_ba );};_bdc ._cga .Objects =append (_bdc ._cga .Objects ,_ba );return nil ;};