//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fc "bytes";_d "encoding/binary";_fb "errors";_g "fmt";_gcge "github.com/unidoc/unipdf/v3/common";_ed "github.com/unidoc/unipdf/v3/core";_fe "github.com/unidoc/unipdf/v3/internal/cmap";_ad "github.com/unidoc/unipdf/v3/internal/textencoding";
_e "io";_a "os";_gb "regexp";_gcg "sort";_gc "strings";_ab "sync";);var _bgg =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
type RuneCharSafeMap struct{_b map[rune ]CharMetrics ;_bc _ab .RWMutex ;};type Font interface{Encoder ()_ad .TextEncoder ;GetRuneMetrics (_ge rune )(CharMetrics ,bool );};func _gbe (){_eeg =MakeRuneCharSafeMap (len (_bgg ));_acdg =MakeRuneCharSafeMap (len (_bgg ));
for _bee ,_bf :=range _bgg {_eeg .Write (_bf ,CharMetrics {Wx :float64 (_bge [_bee ])});_acdg .Write (_bf ,CharMetrics {Wx :float64 (_fdf [_bee ])});};_efa =_eeg .Copy ();_bcf =_acdg .Copy ();};func _ade ()StdFont {_cge .Do (_gbe );_cgd :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cgd ,_efa );};func _gdg (){const _cbe =600;_gea =MakeRuneCharSafeMap (len (_bgg ));for _ ,_eec :=range _bgg {_gea .Write (_eec ,CharMetrics {Wx :_cbe });};_bgf =_gea .Copy ();_adcg =_gea .Copy ();_agd =_gea .Copy ();};func IsStdFont (name StdFontName )bool {_ ,_ac :=_gbd .read (name );
return _ac };type StdFont struct{_efd Descriptor ;_bg *RuneCharSafeMap ;_dc _ad .TextEncoder ;};func _ag ()StdFont {_ce .Do (_gdg );_ggb :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ggb ,_bgf );};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ad .TextEncoder )StdFont {var _ebe rune =0xA0;if _ ,_gfd :=metrics .Read (_ebe );!_gfd {_fgf ,_ :=metrics .Read (0x20);metrics .Write (_ebe ,_fgf );
};return StdFont {_efd :desc ,_bg :metrics ,_dc :encoder };};func _caaa ()StdFont {_adcc .Do (_bgc );_fba :=Descriptor {Name :TimesBoldName ,Family :_fdb ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_fba ,_fcb );};var _bgf *RuneCharSafeMap ;var _bge =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _aaec =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ad .NewStandardEncoder ());
};func (_ca StdFont )Descriptor ()Descriptor {return _ca ._efd };func (_bffc *ttfParser )ParseComponents ()error {if _gfcg :=_bffc .ParseHead ();_gfcg !=nil {return _gfcg ;};if _bbc :=_bffc .ParseHhea ();_bbc !=nil {return _bbc ;};if _daf :=_bffc .ParseMaxp ();
_daf !=nil {return _daf ;};if _cged :=_bffc .ParseHmtx ();_cged !=nil {return _cged ;};if _ ,_acdf :=_bffc ._ege ["\u006e\u0061\u006d\u0065"];_acdf {if _eegf :=_bffc .ParseName ();_eegf !=nil {return _eegf ;};};if _ ,_deeb :=_bffc ._ege ["\u004f\u0053\u002f\u0032"];
_deeb {if _cgdf :=_bffc .ParseOS2 ();_cgdf !=nil {return _cgdf ;};};if _ ,_edb :=_bffc ._ege ["\u0070\u006f\u0073\u0074"];_edb {if _fbe :=_bffc .ParsePost ();_fbe !=nil {return _fbe ;};};if _ ,_fagb :=_bffc ._ege ["\u0063\u006d\u0061\u0070"];_fagb {if _dce :=_bffc .ParseCmap ();
_dce !=nil {return _dce ;};};return nil ;};var _eeg *RuneCharSafeMap ;func (_aec *ttfParser )ParseHhea ()error {if _gcf :=_aec .Seek ("\u0068\u0068\u0065\u0061");_gcf !=nil {return _gcf ;};_aec .Skip (4+15*2);_aec ._eag =_aec .ReadUShort ();return nil ;
};var _agd *RuneCharSafeMap ;var _gac *RuneCharSafeMap ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;
StemH float64 ;};func (_fdg *RuneCharSafeMap )Range (f func (_fag rune ,_eeb CharMetrics )(_db bool )){_fdg ._bc .RLock ();defer _fdg ._bc .RUnlock ();for _bb ,_cf :=range _fdg ._b {if f (_bb ,_cf ){break ;};};};var _cge _ab .Once ;var _ Font =StdFont {};
var _fcb *RuneCharSafeMap ;func (_abc *ttfParser )ParseHmtx ()error {if _acc :=_abc .Seek ("\u0068\u006d\u0074\u0078");_acc !=nil {return _acc ;};_abc ._dee .Widths =make ([]uint16 ,0,8);for _geea :=uint16 (0);_geea < _abc ._eag ;_geea ++{_abc ._dee .Widths =append (_abc ._dee .Widths ,_abc .ReadUShort ());
_abc .Skip (2);};if _abc ._eag < _abc ._ada &&_abc ._eag > 0{_fbc :=_abc ._dee .Widths [_abc ._eag -1];for _faa :=_abc ._eag ;_faa < _abc ._ada ;_faa ++{_abc ._dee .Widths =append (_abc ._dee .Widths ,_fbc );};};return nil ;};type GID =_ad .GID ;var _adcc _ab .Once ;
func (_fed StdFont )GetMetricsTable ()*RuneCharSafeMap {return _fed ._bg };func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_b :make (map[rune ]CharMetrics ,length )};};func init (){RegisterStdFont (CourierName ,_fef ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_ag ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_adc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_gbb ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_da *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fa :=MakeRuneCharSafeMap (_da .Length ());_da .Range (func (_ee rune ,_fg CharMetrics )(_fd bool ){_fa ._b [_ee ]=_fg ;
return false });return _fa ;};type ttfParser struct{_dee TtfType ;_gcd _e .ReadSeeker ;_ege map[string ]uint32 ;_eag uint16 ;_ada uint16 ;};var _fdf =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _cbc =&RuneCharSafeMap {_b :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_cfd *TtfType )MakeEncoder ()(_ad .SimpleEncoder ,error ){_edga :=make (map[_ad .CharCode ]GlyphName );for _bfg :=_ad .CharCode (0);_bfg <=256;_bfg ++{_ae :=rune (_bfg );_agc ,_gee :=_cfd .Chars [_ae ];if !_gee {continue ;};var _cdd GlyphName ;if int (_agc )>=0&&int (_agc )< len (_cfd .GlyphNames ){_cdd =_cfd .GlyphNames [_agc ];
}else {_dd :=rune (_agc );if _dde ,_aac :=_ad .RuneToGlyph (_dd );_aac {_cdd =_dde ;};};if _cdd !=""{_edga [_bfg ]=_cdd ;};};if len (_edga )==0{_gcge .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_cfd ,_cfd .Chars );
};return _ad .NewCustomSimpleTextEncoder (_edga ,nil );};func (_acg *ttfParser )ReadUShort ()(_eeeg uint16 ){_d .Read (_acg ._gcd ,_d .BigEndian ,&_eeeg );return _eeeg ;};func _cfc ()StdFont {_cge .Do (_gbe );_agb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_agb ,_acdg );};var _eaf *RuneCharSafeMap ;var _bcf *RuneCharSafeMap ;func (_abf StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bde ,_cfe :=_abf ._bg .Read (r );return _bde ,_cfe ;};var _gea *RuneCharSafeMap ;func init (){RegisterStdFont (HelveticaName ,_gge ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_cfc ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_ade ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_beg ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _bgc (){_eaf =MakeRuneCharSafeMap (len (_bgg ));_fcb =MakeRuneCharSafeMap (len (_bgg ));_bda =MakeRuneCharSafeMap (len (_bgg ));_gac =MakeRuneCharSafeMap (len (_bgg ));for _bfa ,_deg :=range _bgg {_eaf .Write (_deg ,CharMetrics {Wx :float64 (_aaec [_bfa ])});
_fcb .Write (_deg ,CharMetrics {Wx :float64 (_aca [_bfa ])});_bda .Write (_deg ,CharMetrics {Wx :float64 (_ceg [_bfa ])});_gac .Write (_deg ,CharMetrics {Wx :float64 (_bdcg [_bfa ])});};};func (_dac *TtfType )MakeToUnicode ()*_fe .CMap {_ba :=make (map[_fe .CharCode ]rune );
if len (_dac .GlyphNames )==0{for _bff :=range _dac .Chars {_ba [_fe .CharCode (_bff )]=_bff ;};return _fe .NewToUnicodeCMap (_ba );};for _eg ,_eee :=range _dac .Chars {_daa :=_fe .CharCode (_eg );_eab :=_dac .GlyphNames [_eee ];_ced ,_cgda :=_ad .GlyphToRune (_eab );
if !_cgda {_gcge .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_eg ,_eab );_ced =_ad .MissingCodeRune ;};_ba [_daa ]=_ced ;
};return _fe .NewToUnicodeCMap (_ba );};var _ged =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func TtfParse (r _e .ReadSeeker )(TtfType ,error ){_ggee :=&ttfParser {_gcd :r };return _ggee .Parse ()};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);const (_fdb ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func _eca ()StdFont {_adcc .Do (_bgc );_abd :=Descriptor {Name :TimesRomanName ,Family :_fdb ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_abd ,_eaf );};func _gbb ()StdFont {_ce .Do (_gdg );_fcc :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fcc ,_adcg );};func (_cega *ttfParser )readByte ()(_caf uint8 ){_d .Read (_cega ._gcd ,_d .BigEndian ,&_caf );return _caf ;};type StdFontName string ;func (_gca StdFont )Name ()string {return string (_gca ._efd .Name )};func _de ()StdFont {_bbf :=_ad .NewZapfDingbatsEncoder ();
_efab :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_efab ,_cbc ,_bbf );
};func (_dgea *ttfParser )parseCmapFormat0 ()error {_agda ,_add :=_dgea .ReadStr (256);if _add !=nil {return _add ;};_fbg :=[]byte (_agda );_gcge .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dgea ._dee .String (),_agda ,_fbg );
for _ccad ,_eceb :=range _fbg {_dgea ._dee .Chars [rune (_ccad )]=GID (_eceb );};return nil ;};func init (){RegisterStdFont (SymbolName ,_bdd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_de );};func (_fcg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fcg ._bc .RLock ();defer _fcg ._bc .RUnlock ();_gg ,_fec :=_fcg ._b [b ];return _gg ,_fec ;};func (_decc *ttfParser )Seek (tag string )error {_gbec ,_dged :=_decc ._ege [tag ];
if !_dged {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_decc ._gcd .Seek (int64 (_gbec ),_e .SeekStart );return nil ;};var _bda *RuneCharSafeMap ;func (_bgee *ttfParser )parseCmapSubtable10 (_aef int64 )error {if _bgee ._dee .Chars ==nil {_bgee ._dee .Chars =make (map[rune ]GID );
};_bgee ._gcd .Seek (int64 (_bgee ._ege ["\u0063\u006d\u0061\u0070"])+_aef ,_e .SeekStart );var _adfg ,_dbb uint32 ;_efc :=_bgee .ReadUShort ();if _efc < 8{_adfg =uint32 (_bgee .ReadUShort ());_dbb =uint32 (_bgee .ReadUShort ());}else {_bgee .ReadUShort ();
_adfg =_bgee .ReadULong ();_dbb =_bgee .ReadULong ();};_gcge .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_efc ,_adfg ,_dbb );
if _efc !=0{return _fb .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cef ,_edgc :=_bgee .ReadStr (256);
if _edgc !=nil {return _edgc ;};_bgcg :=[]byte (_cef );for _ccc ,_baa :=range _bgcg {_bgee ._dee .Chars [rune (_ccc )]=GID (_baa );if _baa !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_ccc ,_baa ,rune (_baa ));
};};return nil ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func init (){RegisterStdFont (TimesRomanName ,_eca ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_caaa ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_ga ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_dec ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _adcg *RuneCharSafeMap ;type GlyphName =_ad .GlyphName ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_dg :=_gbd .read (name );_dg {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_gbd .write (name ,fnc );for _ ,_bdc :=range aliases {RegisterStdFont (_bdc ,fnc );};};var _aca =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_ega *ttfParser )Skip (n int ){_ega ._gcd .Seek (int64 (n ),_e .SeekCurrent )};func (_ec StdFont )Encoder ()_ad .TextEncoder {return _ec ._dc };func (_feb *ttfParser )ReadStr (length int )(string ,error ){_bdda :=make ([]byte ,length );_cfdd ,_dcg :=_feb ._gcd .Read (_bdda );
if _dcg !=nil {return "",_dcg ;}else if _cfdd !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_bdda ),nil ;};func NewFontFile2FromPdfObject (obj _ed .PdfObject )(TtfType ,error ){obj =_ed .TraceToDirectObject (obj );
_bgd ,_afc :=obj .(*_ed .PdfObjectStream );if !_afc {_gcge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_ed .ErrTypeError ;};_bbg ,_bea :=_ed .DecodeStream (_bgd );if _bea !=nil {return TtfType {},_bea ;};_dcd :=ttfParser {_gcd :_fc .NewReader (_bbg )};return _dcd .Parse ();};func (_edd CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_edd .Wx ,_edd .Wy );
};func _dec ()StdFont {_adcc .Do (_bgc );_deb :=Descriptor {Name :TimesBoldItalicName ,Family :_fdb ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_deb ,_bda );};func (_fbd StdFont )ToPdfObject ()_ed .PdfObject {_gd :=_ed .MakeDict ();_gd .Set ("\u0054\u0079\u0070\u0065",_ed .MakeName ("\u0046\u006f\u006e\u0074"));_gd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ed .MakeName ("\u0054\u0079\u0070e\u0031"));
_gd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ed .MakeName (_fbd .Name ()));_gd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fbd ._dc .ToPdfObject ());return _ed .MakeIndirectObject (_gd );};func (_afcf *ttfParser )ParseOS2 ()error {if _ddef :=_afcf .Seek ("\u004f\u0053\u002f\u0032");
_ddef !=nil {return _ddef ;};_gcde :=_afcf .ReadUShort ();_afcf .Skip (4*2);_afcf .Skip (11*2+10+4*4+4);_ddfa :=_afcf .ReadUShort ();_afcf ._dee .Bold =(_ddfa &32)!=0;_afcf .Skip (2*2);_afcf ._dee .TypoAscender =_afcf .ReadShort ();_afcf ._dee .TypoDescender =_afcf .ReadShort ();
if _gcde >=2{_afcf .Skip (3*2+2*4+2);_afcf ._dee .CapHeight =_afcf .ReadShort ();}else {_afcf ._dee .CapHeight =0;};return nil ;};var _acdg *RuneCharSafeMap ;func _adc ()StdFont {_ce .Do (_gdg );_dcf :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dcf ,_agd );};func (_fdc *ttfParser )parseCmapFormat6 ()error {_afa :=int (_fdc .ReadUShort ());_cbgf :=int (_fdc .ReadUShort ());_gcge .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_fdc ._dee .String (),_afa ,_cbgf );
for _fdaf :=0;_fdaf < _cbgf ;_fdaf ++{_deca :=GID (_fdc .ReadUShort ());_fdc ._dee .Chars [rune (_fdaf +_afa )]=_deca ;};return nil ;};func (_ffgb *ttfParser )ParsePost ()error {if _cbd :=_ffgb .Seek ("\u0070\u006f\u0073\u0074");_cbd !=nil {return _cbd ;
};_adaa :=_ffgb .Read32Fixed ();_ffgb ._dee .ItalicAngle =_ffgb .Read32Fixed ();_ffgb ._dee .UnderlinePosition =_ffgb .ReadShort ();_ffgb ._dee .UnderlineThickness =_ffgb .ReadShort ();_ffgb ._dee .IsFixedPitch =_ffgb .ReadULong ()!=0;_ffgb .ReadULong ();
_ffgb .ReadULong ();_ffgb .ReadULong ();_ffgb .ReadULong ();_gcge .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_adaa );switch _adaa {case 1.0:_ffgb ._dee .GlyphNames =_ged ;
case 2.0:_gfcf :=int (_ffgb .ReadUShort ());_gcc :=make ([]int ,_gfcf );_ffgb ._dee .GlyphNames =make ([]GlyphName ,_gfcf );_abcg :=-1;for _bed :=0;_bed < _gfcf ;_bed ++{_ddfd :=int (_ffgb .ReadUShort ());_gcc [_bed ]=_ddfd ;if _ddfd <=0x7fff&&_ddfd > _abcg {_abcg =_ddfd ;
};};var _eeae []GlyphName ;if _abcg >=len (_ged ){_eeae =make ([]GlyphName ,_abcg -len (_ged )+1);for _afcc :=0;_afcc < _abcg -len (_ged )+1;_afcc ++{_eeec :=int (_ffgb .readByte ());_cgdff ,_fca :=_ffgb .ReadStr (_eeec );if _fca !=nil {return _fca ;};
_eeae [_afcc ]=GlyphName (_cgdff );};};for _bae :=0;_bae < _gfcf ;_bae ++{_adcgc :=_gcc [_bae ];if _adcgc < len (_ged ){_ffgb ._dee .GlyphNames [_bae ]=_ged [_adcgc ];}else if _adcgc >=len (_ged )&&_adcgc <=32767{_ffgb ._dee .GlyphNames [_bae ]=_eeae [_adcgc -len (_ged )];
}else {_ffgb ._dee .GlyphNames [_bae ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_cac :=make ([]int ,_ffgb ._ada );for _egef :=0;_egef < len (_cac );_egef ++{_fagc :=int (_ffgb .ReadSByte ());_cac [_egef ]=_egef +1+_fagc ;
};_ffgb ._dee .GlyphNames =make ([]GlyphName ,len (_cac ));for _dae :=0;_dae < len (_ffgb ._dee .GlyphNames );_dae ++{_eagc :=_ged [_cac [_dae ]];_ffgb ._dee .GlyphNames [_dae ]=_eagc ;};case 3.0:_gcge .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gcge .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_adaa );};return nil ;};var _gbd =&fontMap {_cg :make (map[StdFontName ]func ()StdFont )};
func (_eb *RuneCharSafeMap )Length ()int {_eb ._bc .RLock ();defer _eb ._bc .RUnlock ();return len (_eb ._b );};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;
UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _fef ()StdFont {_ce .Do (_gdg );_eda :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_eda ,_gea );};func (_cd *fontMap )write (_cb StdFontName ,_gf func ()StdFont ){_cd .Lock ();defer _cd .Unlock ();_cd ._cg [_cb ]=_gf ;};func (_gab *ttfParser )ReadSByte ()(_cbef int8 ){_d .Read (_gab ._gcd ,_d .BigEndian ,&_cbef );return _cbef ;
};var _efa *RuneCharSafeMap ;func (_aab *ttfParser )ParseHead ()error {if _ffe :=_aab .Seek ("\u0068\u0065\u0061\u0064");_ffe !=nil {return _ffe ;};_aab .Skip (3*4);_efad :=_aab .ReadULong ();if _efad !=0x5F0F3CF5{_gcge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_aab );
};_aab .Skip (2);_aab ._dee .UnitsPerEm =_aab .ReadUShort ();_aab .Skip (2*8);_aab ._dee .Xmin =_aab .ReadShort ();_aab ._dee .Ymin =_aab .ReadShort ();_aab ._dee .Xmax =_aab .ReadShort ();_aab ._dee .Ymax =_aab .ReadShort ();return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_df ,_be :=_gbd .read (name );
if !_be {return StdFont {},false ;};return _df (),true ;};func (_ef *fontMap )read (_ebf StdFontName )(func ()StdFont ,bool ){_ef .Lock ();defer _ef .Unlock ();_bcd ,_edf :=_ef ._cg [_ebf ];return _bcd ,_edf ;};func (_gad *ttfParser )parseTTC ()(TtfType ,error ){_gad .Skip (2*2);
_dgb :=_gad .ReadULong ();if _dgb < 1{return TtfType {},_fb .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");};_eeba :=_gad .ReadULong ();_ ,_dba :=_gad ._gcd .Seek (int64 (_eeba ),_e .SeekStart );
if _dba !=nil {return TtfType {},_dba ;};return _gad .Parse ();};func _cgfd (_dgbc map[string ]uint32 )string {var _cgef []string ;for _beee :=range _dgbc {_cgef =append (_cgef ,_beee );};_gcg .Slice (_cgef ,func (_afg ,_ccd int )bool {return _dgbc [_cgef [_afg ]]< _dgbc [_cgef [_ccd ]]});
_ffg :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_dgbc ))};for _ ,_cfb :=range _cgef {_ffg =append (_ffg ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cfb ,_dgbc [_cfb ]));
};return _gc .Join (_ffg ,"\u000a");};func (_beaf *ttfParser )parseCmapSubtable31 (_ffge int64 )error {_gcbe :=make ([]rune ,0,8);_egc :=make ([]rune ,0,8);_bce :=make ([]int16 ,0,8);_cca :=make ([]uint16 ,0,8);_beaf ._dee .Chars =make (map[rune ]GID );
_beaf ._gcd .Seek (int64 (_beaf ._ege ["\u0063\u006d\u0061\u0070"])+_ffge ,_e .SeekStart );_bef :=_beaf .ReadUShort ();if _bef !=4{_gcge .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_bef );
return nil ;};_beaf .Skip (2*2);_cfdg :=int (_beaf .ReadUShort ()/2);_beaf .Skip (3*2);for _aabf :=0;_aabf < _cfdg ;_aabf ++{_egc =append (_egc ,rune (_beaf .ReadUShort ()));};_beaf .Skip (2);for _cfab :=0;_cfab < _cfdg ;_cfab ++{_gcbe =append (_gcbe ,rune (_beaf .ReadUShort ()));
};for _fga :=0;_fga < _cfdg ;_fga ++{_bce =append (_bce ,_beaf .ReadShort ());};_dea ,_ :=_beaf ._gcd .Seek (int64 (0),_e .SeekCurrent );for _ddf :=0;_ddf < _cfdg ;_ddf ++{_cca =append (_cca ,_beaf .ReadUShort ());};for _adf :=0;_adf < _cfdg ;_adf ++{_afd :=_gcbe [_adf ];
_dda :=_egc [_adf ];_cede :=_bce [_adf ];_ebg :=_cca [_adf ];if _ebg > 0{_beaf ._gcd .Seek (_dea +2*int64 (_adf )+int64 (_ebg ),_e .SeekStart );};for _bca :=_afd ;_bca <=_dda ;_bca ++{if _bca ==0xFFFF{break ;};var _fab int32 ;if _ebg > 0{_fab =int32 (_beaf .ReadUShort ());
if _fab > 0{_fab +=int32 (_cede );};}else {_fab =_bca +int32 (_cede );};if _fab >=65536{_fab -=65536;};if _fab > 0{_beaf ._dee .Chars [_bca ]=GID (_fab );};};};return nil ;};func (_cgb *ttfParser )Parse ()(TtfType ,error ){_fgb ,_gdf :=_cgb .ReadStr (4);
if _gdf !=nil {return TtfType {},_gdf ;};if _fgb =="\u0074\u0074\u0063\u0066"{return _cgb .parseTTC ();}else if _fgb !="\u0000\u0001\u0000\u0000"&&_fgb !="\u0074\u0072\u0075\u0065"{_gcge .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_fgb );
};_aaa :=int (_cgb .ReadUShort ());_cgb .Skip (3*2);_cgb ._ege =make (map[string ]uint32 );var _gcb string ;for _dcb :=0;_dcb < _aaa ;_dcb ++{_gcb ,_gdf =_cgb .ReadStr (4);if _gdf !=nil {return TtfType {},_gdf ;};_cgb .Skip (4);_bddb :=_cgb .ReadULong ();
_cgb .Skip (4);_cgb ._ege [_gcb ]=_bddb ;};_gcge .Log .Trace (_cgfd (_cgb ._ege ));if _gdf =_cgb .ParseComponents ();_gdf !=nil {return TtfType {},_gdf ;};return _cgb ._dee ,nil ;};func (_dgec *ttfParser )ReadShort ()(_dffb int16 ){_d .Read (_dgec ._gcd ,_d .BigEndian ,&_dffb );
return _dffb ;};func (_c *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_c ._bc .Lock ();defer _c ._bc .Unlock ();_c ._b [b ]=r ;};func (_afdg *ttfParser )ParseCmap ()error {var _gce int64 ;if _gadg :=_afdg .Seek ("\u0063\u006d\u0061\u0070");_gadg !=nil {return _gadg ;
};_afdg .ReadUShort ();_ceb :=int (_afdg .ReadUShort ());_gfg :=int64 (0);_fefc :=int64 (0);_cgfb :=int64 (0);for _abce :=0;_abce < _ceb ;_abce ++{_adcga :=_afdg .ReadUShort ();_ggg :=_afdg .ReadUShort ();_gce =int64 (_afdg .ReadULong ());if _adcga ==3&&_ggg ==1{_fefc =_gce ;
}else if _adcga ==3&&_ggg ==10{_cgfb =_gce ;}else if _adcga ==1&&_ggg ==0{_gfg =_gce ;};};if _gfg !=0{if _gaf :=_afdg .parseCmapVersion (_gfg );_gaf !=nil {return _gaf ;};};if _fefc !=0{if _ffed :=_afdg .parseCmapSubtable31 (_fefc );_ffed !=nil {return _ffed ;
};};if _cgfb !=0{if _ddd :=_afdg .parseCmapVersion (_cgfb );_ddd !=nil {return _ddd ;};};if _fefc ==0&&_gfg ==0&&_cgfb ==0{_gcge .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););type fontMap struct{_ab .Mutex ;_cg map[StdFontName ]func ()StdFont ;};func (_eba *ttfParser )ReadULong ()(_fde uint32 ){_d .Read (_eba ._gcd ,_d .BigEndian ,&_fde );
return _fde ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_dbc *ttfParser )parseCmapFormat12 ()error {_cgfdb :=_dbc .ReadULong ();_gcge .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_dbc ._dee .String (),_cgfdb );
for _fagg :=uint32 (0);_fagg < _cgfdb ;_fagg ++{_ddeg :=_dbc .ReadULong ();_afdb :=_dbc .ReadULong ();_gbc :=_dbc .ReadULong ();if _ddeg > 0x0010FFFF||(0xD800<=_ddeg &&_ddeg <=0xDFFF){return _fb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _afdb < _ddeg ||_afdb > 0x0010FFFF||(0xD800<=_afdb &&_afdb <=0xDFFF){return _fb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bfd :=_ddeg ;_bfd <=_afdb ;
_bfd ++{if _bfd > 0x10FFFF{_gcge .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_dbc ._dee .Chars [rune (_bfd )]=GID (_gbc );_gbc ++;};};return nil ;};func (_agdc *ttfParser )Read32Fixed ()float64 {_eeeag :=float64 (_agdc .ReadShort ());_degc :=float64 (_agdc .ReadUShort ())/65536.0;return _eeeag +_degc ;};var _bdcg =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func _ga ()StdFont {_adcc .Do (_bgc );_cc :=Descriptor {Name :TimesItalicName ,Family :_fdb ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_cc ,_gac );};func (_fda *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_fda .PostScriptName ,_fda .UnitsPerEm ,_fda .Bold ,_fda .ItalicAngle ,_fda .CapHeight ,len (_fda .Chars ),len (_fda .GlyphNames ));
};func _beg ()StdFont {_cge .Do (_gbe );_gfc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gfc ,_bcf );};func _bdd ()StdFont {_aad :=_ad .NewSymbolEncoder ();_ea :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_ea ,_aae ,_aad );};func (_ecag *TtfType )NewEncoder ()_ad .TextEncoder {return _ad .NewTrueTypeFontEncoder (_ecag .Chars )};var _ce _ab .Once ;func (_ddec *ttfParser )parseCmapVersion (_cfg int64 )error {_gcge .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_cfg );
if _ddec ._dee .Chars ==nil {_ddec ._dee .Chars =make (map[rune ]GID );};_ddec ._gcd .Seek (int64 (_ddec ._ege ["\u0063\u006d\u0061\u0070"])+_cfg ,_e .SeekStart );var _ddg ,_dag uint32 ;_abda :=_ddec .ReadUShort ();if _abda < 8{_ddg =uint32 (_ddec .ReadUShort ());
_dag =uint32 (_ddec .ReadUShort ());}else {_ddec .ReadUShort ();_ddg =_ddec .ReadULong ();_dag =_ddec .ReadULong ();};_gcge .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_abda ,_ddg ,_dag );
switch _abda {case 0:return _ddec .parseCmapFormat0 ();case 6:return _ddec .parseCmapFormat6 ();case 12:return _ddec .parseCmapFormat12 ();default:_gcge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_abda );
return nil ;};};type FontWeight int ;func TtfParseFile (fileStr string )(TtfType ,error ){_afb ,_ece :=_a .Open (fileStr );if _ece !=nil {return TtfType {},_ece ;};defer _afb .Close ();return TtfParse (_afb );};var _ceg =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_eff *ttfParser )ParseMaxp ()error {if _edaf :=_eff .Seek ("\u006d\u0061\u0078\u0070");_edaf !=nil {return _edaf ;};_eff .Skip (4);_eff ._ada =_eff .ReadUShort ();return nil ;};func (_bgga *ttfParser )ParseName ()error {if _dgbd :=_bgga .Seek ("\u006e\u0061\u006d\u0065");
_dgbd !=nil {return _dgbd ;};_ccca ,_ :=_bgga ._gcd .Seek (0,_e .SeekCurrent );_bgga ._dee .PostScriptName ="";_bgga .Skip (2);_gceb :=_bgga .ReadUShort ();_gcab :=_bgga .ReadUShort ();for _feca :=uint16 (0);_feca < _gceb &&_bgga ._dee .PostScriptName =="";
_feca ++{_bgga .Skip (3*2);_cbb :=_bgga .ReadUShort ();_adcgae :=_bgga .ReadUShort ();_eea :=_bgga .ReadUShort ();if _cbb ==6{_bgga ._gcd .Seek (_ccca +int64 (_gcab )+int64 (_eea ),_e .SeekStart );_dff ,_fgca :=_bgga .ReadStr (int (_adcgae ));if _fgca !=nil {return _fgca ;
};_dff =_gc .Replace (_dff ,"\u0000","",-1);_ffd ,_fgca :=_gb .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _fgca !=nil {return _fgca ;};_bgga ._dee .PostScriptName =_ffd .ReplaceAllString (_dff ,"");};
};if _bgga ._dee .PostScriptName ==""{_gcge .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _aae =&RuneCharSafeMap {_b :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func _gge ()StdFont {_cge .Do (_gbe );_caa :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_caa ,_eeg );};