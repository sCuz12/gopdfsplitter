//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ag "bufio";_af "bytes";_ff "crypto/md5";_ed "crypto/rand";_be "crypto/sha1";_fb "crypto/x509";_d "encoding/binary";_fe "encoding/hex";_g "errors";_e "fmt";_feg "github.com/unidoc/pkcs7";_adg "github.com/unidoc/unipdf/v3/common";
_aff "github.com/unidoc/unipdf/v3/core";_eec "github.com/unidoc/unipdf/v3/core/security";_aa "github.com/unidoc/unipdf/v3/core/security/crypt";_da "github.com/unidoc/unipdf/v3/internal/cmap";_gd "github.com/unidoc/unipdf/v3/internal/imageutil";_gff "github.com/unidoc/unipdf/v3/internal/license";
_aae "github.com/unidoc/unipdf/v3/internal/sampling";_eee "github.com/unidoc/unipdf/v3/internal/textencoding";_cd "github.com/unidoc/unipdf/v3/internal/timeutils";_eb "github.com/unidoc/unipdf/v3/internal/transform";_bb "github.com/unidoc/unipdf/v3/model/internal/docutil";
_bcd "github.com/unidoc/unipdf/v3/model/internal/fonts";_gf "github.com/unidoc/unipdf/v3/model/mdp";_bfd "github.com/unidoc/unipdf/v3/model/sigutil";_bf "github.com/unidoc/unipdf/v3/ps";_fga "github.com/unidoc/unitype";_ffb "golang.org/x/xerrors";_c "hash";
_cg "image";_bc "image/color";_ "image/gif";_ "image/png";_ega "io";_ad "io/ioutil";_cf "math";_ffe "math/rand";_db "os";_bd "regexp";_fg "sort";_eed "strconv";_ba "strings";_b "sync";_f "time";_ee "unicode";_eg "unicode/utf8";);

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _aff .PdfObject ;BS _aff .PdfObject ;LE _aff .PdfObject ;IC _aff .PdfObject ;LL _aff .PdfObject ;LLE _aff .PdfObject ;Cap _aff .PdfObject ;IT _aff .PdfObject ;LLO _aff .PdfObject ;CP _aff .PdfObject ;
Measure _aff .PdfObject ;CO _aff .PdfObject ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _aff .PdfObjectName ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_fcdfd *PdfReader )PageFromIndirectObject (ind *_aff .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_fcdfd .PageList )!=len (_fcdfd ._bfgfec ){return nil ,0,_g .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _gaeg ,_dfacb :=range _fcdfd ._bfgfec {if _dfacb ==ind {return _fcdfd .PageList [_gaeg ],_gaeg +1,nil ;};};return nil ,0,_g .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_gfba *PdfReader )newPdfPageFromDict (_cafca *_aff .PdfObjectDictionary )(*PdfPage ,error ){_fccg :=NewPdfPage ();
_fccg ._bbdac =_cafca ;_fccg ._bfce =*_cafca ;_ccdd :=*_cafca ;_afgb ,_cgce :=_ccdd .Get ("\u0054\u0079\u0070\u0065").(*_aff .PdfObjectName );if !_cgce {return nil ,_g .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_afgb !="\u0050\u0061\u0067\u0065"{return nil ,_g .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _cafdc :=_ccdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_cafdc !=nil {_fccg .Parent =_cafdc ;};if _bbbeg :=_ccdd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bbbeg !=nil {_cagaf ,_faff :=_aff .GetString (_bbbeg );if !_faff {return nil ,_g .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_acedg ,_feafa :=NewPdfDate (_cagaf .Str ());if _feafa !=nil {return nil ,_feafa ;};_fccg .LastModified =&_acedg ;};if _agef :=_ccdd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_agef !=nil &&!_aff .IsNullObject (_agef ){_cfgab ,_afgg :=_aff .GetDict (_agef );
if !_afgg {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_agef );};var _eedef error ;_fccg .Resources ,_eedef =NewPdfPageResourcesFromDict (_cfgab );
if _eedef !=nil {return nil ,_eedef ;};}else {_cedcd ,_abdc :=_fccg .getParentResources ();if _abdc !=nil {return nil ,_abdc ;};if _cedcd ==nil {_cedcd =NewPdfPageResources ();};_fccg .Resources =_cedcd ;};if _faaba :=_ccdd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_faaba !=nil {_fbfbd ,_afef :=_aff .GetArray (_faaba );if !_afef {return nil ,_g .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ccef error ;
_fccg .MediaBox ,_ccef =NewPdfRectangle (*_fbfbd );if _ccef !=nil {return nil ,_ccef ;};};if _ggabb :=_ccdd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ggabb !=nil {_edfc ,_gfacf :=_aff .GetArray (_ggabb );if !_gfacf {return nil ,_g .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _daeef error ;_fccg .CropBox ,_daeef =NewPdfRectangle (*_edfc );if _daeef !=nil {return nil ,_daeef ;};};if _gfag :=_ccdd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gfag !=nil {_dgdg ,_ceede :=_aff .GetArray (_gfag );if !_ceede {return nil ,_g .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _cgfg error ;_fccg .BleedBox ,_cgfg =NewPdfRectangle (*_dgdg );if _cgfg !=nil {return nil ,_cgfg ;};};if _ddfab :=_ccdd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_ddfab !=nil {_ecbcf ,_dfecf :=_aff .GetArray (_ddfab );if !_dfecf {return nil ,_g .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gcaed error ;_fccg .TrimBox ,_gcaed =NewPdfRectangle (*_ecbcf );if _gcaed !=nil {return nil ,_gcaed ;};};if _dcggb :=_ccdd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dcggb !=nil {_aceb ,_adcg :=_aff .GetArray (_dcggb );if !_adcg {return nil ,_g .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _abcc error ;_fccg .ArtBox ,_abcc =NewPdfRectangle (*_aceb );if _abcc !=nil {return nil ,_abcc ;};};if _feaaa :=_ccdd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_feaaa !=nil {_fccg .BoxColorInfo =_feaaa ;};if _ddecc :=_ccdd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_ddecc !=nil {_fccg .Contents =_ddecc ;};if _bgaag :=_ccdd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bgaag !=nil {_dfcd ,_afeda :=_aff .GetNumberAsInt64 (_bgaag );if _afeda !=nil {return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fccg .Rotate =&_dfcd ;};if _afda :=_ccdd .Get ("\u0047\u0072\u006fu\u0070");_afda !=nil {_fccg .Group =_afda ;};if _egebb :=_ccdd .Get ("\u0054\u0068\u0075m\u0062");_egebb !=nil {_fccg .Thumb =_egebb ;};if _abgda :=_ccdd .Get ("\u0042");_abgda !=nil {_fccg .B =_abgda ;
};if _ddea :=_ccdd .Get ("\u0044\u0075\u0072");_ddea !=nil {_fccg .Dur =_ddea ;};if _bgfgc :=_ccdd .Get ("\u0054\u0072\u0061n\u0073");_bgfgc !=nil {_fccg .Trans =_bgfgc ;};if _dgffa :=_ccdd .Get ("\u0041\u0041");_dgffa !=nil {_fccg .AA =_dgffa ;};if _bedea :=_ccdd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_bedea !=nil {_fccg .Metadata =_bedea ;};if _fgeaf :=_ccdd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fgeaf !=nil {_fccg .PieceInfo =_fgeaf ;};if _bcad :=_ccdd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bcad !=nil {_fccg .StructParents =_bcad ;};if _abda :=_ccdd .Get ("\u0049\u0044");_abda !=nil {_fccg .ID =_abda ;};if _ceddc :=_ccdd .Get ("\u0050\u005a");_ceddc !=nil {_fccg .PZ =_ceddc ;};if _dabd :=_ccdd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_dabd !=nil {_fccg .SeparationInfo =_dabd ;};if _adbge :=_ccdd .Get ("\u0054\u0061\u0062\u0073");_adbge !=nil {_fccg .Tabs =_adbge ;};if _eedca :=_ccdd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_eedca !=nil {_fccg .TemplateInstantiated =_eedca ;};if _gegb :=_ccdd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_gegb !=nil {_fccg .PresSteps =_gegb ;};if _bbgbe :=_ccdd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bbgbe !=nil {_fccg .UserUnit =_bbgbe ;
};if _eagc :=_ccdd .Get ("\u0056\u0050");_eagc !=nil {_fccg .VP =_eagc ;};if _cegg :=_ccdd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_cegg !=nil {_fccg .Annots =_cegg ;};_fccg ._dbbf =_gfba ;return _fccg ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fggde *PdfReader )GetEncryptionMethod ()string {_cfabf :=_fggde ._gaece .GetCrypter ();return _cfabf .String ();};func _ccbae (_bbea *_aff .PdfObjectDictionary )(*PdfShadingType2 ,error ){_cbaee :=PdfShadingType2 {};_dfgdec :=_bbea .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _dfgdec ==nil {_adg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_cdgbc ,_bgffg :=_dfgdec .(*_aff .PdfObjectArray );if !_bgffg {_adg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfgdec );return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _cdgbc .Len ()!=4{_adg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cdgbc .Len ());return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_cbaee .Coords =_cdgbc ;if _fbcfb :=_bbea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbcfb !=nil {_fbcfb =_aff .TraceToDirectObject (_fbcfb );_dfdbg ,_cgbf :=_fbcfb .(*_aff .PdfObjectArray );if !_cgbf {_adg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbcfb );
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbaee .Domain =_dfdbg ;};_dfgdec =_bbea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dfgdec ==nil {_adg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cbaee .Function =[]PdfFunction {};if _becfcc ,_dcag :=_dfgdec .(*_aff .PdfObjectArray );_dcag {for _ ,_gbaf :=range _becfcc .Elements (){_acbff ,_cfgbg :=_fdfeg (_gbaf );if _cfgbg !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfgbg );
return nil ,_cfgbg ;};_cbaee .Function =append (_cbaee .Function ,_acbff );};}else {_afdbe ,_edbgc :=_fdfeg (_dfgdec );if _edbgc !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edbgc );
return nil ,_edbgc ;};_cbaee .Function =append (_cbaee .Function ,_afdbe );};if _eedgd :=_bbea .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eedgd !=nil {_eedgd =_aff .TraceToDirectObject (_eedgd );_egec ,_cafcae :=_eedgd .(*_aff .PdfObjectArray );if !_cafcae {_adg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eedgd );
return nil ,_aff .ErrTypeError ;};if _egec .Len ()!=2{_adg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_egec .Len ());return nil ,ErrInvalidAttribute ;
};_cbaee .Extend =_egec ;};return &_cbaee ,nil ;};

// K returns the value of the key component of the color.
func (_fee *PdfColorDeviceCMYK )K ()float64 {return _fee [3]};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dfcc *PdfFieldButton )GetType ()ButtonType {_ebgbc :=ButtonTypeCheckbox ;if _dfcc .Ff !=nil {if (uint32 (*_dfcc .Ff )&FieldFlagPushbutton .Mask ())> 0{_ebgbc =ButtonTypePush ;}else if (uint32 (*_dfcc .Ff )&FieldFlagRadio .Mask ())> 0{_ebgbc =ButtonTypeRadio ;
};};return _ebgbc ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cgcbf *PdfReader )GetNamedDestinations ()(_aff .PdfObject ,error ){_agbde :=_aff .ResolveReference (_cgcbf ._dcadd .Get ("\u0044\u0065\u0073t\u0073"));if _agbde ==nil {return nil ,nil ;};if !_cgcbf ._gfgg {_bfcag :=_cgcbf .traverseObjectData (_agbde );
if _bfcag !=nil {return nil ,_bfcag ;};};return _agbde ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ggcde :=&PdfOutlineItem {_dcee :_aff .MakeIndirectObject (_aff .MakeDict ())};_ggcde ._gecd =_ggcde ;return _ggcde ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_begag *PdfPageResources )GetXObjectFormByName (keyName _aff .PdfObjectName )(*XObjectForm ,error ){_gbded ,_decdc :=_begag .GetXObjectByName (keyName );if _gbded ==nil {return nil ,nil ;};if _decdc !=XObjectTypeForm {return nil ,_g .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_cdgddb ,_aegbf :=NewXObjectFormFromStream (_gbded );if _aegbf !=nil {return nil ,_aegbf ;};return _cdgddb ,nil ;};func (_dbegd *LTV )enable (_gadge ,_dgge []*_fb .Certificate ,_dbcga string )error {_cbgf ,_eacdc ,_gdfeb :=_dbegd .buildCertChain (_gadge ,_dgge );
if _gdfeb !=nil {return _gdfeb ;};_ffcfd ,_gdfeb :=_dbegd .getCerts (_cbgf );if _gdfeb !=nil {return _gdfeb ;};var _gafcb ,_fcgg [][]byte ;if _dbegd .OCSPClient !=nil {_gafcb ,_gdfeb =_dbegd .getOCSPs (_cbgf ,_eacdc );if _gdfeb !=nil {return _gdfeb ;};
};if _dbegd .CRLClient !=nil {_fcgg ,_gdfeb =_dbegd .getCRLs (_cbgf );if _gdfeb !=nil {return _gdfeb ;};};_ecbec :=_dbegd ._gceb ;_dffda ,_gdfeb :=_ecbec .AddCerts (_ffcfd );if _gdfeb !=nil {return _gdfeb ;};_ggad ,_gdfeb :=_ecbec .AddOCSPs (_gafcb );if _gdfeb !=nil {return _gdfeb ;
};_gcgae ,_gdfeb :=_ecbec .AddCRLs (_fcgg );if _gdfeb !=nil {return _gdfeb ;};if _dbcga !=""{_ecbec .VRI [_dbcga ]=&VRI {Cert :_dffda ,OCSP :_ggad ,CRL :_gcgae };};_dbegd ._bbbab .SetDSS (_ecbec );return nil ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_accc :=&PdfColorPattern {};return _accc };

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_cfba *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_abacc :=map[*PdfAnnotation ]bool {};_fgafc ,_ggfa :=_cfba .GetAnnotations ();if _ggfa !=nil {return _ggfa ;};_fffad :=false ;for _ ,_bffdg :=range _fgafc {if opts .AnnotFilterFunc !=nil {_abacc [_bffdg ]=opts .AnnotFilterFunc (_bffdg );
}else {_abacc [_bffdg ]=true ;};if _abacc [_bffdg ]{_fffad =true ;};};if !_fffad {return nil ;};return _cfba .flattenFieldsWithOpts (appgen ,opts ,_abacc );};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_baeed *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afcb ,_gdfa :=_aff .GetNumbersAsFloat (objects );
if _gdfa !=nil {return nil ,_gdfa ;};return _baeed .ColorFromFloats (_afcb );};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dbeb :=&PdfFieldSignature {};_dbeb .PdfField =NewPdfField ();_dbeb .PdfField .SetContext (_dbeb );_dbeb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dbeb .PdfAnnotationWidget .SetContext (_dbeb );
_dbeb .PdfAnnotationWidget ._ccfb =_dbeb .PdfField ._dfbfd ;_dbeb .T =_aff .MakeString ("");_dbeb .F =_aff .MakeInteger (132);_dbeb .V =signature ;return _dbeb ;};func (_ffgf *PdfWriter )copyObjects (){_ffgfc :=make (map[_aff .PdfObject ]_aff .PdfObject );
_ffee :=make ([]_aff .PdfObject ,0,len (_ffgf ._babcd ));_ceddcb :=make (map[_aff .PdfObject ]struct{},len (_ffgf ._babcd ));_egagc :=make (map[_aff .PdfObject ]struct{});for _ ,_bffcf :=range _ffgf ._babcd {_dgbdag :=_ffgf .copyObject (_bffcf ,_ffgfc ,_egagc ,false );
if _ ,_eabbf :=_egagc [_bffcf ];_eabbf {continue ;};_ffee =append (_ffee ,_dgbdag );_ceddcb [_dgbdag ]=struct{}{};};_ffgf ._babcd =_ffee ;_ffgf ._bgadg =_ceddcb ;_ffgf ._bacec =_ffgf .copyObject (_ffgf ._bacec ,_ffgfc ,nil ,false ).(*_aff .PdfIndirectObject );
_ffgf ._adefd =_ffgf .copyObject (_ffgf ._adefd ,_ffgfc ,nil ,false ).(*_aff .PdfIndirectObject );if _ffgf ._fdedd !=nil {_ffgf ._fdedd =_ffgf .copyObject (_ffgf ._fdedd ,_ffgfc ,nil ,false ).(*_aff .PdfIndirectObject );};if _ffgf ._ccbe {_abfcb :=make (map[_aff .PdfObject ]int64 );
for _fcefg ,_bbead :=range _ffgf ._becc {if _fbacg ,_dafge :=_ffgfc [_fcefg ];_dafge {_abfcb [_fbacg ]=_bbead ;}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_ffgf ._becc =_abfcb ;};};func (_fcbd fontCommon )asPdfObjectDictionary (_agagb string )*_aff .PdfObjectDictionary {if _agagb !=""&&_fcbd ._fbged !=""&&_agagb !=_fcbd ._fbged {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_agagb ,_fcbd );
}else if _agagb ==""&&_fcbd ._fbged ==""{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fcbd );
}else if _fcbd ._fbged ==""{_fcbd ._fbged =_agagb ;};_bbbfe :=_aff .MakeDict ();_bbbfe .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0046\u006f\u006e\u0074"));_bbbfe .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_aff .MakeName (_fcbd ._abed ));
_bbbfe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName (_fcbd ._fbged ));if _fcbd ._ggca !=nil {_bbbfe .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_fcbd ._ggca .ToPdfObject ());};if _fcbd ._ccbfg !=nil {_bbbfe .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fcbd ._ccbfg );
}else if _fcbd ._dcad !=nil {_bgaac ,_cdffe :=_fcbd ._dcad .Stream ();if _cdffe !=nil {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_cdffe );
}else {_bbbfe .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bgaac );};};return _bbbfe ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gfdc ,_cebed :=_bcd .NewStdFontByName (HelveticaName );if !_cebed {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_dfaf :=_dbcbc (_gfdc );return &PdfFont {_gebd :&_dfaf };};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gagbc *_aff .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_aff .PdfObjectName ;Filter *_aff .PdfObjectName ;SubFilter *_aff .PdfObjectName ;Contents *_aff .PdfObjectString ;Cert _aff .PdfObject ;ByteRange *_aff .PdfObjectArray ;Reference *_aff .PdfObjectArray ;Changes *_aff .PdfObjectArray ;Name *_aff .PdfObjectString ;
M *_aff .PdfObjectString ;Location *_aff .PdfObjectString ;Reason *_aff .PdfObjectString ;ContactInfo *_aff .PdfObjectString ;R *_aff .PdfObjectInteger ;V *_aff .PdfObjectInteger ;PropBuild *_aff .PdfObjectDictionary ;PropAuthTime *_aff .PdfObjectInteger ;
PropAuthType *_aff .PdfObjectName ;};

// Encoder returns the font's text encoder.
func (_cgfc pdfCIDFontType0 )Encoder ()_eee .TextEncoder {return _cgfc ._fbdc };func (_gdaee *Image )getSuitableEncoder ()(_aff .StreamEncoder ,error ){var (_ggba ,_begge =int (_gdaee .Width ),int (_gdaee .Height );_gacgb =make (map[string ]bool );_ceec =true ;
_begcb =false ;_efbfb =func ()*_aff .DCTEncoder {return _aff .NewDCTEncoder ()};_eefda =func ()*_aff .DCTEncoder {_eaccgb :=_aff .NewDCTEncoder ();_eaccgb .BitsPerComponent =16;return _eaccgb ;};);for _egbd :=0;_egbd < _begge ;_egbd ++{for _fddaf :=0;_fddaf < _ggba ;
_fddaf ++{_aeac ,_ggdgac :=_gdaee .ColorAt (_fddaf ,_egbd );if _ggdgac !=nil {return nil ,_ggdgac ;};_ebgbf ,_bbgf ,_bdaab ,_bfgc :=_aeac .RGBA ();if _ceec &&(_ebgbf !=_bbgf ||_ebgbf !=_bdaab ||_bbgf !=_bdaab ){_ceec =false ;};if !_begcb {switch _aeac .(type ){case _bc .NRGBA :_begcb =_bfgc > 0;
};};_gacgb [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_ebgbf ,_bbgf ,_bdaab )]=true ;if len (_gacgb )> 2&&_begcb {return _eefda (),nil ;};};};if _begcb ||len (_gdaee ._becb )> 0{return _aff .NewFlateEncoder (),nil ;};if len (_gacgb )<=2{_daaed :=_gdaee .ConvertToBinary ();
if _daaed !=nil {return nil ,_daaed ;};return _aff .NewJBIG2Encoder (),nil ;};if _ceec {return _efbfb (),nil ;};if _gdaee .ColorComponents ==1{if _gdaee .BitsPerComponent ==1{return _aff .NewJBIG2Encoder (),nil ;}else if _gdaee .BitsPerComponent ==8{_dccd :=_aff .NewDCTEncoder ();
_dccd .ColorComponents =1;return _dccd ,nil ;};}else if _gdaee .ColorComponents ==3{if _gdaee .BitsPerComponent ==8{return _efbfb (),nil ;}else if _gdaee .BitsPerComponent ==16{return _eefda (),nil ;};}else if _gdaee .ColorComponents ==4{_aacg :=_eefda ();
_aacg .ColorComponents =4;return _aacg ,nil ;};return _eefda (),nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_gfbf *PdfOutputIntent )ToPdfObject ()_aff .PdfObject {if _gfbf ._gebea ==nil {_gfbf ._gebea =_aff .MakeDict ();};_agea :=_gfbf ._gebea ;if _gfbf .Type !=""{_agea .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName (_gfbf .Type ));};_agea .Set ("\u0053",_aff .MakeName (_gfbf .S .String ()));
if _gfbf .OutputCondition !=""{_agea .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_aff .MakeString (_gfbf .OutputCondition ));};_agea .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_aff .MakeString (_gfbf .OutputConditionIdentifier ));
_agea .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_aff .MakeString (_gfbf .RegistryName ));if _gfbf .Info !=""{_agea .Set ("\u0049\u006e\u0066\u006f",_aff .MakeString (_gfbf .Info ));};if len (_gfbf .DestOutputProfile )!=0{_gccf ,_aaaag :=_aff .MakeStream (_gfbf .DestOutputProfile ,_aff .NewFlateEncoder ());
if _aaaag !=nil {_adg .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aaaag );
};_gccf .PdfObjectDictionary .Set ("\u004e",_aff .MakeInteger (int64 (_gfbf .ColorComponents )));_ggada :=make ([]float64 ,_gfbf .ColorComponents *2);for _eagge :=0;_eagge < _gfbf .ColorComponents *2;_eagge ++{_fgagc :=0.0;if _eagge %2!=0{_fgagc =1.0;};
_ggada [_eagge ]=_fgagc ;};_gccf .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_aff .MakeArrayFromFloats (_ggada ));_agea .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_gccf );};return _agea ;
};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _f .Time ){_aebda .Lock ();defer _aebda .Unlock ();_ffbbd =modifiedDate ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_fgebg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _fgebg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// SetReason sets the `Reason` field of the signature.
func (_gefcd *PdfSignature )SetReason (reason string ){_gefcd .Reason =_aff .MakeString (reason )};

// ToPdfObject returns the PDF representation of the function.
func (_cfaga *PdfFunctionType0 )ToPdfObject ()_aff .PdfObject {if _cfaga ._fcbe ==nil {_cfaga ._fcbe =&_aff .PdfObjectStream {};};_fceg :=_aff .MakeDict ();_fceg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aff .MakeInteger (0));
_afdf :=&_aff .PdfObjectArray {};for _ ,_daedd :=range _cfaga .Domain {_afdf .Append (_aff .MakeFloat (_daedd ));};_fceg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_afdf );_acfga :=&_aff .PdfObjectArray {};for _ ,_bdcba :=range _cfaga .Range {_acfga .Append (_aff .MakeFloat (_bdcba ));
};_fceg .Set ("\u0052\u0061\u006eg\u0065",_acfga );_dbccf :=&_aff .PdfObjectArray {};for _ ,_accae :=range _cfaga .Size {_dbccf .Append (_aff .MakeInteger (int64 (_accae )));};_fceg .Set ("\u0053\u0069\u007a\u0065",_dbccf );_fceg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_aff .MakeInteger (int64 (_cfaga .BitsPerSample )));
if _cfaga .Order !=1{_fceg .Set ("\u004f\u0072\u0064e\u0072",_aff .MakeInteger (int64 (_cfaga .Order )));};_fceg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_cfaga ._aggcg ))));_cfaga ._fcbe .Stream =_cfaga ._aggcg ;_cfaga ._fcbe .PdfObjectDictionary =_fceg ;
return _cfaga ._fcbe ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_aff .PdfObjectString ;Q *_aff .PdfObjectInteger ;DS *_aff .PdfObjectString ;RV _aff .PdfObject ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// Add appends an outline item as a child of the current outline item.
func (_aecdg *OutlineItem )Add (item *OutlineItem ){_aecdg .Entries =append (_aecdg .Entries ,item )};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;
);

// ToPdfObject implements interface PdfModel.
func (_gae *PdfAnnotationInk )ToPdfObject ()_aff .PdfObject {_gae .PdfAnnotation .ToPdfObject ();_abd :=_gae ._ccfb ;_abee :=_abd .PdfObject .(*_aff .PdfObjectDictionary );_gae .PdfAnnotationMarkup .appendToPdfDictionary (_abee );_abee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0049\u006e\u006b"));
_abee .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gae .InkList );_abee .SetIfNotNil ("\u0042\u0053",_gae .BS );return _abd ;};

// ToPdfObject implements interface PdfModel.
func (_dfgf *PdfAnnotationHighlight )ToPdfObject ()_aff .PdfObject {_dfgf .PdfAnnotation .ToPdfObject ();_accg :=_dfgf ._ccfb ;_bec :=_accg .PdfObject .(*_aff .PdfObjectDictionary );_dfgf .PdfAnnotationMarkup .appendToPdfDictionary (_bec );_bec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_bec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfgf .QuadPoints );return _accg ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_fbcbe *PdfRectangle )Normalize (){if _fbcbe .Llx > _fbcbe .Urx {_fbcbe .Llx ,_fbcbe .Urx =_fbcbe .Urx ,_fbcbe .Llx ;};if _fbcbe .Lly > _fbcbe .Ury {_fbcbe .Lly ,_fbcbe .Ury =_fbcbe .Ury ,_fbcbe .Lly ;};};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_adefd *_aff .PdfIndirectObject ;_edgeg *_aff .PdfIndirectObject ;_gbbce map[_aff .PdfObject ]struct{};_babcd []_aff .PdfObject ;_bgadg map[_aff .PdfObject ]struct{};_faggf []*_aff .PdfIndirectObject ;_dccbd *PdfOutlineTreeNode ;_cdccb *_aff .PdfObjectDictionary ;
_gbffe []_aff .PdfObject ;_bacec *_aff .PdfIndirectObject ;_ggee *_ag .Writer ;_cagac int64 ;_acag error ;_fcgf *_aff .PdfCrypt ;_egecb *_aff .PdfObjectDictionary ;_fdedd *_aff .PdfIndirectObject ;_dfdcg *_aff .PdfObjectArray ;_bgeecg _aff .Version ;_deggb *bool ;
_gbfdc map[_aff .PdfObject ][]*_aff .PdfObjectDictionary ;_deacb *PdfAcroForm ;_bgbg Optimizer ;_afgef StandardApplier ;_abebd map[int ]crossReference ;_bfage int64 ;ObjNumOffset int ;_ccbe bool ;_gfaab _aff .XrefTable ;_gecec int64 ;_abced int64 ;_becc map[_aff .PdfObject ]int64 ;
_cgdcb map[_aff .PdfObject ]struct{};_cgdb string ;_bfedd []*PdfOutputIntent ;_bdef bool ;_bacb ,_aceag string ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cdcf :=NewPdfAnnotation ();_badb :=&PdfAnnotationStrikeOut {};_badb .PdfAnnotation =_cdcf ;_badb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdcf .SetContext (_badb );return _badb ;};func (_cbeef *LTV )validateSig (_ddacb *PdfSignature )error {if _ddacb ==nil ||_ddacb .Contents ==nil ||len (_ddacb .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_ddacb );
};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_eadf *PdfColorspaceLab )GetNumComponents ()int {return 3};func _cgfdc ()_f .Time {_aebda .Lock ();defer _aebda .Unlock ();return _ffbbd };

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_dfdf *Image )ToGoImage ()(_cg .Image ,error ){_adg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fffbf ,_degda :=_gd .NewImage (int (_dfdf .Width ),int (_dfdf .Height ),int (_dfdf .BitsPerComponent ),_dfdf .ColorComponents ,_dfdf .Data ,_dfdf ._becb ,_dfdf ._edgef );
if _degda !=nil {return nil ,_degda ;};return _fffbf ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_faeeg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _faeeg .AcroForm ==nil {return nil ,nil ;};if _faeeg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gbccd *PdfSignature ;
_ebfa *PdfField ;_dbgga SignatureHandler ;};var _cecac []*sigFieldPair ;for _ ,_ebadd :=range _faeeg .AcroForm .AllFields (){if _ebadd .V ==nil {continue ;};if _dadg ,_gdeeb :=_aff .GetDict (_ebadd .V );_gdeeb {if _afdacb ,_fabdcf :=_aff .GetNameVal (_dadg .Get ("\u0054\u0079\u0070\u0065"));
_fabdcf &&(_afdacb =="\u0053\u0069\u0067"||_afdacb =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_cgfcd ,_dbgae :=_aff .GetIndirect (_ebadd .V );if !_dbgae {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cdbga ,_fddc :=_faeeg .newPdfSignatureFromIndirect (_cgfcd );if _fddc !=nil {return nil ,_fddc ;};var _fegbb SignatureHandler ;for _ ,_cegfd :=range handlers {if _cegfd .IsApplicable (_cdbga ){_fegbb =_cegfd ;break ;};};_cecac =append (_cecac ,&sigFieldPair {_gbccd :_cdbga ,_ebfa :_ebadd ,_dbgga :_fegbb });
};};};var _cdcgg []SignatureValidationResult ;for _ ,_cdafg :=range _cecac {_edfbe :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_cdafg ._ebfa }};if _cdafg ._dbgga ==nil {_edfbe .Errors =append (_edfbe .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_cdcgg =append (_cdcgg ,_edfbe );continue ;};_cdagf ,_dgbfe :=_cdafg ._dbgga .NewDigest (_cdafg ._gbccd );if _dgbfe !=nil {_edfbe .Errors =append (_edfbe .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_dgbfe .Error ());_cdcgg =append (_cdcgg ,_edfbe );
continue ;};_fgcad :=_cdafg ._gbccd .ByteRange ;if _fgcad ==nil {_edfbe .Errors =append (_edfbe .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cdcgg =append (_cdcgg ,_edfbe );continue ;};for _efbdb :=0;
_efbdb < _fgcad .Len ();_efbdb =_efbdb +2{_bfed ,_ :=_aff .GetNumberAsInt64 (_fgcad .Get (_efbdb ));_dgfeb ,_ :=_aff .GetIntVal (_fgcad .Get (_efbdb +1));if _ ,_cacfb :=_faeeg ._dged .Seek (_bfed ,_ega .SeekStart );_cacfb !=nil {return nil ,_cacfb ;};_eggce :=make ([]byte ,_dgfeb );
if _ ,_efdcc :=_faeeg ._dged .Read (_eggce );_efdcc !=nil {return nil ,_efdcc ;};_cdagf .Write (_eggce );};var _agec SignatureValidationResult ;if _deeee ,_fcge :=_cdafg ._dbgga .(SignatureHandlerDocMDP );_fcge {_agec ,_dgbfe =_deeee .ValidateWithOpts (_cdafg ._gbccd ,_cdagf ,SignatureHandlerDocMDPParams {Parser :_faeeg ._gaece });
}else {_agec ,_dgbfe =_cdafg ._dbgga .Validate (_cdafg ._gbccd ,_cdagf );};if _dgbfe !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_dgbfe ,_cdafg ._dbgga );_agec .Errors =append (_agec .Errors ,_dgbfe .Error ());
};_agec .Name =_cdafg ._gbccd .Name .Decoded ();_agec .Reason =_cdafg ._gbccd .Reason .Decoded ();if _cdafg ._gbccd .M !=nil {_adgcb ,_defge :=NewPdfDate (_cdafg ._gbccd .M .String ());if _defge !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_defge );
_agec .Errors =append (_agec .Errors ,_defge .Error ());continue ;};_agec .Date =_adgcb ;};_agec .ContactInfo =_cdafg ._gbccd .ContactInfo .Decoded ();_agec .Location =_cdafg ._gbccd .Location .Decoded ();_agec .Fields =_edfbe .Fields ;_cdcgg =append (_cdcgg ,_agec );
};return _cdcgg ,nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ccb :=NewPdfAnnotation ();_fda :=&PdfAnnotationCaret {};_fda .PdfAnnotation =_ccb ;_fda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccb .SetContext (_fda );return _fda ;};func (_cdee *PdfReader )newPdfAnnotationPrinterMarkFromDict (_ead *_aff .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_adbd :=PdfAnnotationPrinterMark {};
_adbd .MN =_ead .Get ("\u004d\u004e");return &_adbd ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ffdcg *pdfFontSimple )SetEncoder (encoder _eee .TextEncoder ){_ffdcg ._fdgc =encoder };

// ToPdfObject implements interface PdfModel.
func (_eaaaf *Permissions )ToPdfObject ()_aff .PdfObject {return _eaaaf ._cbdgg };

// String returns a string representation of what flags are set.
func (_ffedg FieldFlag )String ()string {_deeeg :="";if _ffedg ==FieldFlagClear {_deeeg ="\u0043\u006c\u0065a\u0072";return _deeeg ;};if _ffedg &FieldFlagReadOnly > 0{_deeeg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ffedg &FieldFlagRequired > 0{_deeeg +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _ffedg &FieldFlagNoExport > 0{_deeeg +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _ffedg &FieldFlagNoToggleToOff > 0{_deeeg +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _ffedg &FieldFlagRadio > 0{_deeeg +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _ffedg &FieldFlagPushbutton > 0{_deeeg +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _ffedg &FieldFlagRadiosInUnision > 0{_deeeg +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};
if _ffedg &FieldFlagMultiline > 0{_deeeg +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _ffedg &FieldFlagPassword > 0{_deeeg +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _ffedg &FieldFlagFileSelect > 0{_deeeg +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";
};if _ffedg &FieldFlagDoNotScroll > 0{_deeeg +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _ffedg &FieldFlagComb > 0{_deeeg +="\u007c\u0043\u006fm\u0062";};if _ffedg &FieldFlagRichText > 0{_deeeg +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";
};if _ffedg &FieldFlagDoNotSpellCheck > 0{_deeeg +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _ffedg &FieldFlagCombo > 0{_deeeg +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _ffedg &FieldFlagEdit > 0{_deeeg +="\u007c\u0045\u0064i\u0074";
};if _ffedg &FieldFlagSort > 0{_deeeg +="\u007c\u0053\u006fr\u0074";};if _ffedg &FieldFlagMultiSelect > 0{_deeeg +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _ffedg &FieldFlagCommitOnSelChange > 0{_deeeg +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";
};return _ba .Trim (_deeeg ,"\u007c");};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gaece *_aff .PdfParser ;_geae _aff .PdfObject ;_efcfb *_aff .PdfIndirectObject ;_gacfc *_aff .PdfObjectDictionary ;_bfgfec []*_aff .PdfIndirectObject ;PageList []*PdfPage ;_fddff int ;_dcadd *_aff .PdfObjectDictionary ;_ecbcb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_cdea *Permissions ;_gfga map[*PdfReader ]*PdfReader ;_ccbga []*PdfReader ;_cfadc *modelManager ;_gfgg bool ;_ddcba map[_aff .PdfObject ]struct{};_dged _ega .ReadSeeker ;_fafag string ;_bfadc bool ;_edbfa *ReaderOpts ;
_acgad bool ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_deff :=PdfColorCalRGB {a ,b ,c };return &_deff ;};

// SetContentStream sets the pattern cell's content stream.
func (_dbdd *PdfTilingPattern )SetContentStream (content []byte ,encoder _aff .StreamEncoder )error {_aaedd ,_gdge :=_dbdd ._cfegc .(*_aff .PdfObjectStream );if !_gdge {_adg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbdd ._cfegc );
return _aff .ErrTypeError ;};if encoder ==nil {encoder =_aff .NewRawEncoder ();};_daagg :=_aaedd .PdfObjectDictionary ;_abgea :=encoder .MakeStreamDict ();_daagg .Merge (_abgea );_cbef ,_agcg :=encoder .EncodeBytes (content );if _agcg !=nil {return _agcg ;
};_daagg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_cbef ))));_aaedd .Stream =_cbef ;return nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _aff .PdfObject )(*PdfFont ,error ){return _bfdbcc (fontObj ,true )};func (_ccee *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func (_dgbd *PdfReader )newPdfAnnotation3DFromDict (_fefg *_aff .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_geeb :=PdfAnnotation3D {};
_geeb .T3DD =_fefg .Get ("\u0033\u0044\u0044");_geeb .T3DV =_fefg .Get ("\u0033\u0044\u0056");_geeb .T3DA =_fefg .Get ("\u0033\u0044\u0041");_geeb .T3DI =_fefg .Get ("\u0033\u0044\u0049");_geeb .T3DB =_fefg .Get ("\u0033\u0044\u0042");return &_geeb ,nil ;
};func _gcdde (_bfgfe *_aff .PdfObjectDictionary ,_adge *fontCommon ,_fffaa _eee .TextEncoder )(*pdfFontSimple ,error ){_bbeg :=_gcbd (_adge );_bbeg ._ggebf =_fffaa ;if _fffaa ==nil {_fcbgf :=_bfgfe .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _fcbgf ==nil {_fcbgf =_aff .MakeInteger (0);};_bbeg .FirstChar =_fcbgf ;_ebadb ,_bbga :=_aff .GetIntVal (_fcbgf );if !_bbga {_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fcbgf );
return nil ,_aff .ErrTypeError ;};_gdfaa :=_eee .CharCode (_ebadb );_fcbgf =_bfgfe .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fcbgf ==nil {_fcbgf =_aff .MakeInteger (255);};_bbeg .LastChar =_fcbgf ;_ebadb ,_bbga =_aff .GetIntVal (_fcbgf );
if !_bbga {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fcbgf );return nil ,_aff .ErrTypeError ;
};_agaff :=_eee .CharCode (_ebadb );_bbeg ._ecgd =make (map[_eee .CharCode ]float64 );_fcbgf =_bfgfe .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fcbgf !=nil {_bbeg .Widths =_fcbgf ;_fcdcfd ,_agegg :=_aff .GetArray (_fcbgf );if !_agegg {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fcbgf );
return nil ,_aff .ErrTypeError ;};_eedfe ,_agfcg :=_fcdcfd .ToFloat64Array ();if _agfcg !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_agfcg ;};if len (_eedfe )!=int (_agaff -_gdfaa +1){_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_agaff -_gdfaa +1,len (_eedfe ));
return nil ,_aff .ErrRangeError ;};for _fbbgg ,_dffcd :=range _eedfe {_bbeg ._ecgd [_gdfaa +_eee .CharCode (_fbbgg )]=_dffcd ;};};};_bbeg .Encoding =_aff .TraceToDirectObject (_bfgfe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bbeg ,nil ;
};func (_aefda *PdfWriter )makeOffSetReference (_fcfde int64 ){_agbdf :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fcfde );_aefda .writeString (_agbdf );_aefda .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_aff .PdfObjectName ;Colorants _aff .PdfObject ;Process _aff .PdfObject ;MixingHints _aff .PdfObject ;_ecgec *_aff .PdfIndirectObject ;};

// HasXObjectByName checks if has XObject resource by name.
func (_agbef *PdfPage )HasXObjectByName (name _aff .PdfObjectName )bool {_fdefg ,_abecf :=_agbef .Resources .XObject .(*_aff .PdfObjectDictionary );if !_abecf {return false ;};if _dbcgd :=_fdefg .Get (name );_dbcgd !=nil {return true ;};return false ;};


// SetShadingByName sets a shading resource specified by keyName.
func (_egabb *PdfPageResources )SetShadingByName (keyName _aff .PdfObjectName ,shadingObj _aff .PdfObject )error {if _egabb .Shading ==nil {_egabb .Shading =_aff .MakeDict ();};_gdgbc ,_aeacb :=_aff .GetDict (_egabb .Shading );if !_aeacb {return _aff .ErrTypeError ;
};_gdgbc .Set (keyName ,shadingObj );return nil ;};

// B returns the value of the B component of the color.
func (_gddga *PdfColorCalRGB )B ()float64 {return _gddga [1]};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _aff .PdfObject ;Q _aff .PdfObject ;RC _aff .PdfObject ;DS _aff .PdfObject ;CL _aff .PdfObject ;IT _aff .PdfObject ;BE _aff .PdfObject ;RD _aff .PdfObject ;BS _aff .PdfObject ;LE _aff .PdfObject ;
};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dbdg *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_abea *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaca ,_cgee :=_aff .GetNumbersAsFloat (objects );
if _cgee !=nil {return nil ,_cgee ;};return _abea .ColorFromFloats (_eaca );};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_baae *LTV )Enable (sig *PdfSignature ,extraCerts []*_fb .Certificate )error {if _abbc :=_baae .validateSig (sig );_abbc !=nil {return _abbc ;};_febbc ,_bbdgd :=_baae .generateVRIKey (sig );if _bbdgd !=nil {return _bbdgd ;};if _ ,_dcgfa :=_baae ._gceb .VRI [_febbc ];
_dcgfa &&_baae .SkipExisting {return nil ;};_fdcag ,_bbdgd :=sig .GetCerts ();if _bbdgd !=nil {return _bbdgd ;};return _baae .enable (_fdcag ,extraCerts ,_febbc );};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_aea :=NewPdfAnnotation ();_cfca :=&PdfAnnotationStamp {};_cfca .PdfAnnotation =_aea ;_cfca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aea .SetContext (_cfca );return _cfca ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_aceaa *PdfOutputIntent )GetContainingPdfObject ()_aff .PdfObject {return _aceaa ._gebea };

// Encoder returns the font's text encoder.
func (_bffg pdfFontType0 )Encoder ()_eee .TextEncoder {return _bffg ._faggb };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_aff .PdfObjectStream ;Data []byte ;_ecfc *_aff .PdfIndirectObject ;_abcbf *_aff .PdfObjectStream ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_gdbda :=PdfPage {};_gdbda ._bbdac =_aff .MakeDict ();_gdbda .Resources =NewPdfPageResources ();_gfgdd :=_aff .PdfIndirectObject {};_gfgdd .PdfObject =_gdbda ._bbdac ;_gdbda ._fage =&_gfgdd ;_gdbda ._bfce =*_gdbda ._bbdac ;return &_gdbda ;
};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bgdgc :=&PdfColorspaceCalGray {};_bgdgc .BlackPoint =[]float64 {0.0,0.0,0.0};_bgdgc .Gamma =1;return _bgdgc ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gegf FieldFlag )Mask ()uint32 {return uint32 (_gegf )};

// BaseFont returns the font's "BaseFont" field.
func (_dbgg *PdfFont )BaseFont ()string {return _dbgg .baseFields ()._abed };

// ToPdfObject implements interface PdfModel.
func (_eea *PdfAnnotationTrapNet )ToPdfObject ()_aff .PdfObject {_eea .PdfAnnotation .ToPdfObject ();_cegc :=_eea ._ccfb ;_fge :=_cegc .PdfObject .(*_aff .PdfObjectDictionary );_fge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cegc ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_aff .PdfObjectArray ;Domain *_aff .PdfObjectArray ;Function []PdfFunction ;Extend *_aff .PdfObjectArray ;};

// ToGoTime returns the date in time.Time format.
func (_bffcgb PdfDate )ToGoTime ()_f .Time {_fbdfb :=int (_bffcgb ._cdbec *60*60+_bffcgb ._geecde *60);switch _bffcgb ._acbgca {case '-':_fbdfb =-_fbdfb ;case 'Z':_fbdfb =0;};_cgfb :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_bffcgb ._acbgca ,_bffcgb ._cdbec ,_bffcgb ._geecde );
_gcag :=_f .FixedZone (_cgfb ,_fbdfb );return _f .Date (int (_bffcgb ._ababa ),_f .Month (_bffcgb ._acdbf ),int (_bffcgb ._afcd ),int (_bffcgb ._bfcbd ),int (_bffcgb ._ggdbf ),int (_bffcgb ._bdcc ),0,_gcag );};var _ pdfFont =(*pdfFontType3 )(nil );

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cdgb *PdfShading )GetContainingPdfObject ()_aff .PdfObject {return _cdgb ._bdacg };

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aff .PdfObject ;LE _aff .PdfObject ;BS _aff .PdfObject ;IC _aff .PdfObject ;BE _aff .PdfObject ;IT _aff .PdfObject ;Measure _aff .PdfObject ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_eced *LTV )EnableChain (chain []*_fb .Certificate )error {return _eced .enable (nil ,chain ,"")};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cdaf *PdfColorspaceDeviceCMYK )ToPdfObject ()_aff .PdfObject {return _aff .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gcbe *PdfColorspaceCalRGB )ToPdfObject ()_aff .PdfObject {_bebc :=&_aff .PdfObjectArray {};_bebc .Append (_aff .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_gcfg :=_aff .MakeDict ();if _gcbe .WhitePoint !=nil {_abebe :=_aff .MakeArray (_aff .MakeFloat (_gcbe .WhitePoint [0]),_aff .MakeFloat (_gcbe .WhitePoint [1]),_aff .MakeFloat (_gcbe .WhitePoint [2]));
_gcfg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_abebe );}else {_adg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gcbe .BlackPoint !=nil {_cfcg :=_aff .MakeArray (_aff .MakeFloat (_gcbe .BlackPoint [0]),_aff .MakeFloat (_gcbe .BlackPoint [1]),_aff .MakeFloat (_gcbe .BlackPoint [2]));_gcfg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cfcg );
};if _gcbe .Gamma !=nil {_efg :=_aff .MakeArray (_aff .MakeFloat (_gcbe .Gamma [0]),_aff .MakeFloat (_gcbe .Gamma [1]),_aff .MakeFloat (_gcbe .Gamma [2]));_gcfg .Set ("\u0047\u0061\u006dm\u0061",_efg );};if _gcbe .Matrix !=nil {_deef :=_aff .MakeArray (_aff .MakeFloat (_gcbe .Matrix [0]),_aff .MakeFloat (_gcbe .Matrix [1]),_aff .MakeFloat (_gcbe .Matrix [2]),_aff .MakeFloat (_gcbe .Matrix [3]),_aff .MakeFloat (_gcbe .Matrix [4]),_aff .MakeFloat (_gcbe .Matrix [5]),_aff .MakeFloat (_gcbe .Matrix [6]),_aff .MakeFloat (_gcbe .Matrix [7]),_aff .MakeFloat (_gcbe .Matrix [8]));
_gcfg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_deef );};_bebc .Append (_gcfg );if _gcbe ._caef !=nil {_gcbe ._caef .PdfObject =_bebc ;return _gcbe ._caef ;};return _bebc ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aebda .Lock ();defer _aebda .Unlock ();_eddc =title };

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _aff .PdfObject ;H _aff .PdfObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gdege *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_ggaag :=_gdege .fill (provider ,appGen );if _ggaag !=nil {return _ggaag ;};if _ ,_feafg :=provider .(FieldImageProvider );_feafg {_ggaag =_gdege .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _ggaag ;};var _eefae =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adbba pdfFontSimple )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){if _adbba ._cadeb !=nil {_becda ,_cffe :=_adbba ._cadeb .Read (r );if _cffe {return _becda ,true ;};};_fbbe :=_adbba .Encoder ();if _fbbe ==nil {_adg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_adbba );
return _bcd .CharMetrics {},false ;};_egge ,_fafa :=_fbbe .RuneToCharcode (r );if !_fafa {if r !=' '{_adg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_adbba );
};return _bcd .CharMetrics {},false ;};_acea ,_eeeca :=_adbba .GetCharMetrics (_egge );return _acea ,_eeeca ;};func (_gaa *PdfReader )newPdfActionSubmitFormFromDict (_agce *_aff .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_cgad ,_ecdd :=_dfc (_agce .Get ("\u0046"));
if _ecdd !=nil {return nil ,_ecdd ;};return &PdfActionSubmitForm {F :_cgad ,Fields :_agce .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_agce .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject returns a stream object.
func (_edgac *XObjectForm )ToPdfObject ()_aff .PdfObject {_gbdc :=_edgac ._fddef ;_eaee :=_gbdc .PdfObjectDictionary ;if _edgac .Filter !=nil {_eaee =_edgac .Filter .MakeStreamDict ();_gbdc .PdfObjectDictionary =_eaee ;};_eaee .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_eaee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0046\u006f\u0072\u006d"));_eaee .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_edgac .FormType );_eaee .SetIfNotNil ("\u0042\u0042\u006f\u0078",_edgac .BBox );_eaee .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_edgac .Matrix );
if _edgac .Resources !=nil {_eaee .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_edgac .Resources .ToPdfObject ());};_eaee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_edgac .Group );_eaee .SetIfNotNil ("\u0052\u0065\u0066",_edgac .Ref );_eaee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_edgac .MetaData );
_eaee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_edgac .PieceInfo );_eaee .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_edgac .LastModified );_eaee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_edgac .StructParent );
_eaee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_edgac .StructParents );_eaee .SetIfNotNil ("\u004f\u0050\u0049",_edgac .OPI );_eaee .SetIfNotNil ("\u004f\u0043",_edgac .OC );_eaee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edgac .Name );
_eaee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_edgac .Stream ))));_gbdc .Stream =_edgac .Stream ;return _gbdc ;};

// ToPdfObject implements interface PdfModel.
func (_bfde *PdfActionGoTo3DView )ToPdfObject ()_aff .PdfObject {_bfde .PdfAction .ToPdfObject ();_cfd :=_bfde ._df ;_fbd :=_cfd .PdfObject .(*_aff .PdfObjectDictionary );_fbd .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeGoTo3DView )));_fbd .SetIfNotNil ("\u0054\u0041",_bfde .TA );
_fbd .SetIfNotNil ("\u0056",_bfde .V );return _cfd ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject returns a PDF object representation of the outline.
func (_gfcg *Outline )ToPdfObject ()_aff .PdfObject {return _gfcg .ToPdfOutline ().ToPdfObject ()};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_eag :=NewPdfAction ();_fcc :=&PdfActionTrans {};_fcc .PdfAction =_eag ;_eag .SetContext (_fcc );return _fcc ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dbecd FieldFlag )Has (fl FieldFlag )bool {return (_dbecd .Mask ()&fl .Mask ())> 0};func (_bbc *PdfReader )newPdfActionGotoRFromDict (_ebb *_aff .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gbe ,_eef :=_dfc (_ebb .Get ("\u0046"));if _eef !=nil {return nil ,_eef ;
};return &PdfActionGoToR {D :_ebb .Get ("\u0044"),NewWindow :_ebb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gbe },nil ;};func (_cab *PdfReader )newPdfActionSetOCGStateFromDict (_bcda *_aff .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bcda .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bcda .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bfgfc :=appender .Reader .DSS ;if _bfgfc ==nil {_bfgfc =NewDSS ();};if _dgef :=_bfgfc .GenerateHashMaps ();_dgef !=nil {return nil ,_dgef ;};return &LTV {CertClient :_bfd .NewCertClient (),OCSPClient :_bfd .NewOCSPClient (),CRLClient :_bfd .NewCRLClient (),SkipExisting :true ,_bbbab :appender ,_gceb :_bfgfc },nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ebdg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgdf :=vals [0];if _dgdf < 0.0||_dgdf > 100.0{_adg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dgdf );
return nil ,ErrColorOutOfRange ;};_accec :=vals [1];_egdca :=float64 (-100);_cbac :=float64 (100);if len (_ebdg .Range )> 1{_egdca =_ebdg .Range [0];_cbac =_ebdg .Range [1];};if _accec < _egdca ||_accec > _cbac {_adg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_accec ,_egdca ,_cbac );
return nil ,ErrColorOutOfRange ;};_dcdb :=vals [2];_gaf :=float64 (-100);_ebde :=float64 (100);if len (_ebdg .Range )> 3{_gaf =_ebdg .Range [2];_ebde =_ebdg .Range [3];};if _dcdb < _gaf ||_dcdb > _ebde {_adg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dcdb ,_gaf ,_ebde );
return nil ,ErrColorOutOfRange ;};_gbea :=NewPdfColorLab (_dgdf ,_accec ,_dcdb );return _gbea ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ecgc *PdfPage )error ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _aff .PdfObject ;};

// Encoder returns the font's text encoder.
func (_ddbaf pdfCIDFontType2 )Encoder ()_eee .TextEncoder {return _ddbaf ._begcd };func (_ccbc *PdfReader )newPdfAnnotationPopupFromDict (_gabd *_aff .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_cac :=PdfAnnotationPopup {};_cac .Parent =_gabd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_cac .Open =_gabd .Get ("\u004f\u0070\u0065\u006e");return &_cac ,nil ;};func _dfede (_ffcfb _aff .PdfObject ,_badaf *PdfReader )(*OutlineDest ,error ){_efgfgf ,_dbaec :=_aff .GetArray (_ffcfb );if !_dbaec {return nil ,_g .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_aedffd :=_efgfgf .Len ();if _aedffd < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_aedffd );
};_fgagg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_ggged :=_efgfgf .Get (0);if _beff ,_dgbda :=_aff .GetIndirect (_ggged );_dgbda {if _ ,_egcff ,_ebeea :=_badaf .PageFromIndirectObject (_beff );_ebeea ==nil {_fgagg .Page =int64 (_egcff -1);}else {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_beff );
};_fgagg .PageObj =_beff ;}else if _ffdd ,_cfdb :=_aff .GetIntVal (_ggged );_cfdb {if _ffdd >=0&&_ffdd < len (_badaf .PageList ){_fgagg .PageObj =_badaf .PageList [_ffdd ].GetPageAsIndirectObject ();}else {_adg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ffdd );
};_fgagg .Page =int64 (_ffdd );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_ggged );};_ddbb ,_dbaec :=_aff .GetNameVal (_efgfgf .Get (1));
if !_dbaec {_adg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_efgfgf .Get (1));
return _fgagg ,nil ;};switch _ddbb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _aedffd > 2{_fgagg .Y ,_ =_aff .GetNumberAsFloat (_aff .TraceToDirectObject (_efgfgf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _aedffd > 2{_fgagg .X ,_ =_aff .GetNumberAsFloat (_aff .TraceToDirectObject (_efgfgf .Get (2)));
};case "\u0058\u0059\u005a":if _aedffd > 4{_fgagg .X ,_ =_aff .GetNumberAsFloat (_aff .TraceToDirectObject (_efgfgf .Get (2)));_fgagg .Y ,_ =_aff .GetNumberAsFloat (_aff .TraceToDirectObject (_efgfgf .Get (3)));_fgagg .Zoom ,_ =_aff .GetNumberAsFloat (_aff .TraceToDirectObject (_efgfgf .Get (4)));
};default:_ddbb ="\u0046\u0069\u0074";};_fgagg .Mode =_ddbb ;return _fgagg ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ddbc *PdfColorLab )GetNumComponents ()int {return 3};func (_bfc *PdfReader )newPdfAnnotationLineFromDict (_ebc *_aff .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_febg :=PdfAnnotationLine {};_ffbbc ,_dafb :=_bfc .newPdfAnnotationMarkupFromDict (_ebc );
if _dafb !=nil {return nil ,_dafb ;};_febg .PdfAnnotationMarkup =_ffbbc ;_febg .L =_ebc .Get ("\u004c");_febg .BS =_ebc .Get ("\u0042\u0053");_febg .LE =_ebc .Get ("\u004c\u0045");_febg .IC =_ebc .Get ("\u0049\u0043");_febg .LL =_ebc .Get ("\u004c\u004c");
_febg .LLE =_ebc .Get ("\u004c\u004c\u0045");_febg .Cap =_ebc .Get ("\u0043\u0061\u0070");_febg .IT =_ebc .Get ("\u0049\u0054");_febg .LLO =_ebc .Get ("\u004c\u004c\u004f");_febg .CP =_ebc .Get ("\u0043\u0050");_febg .Measure =_ebc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_febg .CO =_ebc .Get ("\u0043\u004f");return &_febg ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ef *PdfAction )GetContext ()PdfModel {if _ef ==nil {return nil ;};return _ef ._gfg ;};

// ToPdfObject implements interface PdfModel.
func (_gfgdc *PdfAnnotationRedact )ToPdfObject ()_aff .PdfObject {_gfgdc .PdfAnnotation .ToPdfObject ();_ddac :=_gfgdc ._ccfb ;_fgdae :=_ddac .PdfObject .(*_aff .PdfObjectDictionary );_gfgdc .PdfAnnotationMarkup .appendToPdfDictionary (_fgdae );_fgdae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_fgdae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gfgdc .QuadPoints );_fgdae .SetIfNotNil ("\u0049\u0043",_gfgdc .IC );_fgdae .SetIfNotNil ("\u0052\u004f",_gfgdc .RO );_fgdae .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gfgdc .OverlayText );
_fgdae .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gfgdc .Repeat );_fgdae .SetIfNotNil ("\u0044\u0041",_gfgdc .DA );_fgdae .SetIfNotNil ("\u0051",_gfgdc .Q );return _ddac ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_begcc *PdfFieldButton )SetType (btype ButtonType ){_cbdf :=uint32 (0);if _begcc .Ff !=nil {_cbdf =uint32 (*_begcc .Ff );};switch btype {case ButtonTypePush :_cbdf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cbdf |=FieldFlagRadio .Mask ();
};_begcc .Ff =_aff .MakeInteger (int64 (_cbdf ));};

// Val returns the value of the color.
func (_bfdac *PdfColorCalGray )Val ()float64 {return float64 (*_bfdac )};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _aff .PdfObject ;Movie _aff .PdfObject ;A _aff .PdfObject ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_dgega *PdfPattern )IsTiling ()bool {return _dgega .PatternType ==1};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_befb *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_befb .updateObjectsDeep (dss .ToPdfObject (),nil );};_befb ._fdbb =dss ;};func (_bcgc *PdfReader )traverseObjectData (_gdebf _aff .PdfObject )error {return _aff .ResolveReferencesDeep (_gdebf ,_bcgc ._ddcba );
};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bfda :=NewPdfAnnotation ();_gdgd :=&PdfAnnotationSquare {};_gdgd .PdfAnnotation =_bfda ;_gdgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfda .SetContext (_gdgd );return _gdgd ;};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);func (_cebef *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dfd *PdfAnnotationWidget )Field ()*PdfField {return _dfd ._afae };func (_gfgbe *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cbbcd *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_efggf *PdfSignature ,_deeab Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_bbfcgf *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_acff *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_afcag *PdfSignature ,_fcebc Hasher )error ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_faec *DSS )GenerateHashMaps ()error {_bggbc ,_eade :=_faec .generateHashMap (_faec .Certs );if _eade !=nil {return _eade ;};_edcf ,_eade :=_faec .generateHashMap (_faec .OCSPs );if _eade !=nil {return _eade ;};_gcfa ,_eade :=_faec .generateHashMap (_faec .CRLs );
if _eade !=nil {return _eade ;};_faec ._eddd =_bggbc ;_faec ._eaga =_edcf ;_faec ._abba =_gcfa ;return nil ;};func _fada (_bcba ,_beed string )string {if _ba .Contains (_bcba ,"\u002b"){_cbabd :=_ba .Split (_bcba ,"\u002b");if len (_cbabd )==2{_bcba =_cbabd [1];
};};return _beed +"\u002b"+_bcba ;};

// ToPdfObject implements interface PdfModel.
func (_aaed *PdfActionGoTo )ToPdfObject ()_aff .PdfObject {_aaed .PdfAction .ToPdfObject ();_agc :=_aaed ._df ;_fegb :=_agc .PdfObject .(*_aff .PdfObjectDictionary );_fegb .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeGoTo )));_fegb .SetIfNotNil ("\u0044",_aaed .D );
return _agc ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_ddbbf *PdfPageResources )GetXObjectByName (keyName _aff .PdfObjectName )(*_aff .PdfObjectStream ,XObjectType ){if _ddbbf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cfgagc ,_daffb :=_aff .TraceToDirectObject (_ddbbf .XObject ).(*_aff .PdfObjectDictionary );
if !_daffb {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aff .TraceToDirectObject (_ddbbf .XObject ));
return nil ,XObjectTypeUndefined ;};if _fdcb :=_cfgagc .Get (keyName );_fdcb !=nil {_afgfa ,_gdaea :=_aff .GetStream (_fdcb );if !_gdaea {_adg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_fdcb );
return nil ,XObjectTypeUndefined ;};_fdcaa :=_afgfa .PdfObjectDictionary ;_eeafb ,_gdaea :=_aff .TraceToDirectObject (_fdcaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_aff .PdfObjectName );if !_gdaea {_adg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fdcaa .String ());
return nil ,XObjectTypeUndefined ;};if *_eeafb =="\u0049\u006d\u0061g\u0065"{return _afgfa ,XObjectTypeImage ;}else if *_eeafb =="\u0046\u006f\u0072\u006d"{return _afgfa ,XObjectTypeForm ;}else if *_eeafb =="\u0050\u0053"{return _afgfa ,XObjectTypePS ;
}else {_adg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_eeafb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};func (_cbedd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _cbedd ._ggca };func (_bbbg *PdfReader )newPdfActionFromIndirectObject (_ggfb *_aff .PdfIndirectObject )(*PdfAction ,error ){_bac ,_fcf :=_ggfb .PdfObject .(*_aff .PdfObjectDictionary );
if !_fcf {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bbbg ._cfadc .GetModelFromPrimitive (_bac );model !=nil {_aagg ,_fbg :=model .(*PdfAction );if !_fbg {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _aagg ,nil ;};_aec :=&PdfAction {};_aec ._df =_ggfb ;_bbbg ._cfadc .Register (_bac ,_aec );if _afcf :=_bac .Get ("\u0054\u0079\u0070\u0065");_afcf !=nil {_aecd ,_ffg :=_afcf .(*_aff .PdfObjectName );if !_ffg {_adg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afcf );
}else {if *_aecd !="\u0041\u0063\u0074\u0069\u006f\u006e"{_adg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_aecd );
};_aec .Type =_aecd ;};};if _gge :=_bac .Get ("\u004e\u0065\u0078\u0074");_gge !=nil {_aec .Next =_gge ;};if _fdb :=_bac .Get ("\u0053");_fdb !=nil {_aec .S =_fdb ;};_dbff ,_faab :=_aec .S .(*_aff .PdfObjectName );if !_faab {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aec .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aec .S );};_cfc :=PdfActionType (_dbff .String ());
switch _cfc {case ActionTypeGoTo :_abf ,_fegd :=_bbbg .newPdfActionGotoFromDict (_bac );if _fegd !=nil {return nil ,_fegd ;};_abf .PdfAction =_aec ;_aec ._gfg =_abf ;return _aec ,nil ;case ActionTypeGoToR :_ggc ,_cga :=_bbbg .newPdfActionGotoRFromDict (_bac );
if _cga !=nil {return nil ,_cga ;};_ggc .PdfAction =_aec ;_aec ._gfg =_ggc ;return _aec ,nil ;case ActionTypeGoToE :_geb ,_dcb :=_bbbg .newPdfActionGotoEFromDict (_bac );if _dcb !=nil {return nil ,_dcb ;};_geb .PdfAction =_aec ;_aec ._gfg =_geb ;return _aec ,nil ;
case ActionTypeLaunch :_dcg ,_acce :=_bbbg .newPdfActionLaunchFromDict (_bac );if _acce !=nil {return nil ,_acce ;};_dcg .PdfAction =_aec ;_aec ._gfg =_dcg ;return _aec ,nil ;case ActionTypeThread :_cgfe ,_bcag :=_bbbg .newPdfActionThreadFromDict (_bac );
if _bcag !=nil {return nil ,_bcag ;};_cgfe .PdfAction =_aec ;_aec ._gfg =_cgfe ;return _aec ,nil ;case ActionTypeURI :_ddc ,_dff :=_bbbg .newPdfActionURIFromDict (_bac );if _dff !=nil {return nil ,_dff ;};_ddc .PdfAction =_aec ;_aec ._gfg =_ddc ;return _aec ,nil ;
case ActionTypeSound :_dae ,_ebaf :=_bbbg .newPdfActionSoundFromDict (_bac );if _ebaf !=nil {return nil ,_ebaf ;};_dae .PdfAction =_aec ;_aec ._gfg =_dae ;return _aec ,nil ;case ActionTypeMovie :_dcd ,_faef :=_bbbg .newPdfActionMovieFromDict (_bac );if _faef !=nil {return nil ,_faef ;
};_dcd .PdfAction =_aec ;_aec ._gfg =_dcd ;return _aec ,nil ;case ActionTypeHide :_cb ,_gag :=_bbbg .newPdfActionHideFromDict (_bac );if _gag !=nil {return nil ,_gag ;};_cb .PdfAction =_aec ;_aec ._gfg =_cb ;return _aec ,nil ;case ActionTypeNamed :_gee ,_fgb :=_bbbg .newPdfActionNamedFromDict (_bac );
if _fgb !=nil {return nil ,_fgb ;};_gee .PdfAction =_aec ;_aec ._gfg =_gee ;return _aec ,nil ;case ActionTypeSubmitForm :_abgd ,_faed :=_bbbg .newPdfActionSubmitFormFromDict (_bac );if _faed !=nil {return nil ,_faed ;};_abgd .PdfAction =_aec ;_aec ._gfg =_abgd ;
return _aec ,nil ;case ActionTypeResetForm :_fbe ,_dfa :=_bbbg .newPdfActionResetFormFromDict (_bac );if _dfa !=nil {return nil ,_dfa ;};_fbe .PdfAction =_aec ;_aec ._gfg =_fbe ;return _aec ,nil ;case ActionTypeImportData :_cfcd ,_efff :=_bbbg .newPdfActionImportDataFromDict (_bac );
if _efff !=nil {return nil ,_efff ;};_cfcd .PdfAction =_aec ;_aec ._gfg =_cfcd ;return _aec ,nil ;case ActionTypeSetOCGState :_bef ,_bdc :=_bbbg .newPdfActionSetOCGStateFromDict (_bac );if _bdc !=nil {return nil ,_bdc ;};_bef .PdfAction =_aec ;_aec ._gfg =_bef ;
return _aec ,nil ;case ActionTypeRendition :_aaee ,_ffed :=_bbbg .newPdfActionRenditionFromDict (_bac );if _ffed !=nil {return nil ,_ffed ;};_aaee .PdfAction =_aec ;_aec ._gfg =_aaee ;return _aec ,nil ;case ActionTypeTrans :_ffeg ,_gfgc :=_bbbg .newPdfActionTransFromDict (_bac );
if _gfgc !=nil {return nil ,_gfgc ;};_ffeg .PdfAction =_aec ;_aec ._gfg =_ffeg ;return _aec ,nil ;case ActionTypeGoTo3DView :_agf ,_eeee :=_bbbg .newPdfActionGoTo3DViewFromDict (_bac );if _eeee !=nil {return nil ,_eeee ;};_agf .PdfAction =_aec ;_aec ._gfg =_agf ;
return _aec ,nil ;case ActionTypeJavaScript :_abe ,_fegde :=_bbbg .newPdfActionJavaScriptFromDict (_bac );if _fegde !=nil {return nil ,_fegde ;};_abe .PdfAction =_aec ;_aec ._gfg =_abe ;return _aec ,nil ;};_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_cfc );
return nil ,nil ;};

// G returns the value of the green component of the color.
func (_bgdge *PdfColorDeviceRGB )G ()float64 {return _bgdge [1]};

// String returns a string describing the font descriptor.
func (_dcfca *PdfFontDescriptor )String ()string {var _aedff []string ;if _dcfca .FontName !=nil {_aedff =append (_aedff ,_dcfca .FontName .String ());};if _dcfca .FontFamily !=nil {_aedff =append (_aedff ,_dcfca .FontFamily .String ());};if _dcfca .fontFile !=nil {_aedff =append (_aedff ,_dcfca .fontFile .String ());
};if _dcfca ._ddffd !=nil {_aedff =append (_aedff ,_dcfca ._ddffd .String ());};_aedff =append (_aedff ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_dcfca .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ba .Join (_aedff ,"\u002c\u0020"));
};func (_bdcb *PdfReader )newPdfAnnotationCircleFromDict (_bbfg *_aff .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bgc :=PdfAnnotationCircle {};_gdbe ,_efef :=_bdcb .newPdfAnnotationMarkupFromDict (_bbfg );if _efef !=nil {return nil ,_efef ;};
_bgc .PdfAnnotationMarkup =_gdbe ;_bgc .BS =_bbfg .Get ("\u0042\u0053");_bgc .IC =_bbfg .Get ("\u0049\u0043");_bgc .BE =_bbfg .Get ("\u0042\u0045");_bgc .RD =_bbfg .Get ("\u0052\u0044");return &_bgc ,nil ;};func (_egaa *PdfReader )newPdfAnnotationWatermarkFromDict (_fcfdf *_aff .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_gacc :=PdfAnnotationWatermark {};
_gacc .FixedPrint =_fcfdf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_gacc ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fedd *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _aff .GetNumberAsFloat (_fedd .CapHeight );};func (_dda *PdfReader )newPdfActionJavaScriptFromDict (_dddc *_aff .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dddc .Get ("\u004a\u0053")},nil ;
};

// String implements interface PdfObject.
func (_dfg *PdfAction )String ()string {_bfe ,_aag :=_dfg .ToPdfObject ().(*_aff .PdfIndirectObject );if _aag {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dfg ._gfg ,_bfe .PdfObject .String ());};return "";};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gddg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gfff :=0.3*_gddg .R ()+0.59*_gddg .G ()+0.11*_gddg .B ();_gfff =_cf .Min (_cf .Max (_gfff ,0.0),1.0);return NewPdfColorDeviceGray (_gfff );};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gdceb *PdfReader )CheckAccessRights (password []byte )(bool ,_eec .Permissions ,error ){return _gdceb ._gaece .CheckAccessRights (password );};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _aff .PdfObject ;Sy _aff .PdfObject ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ecf *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_adc :=_aae .NewReader (img .getBase ());_afcg :=_gd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_egeba :=_aae .NewWriter (_afcg );
_deegf :=_cf .Pow (2,float64 (img .BitsPerComponent ))-1;_bbaef :=make ([]uint32 ,3);var (_fdcd uint32 ;ANorm ,X ,Y ,Z ,_fdebf ,_bbdg ,_eagd float64 ;_fafg error ;);for {_fdcd ,_fafg =_adc .ReadSample ();if _fafg ==_ega .EOF {break ;}else if _fafg !=nil {return img ,_fafg ;
};ANorm =float64 (_fdcd )/_deegf ;X =_ecf .WhitePoint [0]*_cf .Pow (ANorm ,_ecf .Gamma );Y =_ecf .WhitePoint [1]*_cf .Pow (ANorm ,_ecf .Gamma );Z =_ecf .WhitePoint [2]*_cf .Pow (ANorm ,_ecf .Gamma );_fdebf =3.240479*X +-1.537150*Y +-0.498535*Z ;_bbdg =-0.969256*X +1.875992*Y +0.041556*Z ;
_eagd =0.055648*X +-0.204043*Y +1.057311*Z ;_fdebf =_cf .Min (_cf .Max (_fdebf ,0),1.0);_bbdg =_cf .Min (_cf .Max (_bbdg ,0),1.0);_eagd =_cf .Min (_cf .Max (_eagd ,0),1.0);_bbaef [0]=uint32 (_fdebf *_deegf );_bbaef [1]=uint32 (_bbdg *_deegf );_bbaef [2]=uint32 (_eagd *_deegf );
if _fafg =_egeba .WriteSamples (_bbaef );_fafg !=nil {return img ,_fafg ;};};return _efecb (&_afcg ),nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_efdb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_efdbf *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcae ,_ecdg :=_aff .GetNumbersAsFloat (objects );
if _ecdg !=nil {return nil ,_ecdg ;};return _efdbf .ColorFromFloats (_bcae );};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _aff .PdfObject ;Flags _aff .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_edb *PdfActionGoToR )ToPdfObject ()_aff .PdfObject {_edb .PdfAction .ToPdfObject ();_dc :=_edb ._df ;_cde :=_dc .PdfObject .(*_aff .PdfObjectDictionary );_cde .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeGoToR )));if _edb .F !=nil {_cde .Set ("\u0046",_edb .F .ToPdfObject ());
};_cde .SetIfNotNil ("\u0044",_edb .D );_cde .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_edb .NewWindow );return _dc ;};

// AllFields returns a flattened list of all fields in the form.
func (_edbcf *PdfAcroForm )AllFields ()[]*PdfField {if _edbcf ==nil {return nil ;};var _fdcdg []*PdfField ;if _edbcf .Fields !=nil {for _ ,_dfbc :=range *_edbcf .Fields {_fdcdg =append (_fdcdg ,_fffb (_dfbc )...);};};return _fdcdg ;};

// SetContext sets the sub action (context).
func (_fa *PdfAction )SetContext (ctx PdfModel ){_fa ._gfg =ctx };

// GetNumComponents returns the number of color components.
func (_deed *PdfColorspaceICCBased )GetNumComponents ()int {return _deed .N };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aff .PdfObject ;IC _aff .PdfObject ;RO _aff .PdfObject ;OverlayText _aff .PdfObject ;Repeat _aff .PdfObject ;DA _aff .PdfObject ;Q _aff .PdfObject ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_cgcbg PdfOutputIntentType )String ()string {switch _cgcbg {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_fcefe int ,_ecbee *PdfPage )error ;

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_cbfeb int ,_bcbd *PdfPage );func (_edggg *PdfWriter )writeOutlines ()error {if _edggg ._dccbd ==nil {return nil ;};_adg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_edggg ._dccbd );
_efagc :=_edggg ._dccbd .ToPdfObject ();_adg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_efagc ,_efagc ,_efagc );_edggg ._cdccb .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_efagc );
_dfeb :=_edggg .addObjects (_efagc );if _dfeb !=nil {return _dfeb ;};return nil ;};

// SetContext sets the sub annotation (context).
func (_acb *PdfAnnotation )SetContext (ctx PdfModel ){_acb ._eefa =ctx };

// ToPdfObject implements interface PdfModel.
func (_edcga *PdfAnnotationPolyLine )ToPdfObject ()_aff .PdfObject {_edcga .PdfAnnotation .ToPdfObject ();_fac :=_edcga ._ccfb ;_eabc :=_fac .PdfObject .(*_aff .PdfObjectDictionary );_edcga .PdfAnnotationMarkup .appendToPdfDictionary (_eabc );_eabc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_eabc .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_edcga .Vertices );_eabc .SetIfNotNil ("\u004c\u0045",_edcga .LE );_eabc .SetIfNotNil ("\u0042\u0053",_edcga .BS );_eabc .SetIfNotNil ("\u0049\u0043",_edcga .IC );_eabc .SetIfNotNil ("\u0042\u0045",_edcga .BE );
_eabc .SetIfNotNil ("\u0049\u0054",_edcga .IT );_eabc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_edcga .Measure );return _fac ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_eefa PdfModel ;Rect _aff .PdfObject ;Contents _aff .PdfObject ;P _aff .PdfObject ;NM _aff .PdfObject ;M _aff .PdfObject ;F _aff .PdfObject ;AP _aff .PdfObject ;AS _aff .PdfObject ;Border _aff .PdfObject ;C _aff .PdfObject ;StructParent _aff .PdfObject ;
OC _aff .PdfObject ;_ccfb *_aff .PdfIndirectObject ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_baecdb *PdfPattern )GetContext ()PdfModel {return _baecdb ._abbe };type pdfFontType0 struct{fontCommon ;_aaegb *_aff .PdfIndirectObject ;_faggb _eee .TextEncoder ;Encoding _aff .PdfObject ;DescendantFont *PdfFont ;_baedc *_da .CMap ;};func (_gceeg *PdfReader )newPdfAnnotationScreenFromDict (_bgb *_aff .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bagc :=PdfAnnotationScreen {};
_bagc .T =_bgb .Get ("\u0054");_bagc .MK =_bgb .Get ("\u004d\u004b");_bagc .A =_bgb .Get ("\u0041");_bagc .AA =_bgb .Get ("\u0041\u0041");return &_bagc ,nil ;};func _dgdfe (_ebgec _aff .PdfObject ,_gffff *fontCommon )(*_da .CMap ,error ){_efgbc ,_aece :=_aff .GetStream (_ebgec );
if !_aece {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ebgec );
return nil ,_aff .ErrTypeError ;};_cffce ,_gcddf :=_aff .DecodeStream (_efgbc );if _gcddf !=nil {return nil ,_gcddf ;};_bgfb ,_gcddf :=_da .LoadCmapFromData (_cffce ,!_gffff .isCIDFont ());if _gcddf !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_efgbc .ObjectNumber ,_gcddf );
};return _bgfb ,_gcddf ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_fgfe :=&PdfAppender {_dbb :reader ._dged ,Reader :reader ,_dga :reader ._gaece ,_fdab :reader ._ddcba };_bbe ,_cce :=_fgfe ._dbb .Seek (0,_ega .SeekEnd );
if _cce !=nil {return nil ,_cce ;};_fgfe ._beec =_bbe ;if _ ,_cce =_fgfe ._dbb .Seek (0,_ega .SeekStart );_cce !=nil {return nil ,_cce ;};_fgfe ._dafgd ,_cce =NewPdfReaderWithOpts (_fgfe ._dbb ,opts );if _cce !=nil {return nil ,_cce ;};for _ ,_gffb :=range _fgfe .Reader .GetObjectNums (){if _fgfe ._bfafd < _gffb {_fgfe ._bfafd =_gffb ;
};};_fgfe ._gaec =_fgfe ._dga .GetXrefTable ();_fgfe ._cadg =_fgfe ._dga .GetXrefOffset ();_fgfe ._bbgg =append (_fgfe ._bbgg ,_fgfe ._dafgd .PageList ...);_fgfe ._deeb =make (map[_aff .PdfObject ]struct{});_fgfe ._fffa =make (map[_aff .PdfObject ]int64 );
_fgfe ._abcb =make (map[_aff .PdfObject ]struct{});_fgfe ._bgac =_fgfe ._dafgd .AcroForm ;_fgfe ._fdbb =_fgfe ._dafgd .DSS ;if opts !=nil {_fgfe ._geff =opts .Password ;};if encryptOptions !=nil {_fgfe ._dcgbg =encryptOptions ;};return _fgfe ,nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cgf :=NewPdfAction ();_baa :=&PdfActionMovie {};_baa .PdfAction =_cgf ;_cgf .SetContext (_baa );return _baa ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_cfdfe *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _cfdfe .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_fgcb *PdfColorspaceCalGray )ToPdfObject ()_aff .PdfObject {_fdgg :=&_aff .PdfObjectArray {};_fdgg .Append (_aff .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_eaea :=_aff .MakeDict ();if _fgcb .WhitePoint !=nil {_eaea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aff .MakeArray (_aff .MakeFloat (_fgcb .WhitePoint [0]),_aff .MakeFloat (_fgcb .WhitePoint [1]),_aff .MakeFloat (_fgcb .WhitePoint [2])));
}else {_adg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _fgcb .BlackPoint !=nil {_eaea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aff .MakeArray (_aff .MakeFloat (_fgcb .BlackPoint [0]),_aff .MakeFloat (_fgcb .BlackPoint [1]),_aff .MakeFloat (_fgcb .BlackPoint [2])));
};_eaea .Set ("\u0047\u0061\u006dm\u0061",_aff .MakeFloat (_fgcb .Gamma ));_fdgg .Append (_eaea );if _fgcb ._ffbf !=nil {_fgcb ._ffbf .PdfObject =_fdgg ;return _fgcb ._ffbf ;};return _fdgg ;};func _cdfa (_dcacd []byte )([]byte ,error ){_ccdfa :=_be .New ();
if _ ,_dgcbc :=_ega .Copy (_ccdfa ,_af .NewReader (_dcacd ));_dgcbc !=nil {return nil ,_dgcbc ;};return _ccdfa .Sum (nil ),nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _aff .PdfObject ;FontFamily _aff .PdfObject ;FontStretch _aff .PdfObject ;FontWeight _aff .PdfObject ;Flags _aff .PdfObject ;FontBBox _aff .PdfObject ;ItalicAngle _aff .PdfObject ;Ascent _aff .PdfObject ;Descent _aff .PdfObject ;
Leading _aff .PdfObject ;CapHeight _aff .PdfObject ;XHeight _aff .PdfObject ;StemV _aff .PdfObject ;StemH _aff .PdfObject ;AvgWidth _aff .PdfObject ;MaxWidth _aff .PdfObject ;MissingWidth _aff .PdfObject ;FontFile _aff .PdfObject ;FontFile2 _aff .PdfObject ;
FontFile3 _aff .PdfObject ;CharSet _aff .PdfObject ;_cdbb int ;_eace float64 ;*fontFile ;_ddffd *_bcd .TtfType ;

// Additional entries for CIDFonts
Style _aff .PdfObject ;Lang _aff .PdfObject ;FD _aff .PdfObject ;CIDSet _aff .PdfObject ;_cade *_aff .PdfIndirectObject ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_eaacb *XObjectForm )GetContainingPdfObject ()_aff .PdfObject {return _eaacb ._fddef };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_aff .PdfIndirectObject )*PdfOutlineItem {_dfdg :=PdfOutlineItem {};_dfdg ._gecd =&_dfdg ;_dfdg .Title =_aff .MakeString (title );_acdbd :=_aff .MakeArray ();_acdbd .Append (page );_acdbd .Append (_aff .MakeName ("\u0046\u0069\u0074"));
_dfdg .Dest =_acdbd ;return &_dfdg ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_cecee *PdfPageResources )GetFontByName (keyName _aff .PdfObjectName )(_aff .PdfObject ,bool ){if _cecee .Font ==nil {return nil ,false ;};_cgaab ,_ddegf :=_aff .TraceToDirectObject (_cecee .Font ).(*_aff .PdfObjectDictionary );if !_ddegf {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aff .TraceToDirectObject (_cecee .Font ));
return nil ,false ;};if _feebc :=_cgaab .Get (keyName );_feebc !=nil {return _feebc ,true ;};return nil ,false ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_ccafc *OutlineItem )ToPdfObject ()_aff .PdfObject {_dfdcb ,_ :=_ccafc .ToPdfOutlineItem ();return _dfdcb .ToPdfObject ();};func (_adbc *PdfReader )newPdfAnnotationSquigglyFromDict (_bdegg *_aff .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_fbf :=PdfAnnotationSquiggly {};
_fce ,_cbfe :=_adbc .newPdfAnnotationMarkupFromDict (_bdegg );if _cbfe !=nil {return nil ,_cbfe ;};_fbf .PdfAnnotationMarkup =_fce ;_fbf .QuadPoints =_bdegg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fbf ,nil ;};func _ffff (_bbgc _aff .PdfObject )(*PdfBorderStyle ,error ){_gggb :=&PdfBorderStyle {};
_gggb ._bgcf =_bbgc ;var _gcb *_aff .PdfObjectDictionary ;_bbgc =_aff .TraceToDirectObject (_bbgc );_gcb ,_cfaac :=_bbgc .(*_aff .PdfObjectDictionary );if !_cfaac {return nil ,_g .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _afbf :=_gcb .Get ("\u0054\u0079\u0070\u0065");
_afbf !=nil {_cff ,_facd :=_afbf .(*_aff .PdfObjectName );if !_facd {_adg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_afbf );
}else {if *_cff !="\u0042\u006f\u0072\u0064\u0065\u0072"{_adg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_cff );};};};if _cega :=_gcb .Get ("\u0057");
_cega !=nil {_bega ,_bgagd :=_aff .GetNumberAsFloat (_cega );if _bgagd !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_bgagd );return nil ,_bgagd ;};_gggb .W =&_bega ;
};if _dfff :=_gcb .Get ("\u0053");_dfff !=nil {_gbef ,_cbce :=_dfff .(*_aff .PdfObjectName );if !_cbce {return nil ,_g .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ebce BorderStyle ;switch *_gbef {case "\u0053":_ebce =BorderStyleSolid ;case "\u0044":_ebce =BorderStyleDashed ;case "\u0042":_ebce =BorderStyleBeveled ;case "\u0049":_ebce =BorderStyleInset ;case "\u0055":_ebce =BorderStyleUnderline ;default:_adg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gbef );
return nil ,_g .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gggb .S =&_ebce ;};if _cffa :=_gcb .Get ("\u0044");_cffa !=nil {_fdee ,_dgcd :=_cffa .(*_aff .PdfObjectArray );
if !_dgcd {_adg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cffa );return nil ,_g .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_dcfg ,_deeaf :=_fdee .ToIntegerArray ();if _deeaf !=nil {_adg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_deeaf );
return nil ,_deeaf ;};_gggb .D =&_dcfg ;};return _gggb ,nil ;};func _cfdg ()_f .Time {_aebda .Lock ();defer _aebda .Unlock ();return _bebcb };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_aaggf :=&PdfColorspaceSpecialSeparation {};return _aaggf ;};func _fgdf (_abfeb *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_abfeb }};

// ToPdfObject implements interface PdfModel.
func (_baga *PdfActionJavaScript )ToPdfObject ()_aff .PdfObject {_baga .PdfAction .ToPdfObject ();_aca :=_baga ._df ;_dbg :=_aca .PdfObject .(*_aff .PdfObjectDictionary );_dbg .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeJavaScript )));_dbg .SetIfNotNil ("\u004a\u0053",_baga .JS );
return _aca ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_gebea :_aff .MakeDict ()};
};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fcccd ,_bebbb :=NewStandard14Font (basefont );if _bebbb !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _fcccd ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_adbfe *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _aff .GetNumberAsFloat (_adbfe .XHeight );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dbcf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eefc :=vals [0];_dcfdd :=[]float64 {_eefc };_bgeeg ,_cdag :=_dbcf .TintTransform .Evaluate (_dcfdd );
if _cdag !=nil {_adg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cdag );_adg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dbcf .TintTransform );
return nil ,_cdag ;};_adg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bgeeg ,_dbcf .AlternateSpace );
_fecag ,_cdag :=_dbcf .AlternateSpace .ColorFromFloats (_bgeeg );if _cdag !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cdag );
return nil ,_cdag ;};return _fecag ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_bceg :=&PdfColorspaceCalRGB {};_bceg .BlackPoint =[]float64 {0.0,0.0,0.0};_bceg .Gamma =[]float64 {1.0,1.0,1.0};_bceg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _bceg ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_fgadd *PdfWriter )ApplyStandard (optimizer StandardApplier ){_fgadd ._afgef =optimizer };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_febcf *PdfShading )ToPdfObject ()_aff .PdfObject {_eeab :=_febcf ._bdacg ;_fcbga ,_gbgc :=_febcf .getShadingDict ();if _gbgc !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _febcf .ShadingType !=nil {_fcbga .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_febcf .ShadingType );};if _febcf .ColorSpace !=nil {_fcbga .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_febcf .ColorSpace .ToPdfObject ());
};if _febcf .Background !=nil {_fcbga .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_febcf .Background );};if _febcf .BBox !=nil {_fcbga .Set ("\u0042\u0042\u006f\u0078",_febcf .BBox .ToPdfObject ());};if _febcf .AntiAlias !=nil {_fcbga .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_febcf .AntiAlias );
};return _eeab ;};func (_efdd *PdfReader )newPdfSignatureReferenceFromDict (_ggege *_aff .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _bgdcf ,_ebgg :=_efdd ._cfadc .GetModelFromPrimitive (_ggege ).(*PdfSignatureReference );_ebgg {return _bgdcf ,nil ;
};_bgdff :=&PdfSignatureReference {_fdebg :_ggege ,Data :_ggege .Get ("\u0044\u0061\u0074\u0061")};var _edccd bool ;_bgdff .Type ,_ =_aff .GetName (_ggege .Get ("\u0054\u0079\u0070\u0065"));_bgdff .TransformMethod ,_edccd =_aff .GetName (_ggege .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_edccd {_adg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bgdff .TransformParams ,_ =_aff .GetDict (_ggege .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bgdff .DigestMethod ,_ =_aff .GetName (_ggege .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _bgdff ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_beedf *PdfShadingType6 )ToPdfObject ()_aff .PdfObject {_beedf .PdfShading .ToPdfObject ();_fgfee ,_fgbaf :=_beedf .getShadingDict ();if _fgbaf !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _beedf .BitsPerCoordinate !=nil {_fgfee .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_beedf .BitsPerCoordinate );};if _beedf .BitsPerComponent !=nil {_fgfee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_beedf .BitsPerComponent );
};if _beedf .BitsPerFlag !=nil {_fgfee .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_beedf .BitsPerFlag );};if _beedf .Decode !=nil {_fgfee .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_beedf .Decode );};if _beedf .Function !=nil {if len (_beedf .Function )==1{_fgfee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beedf .Function [0].ToPdfObject ());
}else {_gdegg :=_aff .MakeArray ();for _ ,_fdde :=range _beedf .Function {_gdegg .Append (_fdde .ToPdfObject ());};_fgfee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdegg );};};return _beedf ._bdacg ;};func (_aead *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};
func (_aaeda *pdfFontSimple )baseFields ()*fontCommon {return &_aaeda .fontCommon };

// M returns the value of the magenta component of the color.
func (_bfge *PdfColorDeviceCMYK )M ()float64 {return _bfge [1]};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _aff .PdfObject ;Open _aff .PdfObject ;};var (ErrRequiredAttributeMissing =_g .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_g .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ddcbc =_g .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_g .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_g .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ffb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_aff .ErrNotSupported );ErrType1CFontNotSupported =_ffb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_aff .ErrNotSupported );
ErrType3FontNotSupported =_ffb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_aff .ErrNotSupported );
ErrTTCmapNotSupported =_ffb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_aff .ErrNotSupported );
ErrSignNotEnoughSpace =_ffb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ffb .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bff :=NewPdfAnnotation ();_gab :=&PdfAnnotationSound {};_gab .PdfAnnotation =_bff ;_gab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bff .SetContext (_gab );return _gab ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ffbf *_aff .PdfIndirectObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_agdfg *PdfFont )SubsetRegistered ()error {switch _cccae :=_agdfg ._gebd .(type ){case *pdfFontType0 :_aeba :=_cccae .subsetRegistered ();if _aeba !=nil {_adg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_aeba );
return _aeba ;};if _cccae ._aaegb !=nil {if _cccae ._faggb !=nil {_cccae ._faggb .ToPdfObject ();};_cccae .ToPdfObject ();};default:_adg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_cccae );
};return nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ddaa *DSS )GetContainingPdfObject ()_aff .PdfObject {return _ddaa ._dfad };

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bed :=NewPdfAction ();_bfa :=&PdfActionGoTo3DView {};_bfa .PdfAction =_bed ;_bed .SetContext (_bfa );return _bfa ;};func _dadc (_baed *_aff .PdfObjectDictionary )bool {for _ ,_ddfa :=range _baed .Keys (){if _ ,_cegdf :=_eefae [_ddfa .String ()];
_cegdf {return true ;};};return false ;};

// GetContentStream returns the pattern cell's content stream
func (_eedfb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_baacea ,_ ,_eagab :=_eedfb .GetContentStreamWithEncoder ();return _baacea ,_eagab ;};

// WriteToFile writes the output PDF to file.
func (_fagea *PdfWriter )WriteToFile (outputFilePath string )error {_ccfgd ,_dbage :=_db .Create (outputFilePath );if _dbage !=nil {return _dbage ;};defer _ccfgd .Close ();return _fagea .Write (_ccfgd );};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_eggfc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fca :=NewPdfAnnotation ();_cdeg :=&PdfAnnotationFreeText {};_cdeg .PdfAnnotation =_fca ;_cdeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fca .SetContext (_cdeg );return _cdeg ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gecfc _ega .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gade _cg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dcgf _cg .Image )(*Image ,error );

// Compress an image.
Compress (_bfagf *Image ,_bbaec int64 )(*Image ,error );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdgff *PdfShadingType5 )ToPdfObject ()_aff .PdfObject {_fdgff .PdfShading .ToPdfObject ();_bbgdg ,_acaad :=_fdgff .getShadingDict ();if _acaad !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdgff .BitsPerCoordinate !=nil {_bbgdg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fdgff .BitsPerCoordinate );};if _fdgff .BitsPerComponent !=nil {_bbgdg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdgff .BitsPerComponent );
};if _fdgff .VerticesPerRow !=nil {_bbgdg .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fdgff .VerticesPerRow );};if _fdgff .Decode !=nil {_bbgdg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fdgff .Decode );};
if _fdgff .Function !=nil {if len (_fdgff .Function )==1{_bbgdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdgff .Function [0].ToPdfObject ());}else {_facaa :=_aff .MakeArray ();for _ ,_bdbag :=range _fdgff .Function {_facaa .Append (_bdbag .ToPdfObject ());
};_bbgdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_facaa );};};return _fdgff ._bdacg ;};

// GetOutlineTree returns the outline tree.
func (_gcgaf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gcgaf ._ecbcb };func _bfggb (_gabf []byte )(_bgde ,_bfdeb string ,_fggfd error ){_adg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gabf ));
_bgdeb :=_eedcf .FindIndex (_gabf );if _bgdeb ==nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_aff .ErrTypeError ;};_cacde :=_bgdeb [1];_affc :=_ba .Index (string (_gabf [_cacde :]),_gcef );if _affc < 0{_bgde =string (_gabf [_cacde :]);return _bgde ,"",nil ;};_ceff :=_cacde +_affc ;_bgde =string (_gabf [_cacde :_ceff ]);_ggcac :=_ceff ;
_affc =_ba .Index (string (_gabf [_ggcac :]),_fdbfce );if _affc < 0{_adg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fggfd );
return "","",_aff .ErrTypeError ;};_fbeag :=_ggcac +_affc ;_bfdeb =string (_gabf [_ggcac :_fbeag ]);return _bgde ,_bfdeb ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_eadd *LTV )EnableAll (extraCerts []*_fb .Certificate )error {_ecdde :=_eadd ._bbbab ._dafgd .AcroForm ;for _ ,_ddefa :=range _ecdde .AllFields (){_ebdgg ,_ :=_ddefa .GetContext ().(*PdfFieldSignature );if _ebdgg ==nil {continue ;};_cgba :=_ebdgg .V ;
if _aadg :=_eadd .validateSig (_cgba );_aadg !=nil {_adg .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_aadg );
};if _degg :=_eadd .Enable (_cgba ,extraCerts );_degg !=nil {return _degg ;};};return nil ;};func _bedc ()string {_aebda .Lock ();defer _aebda .Unlock ();_dcbeg :=_gff .GetLicenseKey ();if len (_aaaab )> 0&&(_dcbeg .IsLicensed ()||_cafgd ){return _aaaab ;
};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_gccca (),_dcbeg .TypeToString ());};

// GetSubFilter returns SubFilter value or empty string.
func (_adaae *pdfSignDictionary )GetSubFilter ()string {_dcdee :=_adaae .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dcdee ==nil {return "";};if _ggdcb ,_bdagb :=_aff .GetNameVal (_dcdee );_bdagb {return _ggdcb ;};return "";};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// Encrypt encrypts the output file with a specified user/owner password.
func (_eggeg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_baefc :=RC4_128bit ;if options !=nil {_baefc =options .Algorithm ;};_ecdeg :=_eec .PermOwner ;if options !=nil {_ecdeg =options .Permissions ;};var _acace _aa .Filter ;
switch _baefc {case RC4_128bit :_acace =_aa .NewFilterV2 (16);case AES_128bit :_acace =_aa .NewFilterAESV2 ();case AES_256bit :_acace =_aa .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_dcdbag ,_adgf ,_fbbag :=_aff .PdfCryptNewEncrypt (_acace ,userPass ,ownerPass ,_ecdeg );if _fbbag !=nil {return _fbbag ;};_eggeg ._fcgf =_dcdbag ;if _adgf .Major !=0{_eggeg .SetVersion (_adgf .Major ,_adgf .Minor );};_eggeg ._egecb =_adgf .Encrypt ;
_eggeg ._bacb ,_eggeg ._aceag =_adgf .ID0 ,_adgf .ID1 ;_aafac :=_aff .MakeIndirectObject (_adgf .Encrypt );_eggeg ._fdedd =_aafac ;_eggeg .addObject (_aafac );return nil ;};

// Height returns the height of `rect`.
func (_ccccg *PdfRectangle )Height ()float64 {return _cf .Abs (_ccccg .Ury -_ccccg .Lly )};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_cebf *PdfWriter )optimize ()error {if _cebf ._bgbg ==nil {return nil ;};var _accfdb error ;_cebf ._babcd ,_accfdb =_cebf ._bgbg .Optimize (_cebf ._babcd );if _accfdb !=nil {return _accfdb ;};_adabg :=make (map[_aff .PdfObject ]struct{},len (_cebf ._babcd ));
for _ ,_bcbae :=range _cebf ._babcd {_adabg [_bcbae ]=struct{}{};};_cebf ._bgadg =_adabg ;return nil ;};

// Encoder returns the font's text encoder.
func (_abga pdfFontType3 )Encoder ()_eee .TextEncoder {return _abga ._bfcg };const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dagb :=&PdfSignature {Type :_aff .MakeName ("\u0053\u0069\u0067"),Handler :handler };_cdcge :=&pdfSignDictionary {PdfObjectDictionary :_aff .MakeDict (),_efde :&handler ,_afgeg :_dagb };_dagb ._gagbc =_aff .MakeIndirectObject (_cdcge );
return _dagb ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_fgdc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_fgdc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_fgdc ._bgac =acroForm ;};func _abeg (_gcgab _aff .PdfObject )(*PdfColorspaceDeviceN ,error ){_ecga :=NewPdfColorspaceDeviceN ();
if _cbcg ,_dbcd :=_gcgab .(*_aff .PdfIndirectObject );_dbcd {_ecga ._debe =_cbcg ;};_gcgab =_aff .TraceToDirectObject (_gcgab );_gadd ,_dcbg :=_gcgab .(*_aff .PdfObjectArray );if !_dcbg {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _gadd .Len ()!=4&&_gadd .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gcgab =_gadd .Get (0);
_bgabc ,_dcbg :=_gcgab .(*_aff .PdfObjectName );if !_dcbg {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bgabc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gcgab =_gadd .Get (1);
_gcgab =_aff .TraceToDirectObject (_gcgab );_bbbgb ,_dcbg :=_gcgab .(*_aff .PdfObjectArray );if !_dcbg {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_ecga .ColorantNames =_bbbgb ;_gcgab =_gadd .Get (2);_ddece ,_edaa :=NewPdfColorspaceFromPdfObject (_gcgab );if _edaa !=nil {return nil ,_edaa ;};_ecga .AlternateSpace =_ddece ;_fbed ,_edaa :=_fdfeg (_gadd .Get (3));if _edaa !=nil {return nil ,_edaa ;
};_ecga .TintTransform =_fbed ;if _gadd .Len ()==5{_ggdgc ,_eegf :=_gbge (_gadd .Get (4));if _eegf !=nil {return nil ,_eegf ;};_ecga .Attributes =_ggdgc ;};return _ecga ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_geeec *PdfFieldButton )GetFillImage ()*Image {if _geeec .IsPush (){return _geeec ._agbe ;};return nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_cfcbd *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cefa ,_cfadb :=_cfcbd .GetMediaBox ();if _cfadb !=nil {return _cfadb ;};_dbebd :=_cefa .Urx -_cefa .Llx ;_dgdgb :=_cefa .Ury -_cefa .Lly ;_eeebf :=float64 (*ximg .Width );
_bdfe :=(_dbebd -_eeebf )/2;if opt .FitToWidth {_eeebf =_dbebd ;_bdfe =0;};_ddgdb :=_dgdgb ;_aaae :=float64 (0);if opt .PreserveAspectRatio {_ddgdb =_eeebf *float64 (*ximg .Height )/float64 (*ximg .Width );_aaae =(_dgdgb -_ddgdb )/2;};if _cfcbd .Resources ==nil {_cfcbd .Resources =NewPdfPageResources ();
};_aeffc :=0;_fgcae :=_aff .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_aeffc ));for _cfcbd .Resources .HasXObjectByName (_fgcae ){_aeffc ++;_fgcae =_aff .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_aeffc ));};_cfadb =_cfcbd .AddImageResource (_fgcae ,ximg );
if _cfadb !=nil {return _cfadb ;};_aeffc =0;_agbce :=_aff .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_aeffc ));for _cfcbd .HasExtGState (_agbce ){_aeffc ++;_agbce =_aff .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_aeffc ));};_ggcga :=_aff .MakeDict ();
_ggcga .Set ("\u0042\u004d",_aff .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ggcga .Set ("\u0043\u0041",_aff .MakeFloat (opt .Alpha ));_ggcga .Set ("\u0063\u0061",_aff .MakeFloat (opt .Alpha ));_cfadb =_cfcbd .AddExtGState (_agbce ,_ggcga );if _cfadb !=nil {return _cfadb ;
};_gbaac :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_agbce ,_eeebf ,_ddgdb ,_bdfe ,_aaae ,_fgcae );
_cfcbd .AddContentStreamByString (_gbaac );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cge *PdfAnnotationSquare )ToPdfObject ()_aff .PdfObject {_cge .PdfAnnotation .ToPdfObject ();_cgff :=_cge ._ccfb ;_egac :=_cgff .PdfObject .(*_aff .PdfObjectDictionary );if _cge .PdfAnnotationMarkup !=nil {_cge .PdfAnnotationMarkup .appendToPdfDictionary (_egac );
};_egac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_egac .SetIfNotNil ("\u0042\u0053",_cge .BS );_egac .SetIfNotNil ("\u0049\u0043",_cge .IC );_egac .SetIfNotNil ("\u0042\u0045",_cge .BE );
_egac .SetIfNotNil ("\u0052\u0044",_cge .RD );return _cgff ;};

// AddImageResource adds an image to the XObject resources.
func (_fddgb *PdfPage )AddImageResource (name _aff .PdfObjectName ,ximg *XObjectImage )error {var _babec *_aff .PdfObjectDictionary ;if _fddgb .Resources .XObject ==nil {_babec =_aff .MakeDict ();_fddgb .Resources .XObject =_babec ;}else {var _edcdg bool ;
_babec ,_edcdg =(_fddgb .Resources .XObject ).(*_aff .PdfObjectDictionary );if !_edcdg {return _g .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_babec .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_aba :=NewPdfAction ();_bbb :=&PdfActionSetOCGState {};_bbb .PdfAction =_aba ;_aba .SetContext (_bbb );return _bbb ;};func _cdffb (_ebega *_aff .PdfObjectArray )(float64 ,error ){_edfbg ,_dbfad :=_ebega .ToFloat64Array ();
if _dbfad !=nil {_adg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ebega ,_dbfad );};switch len (_edfbg ){case 1:return _edfbg [0],nil ;
case 3:_ggbge :=PdfColorspaceDeviceRGB {};_bbec ,_fcdfc :=_ggbge .ColorFromFloats (_edfbg );if _fcdfc !=nil {return 0.0,_fcdfc ;};return _bbec .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_gccae :=PdfColorspaceDeviceCMYK {};_ggggc ,_agcb :=_gccae .ColorFromFloats (_edfbg );
if _agcb !=nil {return 0.0,_agcb ;};_aadae ,_agcb :=_gccae .ColorToRGB (_ggggc .(*PdfColorDeviceCMYK ));if _agcb !=nil {return 0.0,_agcb ;};return _aadae .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_dbfad =_g .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_adg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ebega ,_dbfad );return 0.0,_dbfad ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ggcg DefaultImageHandler )NewImageFromGoImage (goimg _cg .Image )(*Image ,error ){_cbfab ,_cdbbg :=_gd .FromGoImage (goimg );if _cdbbg !=nil {return nil ,_cdbbg ;};_bggg :=_efecb (_cbfab .Base ());return &_bggg ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_accag *pdfCIDFontType0 )ToPdfObject ()_aff .PdfObject {return _aff .MakeNull ()};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cbacf *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_agdfe :=_aae .NewReader (img .getBase ());_eged :=_gd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._becb ,img ._edgef );
_ageg :=_aae .NewWriter (_eged );_ebad :=_cf .Pow (2,float64 (img .BitsPerComponent ))-1;_aafb :=_cbacf .GetNumComponents ();_becd :=make ([]uint32 ,_aafb );_dcae :=make ([]float64 ,_aafb );for {_agaf :=_agdfe .ReadSamples (_becd );if _agaf ==_ega .EOF {break ;
}else if _agaf !=nil {return img ,_agaf ;};for _cfbe :=0;_cfbe < _aafb ;_cfbe ++{_dcbb :=float64 (_becd [_cfbe ])/_ebad ;_dcae [_cfbe ]=_dcbb ;};_cegde ,_agaf :=_cbacf .TintTransform .Evaluate (_dcae );if _agaf !=nil {return img ,_agaf ;};for _ ,_gdac :=range _cegde {_gdac =_cf .Min (_cf .Max (0,_gdac ),1.0);
if _agaf =_ageg .WriteSample (uint32 (_gdac *_ebad ));_agaf !=nil {return img ,_agaf ;};};};return _cbacf .AlternateSpace .ImageToRGB (_efecb (&_eged ));};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eebb ,_begf :=_db .Open (filePath );if _begf !=nil {_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_begf );
return nil ,_begf ;};defer _eebb .Close ();return NewCompositePdfFontFromTTF (_eebb );};func (_ecee *PdfReader )newPdfAnnotationMovieFromDict (_gaaf *_aff .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cbfd :=PdfAnnotationMovie {};_cbfd .T =_gaaf .Get ("\u0054");
_cbfd .Movie =_gaaf .Get ("\u004d\u006f\u0076i\u0065");_cbfd .A =_gaaf .Get ("\u0041");return &_cbfd ,nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_aecdda :=&PdfShadingPatternType3 {};_aecdda .Matrix =_aff .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_aecdda .PdfPattern =&PdfPattern {};_aecdda .PdfPattern .PatternType =int64 (*_aff .MakeInteger (2));
_aecdda .PdfPattern ._abbe =_aecdda ;_aecdda .PdfPattern ._cfegc =_aff .MakeIndirectObject (_aff .MakeDict ());return _aecdda ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _aff .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _bdcbf error ;encoder ,_bdcbf =img .getSuitableEncoder ();if _bdcbf !=nil {_adg .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bdcbf );
encoder =_aff .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_effga ,_ecfbf :=encoder .EncodeBytes (img .Data );if _ecfbf !=nil {_adg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ecfbf );
return nil ,_ecfbf ;};_dggcb :=NewXObjectImage ();_edaeg :=img .Width ;_gggd :=img .Height ;_dggcb .Width =&_edaeg ;_dggcb .Height =&_gggd ;_gcacf :=img .BitsPerComponent ;_dggcb .BitsPerComponent =&_gcacf ;_dggcb .Filter =encoder ;_dggcb .Stream =_effga ;
if cs ==nil {if img .ColorComponents ==1{_dggcb .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_aff .DCTEncoder :_dggcb .ColorSpace =NewPdfColorspaceDeviceRGB ();_gcacf =8;_dggcb .BitsPerComponent =&_gcacf ;
};};}else if img .ColorComponents ==3{_dggcb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_aff .DCTEncoder :_dggcb .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_dggcb .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_g .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dggcb .ColorSpace =cs ;};if len (img ._becb )!=0{_beaf :=NewXObjectImage ();_beaf .Filter =encoder ;_fddad ,_dgabc :=encoder .EncodeBytes (img ._becb );
if _dgabc !=nil {_adg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dgabc );return nil ,_dgabc ;};_beaf .Stream =_fddad ;_beaf .BitsPerComponent =_dggcb .BitsPerComponent ;
_beaf .Width =&img .Width ;_beaf .Height =&img .Height ;_beaf .ColorSpace =NewPdfColorspaceDeviceGray ();_dggcb .SMask =_beaf .ToPdfObject ();}else {_dggcb .SMask =xobjIn .SMask ;_dggcb .ImageMask =xobjIn .ImageMask ;if _dggcb .ColorSpace .GetNumComponents ()==1{_dfbfc (_dggcb );
};};return _dggcb ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_gcedb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gcedb .HiVal )};};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_ggbb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_dgfe ,_ ,_edcbc :=_ggbb .CharcodesToUnicodeWithStats (_ggbb .BytesToCharcodes (data ));_babg :=_eee .ExpandLigatures (_dgfe );return _babg ,_eg .RuneCountInString (_babg ),_edcbc ;
};

// GetAscent returns the Ascent of the font `descriptor`.
func (_cbagg *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _aff .GetNumberAsFloat (_cbagg .Ascent );};func _dggca (_cegdd StdFontName )(pdfFontSimple ,error ){_ebaaf ,_ceae :=_bcd .NewStdFontByName (_cegdd );if !_ceae {return pdfFontSimple {},ErrFontNotSupported ;
};_gfee :=_dbcbc (_ebaaf );return _gfee ,nil ;};func _ceeb (_aabd _aff .PdfObject )(*PdfColorspaceCalRGB ,error ){_gfbd :=NewPdfColorspaceCalRGB ();if _fabdc ,_ebbe :=_aabd .(*_aff .PdfIndirectObject );_ebbe {_gfbd ._caef =_fabdc ;};_aabd =_aff .TraceToDirectObject (_aabd );
_aaa ,_gcaf :=_aabd .(*_aff .PdfObjectArray );if !_gcaf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aaa .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_aabd =_aff .TraceToDirectObject (_aaa .Get (0));_gedf ,_gcaf :=_aabd .(*_aff .PdfObjectName );if !_gcaf {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_gedf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aabd =_aff .TraceToDirectObject (_aaa .Get (1));
_ddbf ,_gcaf :=_aabd .(*_aff .PdfObjectDictionary );if !_gcaf {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_aabd =_ddbf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aabd =_aff .TraceToDirectObject (_aabd );_agbf ,_gcaf :=_aabd .(*_aff .PdfObjectArray );if !_gcaf {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _agbf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cbbae ,_gfbe :=_agbf .GetAsFloat64Slice ();
if _gfbe !=nil {return nil ,_gfbe ;};_gfbd .WhitePoint =_cbbae ;_aabd =_ddbf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aabd !=nil {_aabd =_aff .TraceToDirectObject (_aabd );_geec ,_fdef :=_aabd .(*_aff .PdfObjectArray );
if !_fdef {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _geec .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_adffc ,_ageb :=_geec .GetAsFloat64Slice ();if _ageb !=nil {return nil ,_ageb ;};_gfbd .BlackPoint =_adffc ;};_aabd =_ddbf .Get ("\u0047\u0061\u006dm\u0061");if _aabd !=nil {_aabd =_aff .TraceToDirectObject (_aabd );_aga ,_eecc :=_aabd .(*_aff .PdfObjectArray );
if !_eecc {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _aga .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_efafe ,_cgade :=_aga .GetAsFloat64Slice ();if _cgade !=nil {return nil ,_cgade ;};_gfbd .Gamma =_efafe ;};_aabd =_ddbf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _aabd !=nil {_aabd =_aff .TraceToDirectObject (_aabd );_dgff ,_cfde :=_aabd .(*_aff .PdfObjectArray );
if !_cfde {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _dgff .Len ()!=9{_adg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_dgff .String ());
return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_dcdf ,_dfee :=_dgff .GetAsFloat64Slice ();if _dfee !=nil {return nil ,_dfee ;
};_gfbd .Matrix =_dcdf ;};return _gfbd ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ddfg *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ddfg .Range };func (_bfbb *DSS )generateHashMap (_ffgbb []*_aff .PdfObjectStream )(map[string ]*_aff .PdfObjectStream ,error ){_ccdb :=map[string ]*_aff .PdfObjectStream {};for _ ,_egaec :=range _ffgbb {_cceag ,_dcccb :=_aff .DecodeStream (_egaec );
if _dcccb !=nil {return nil ,_dcccb ;};_fcdg ,_dcccb :=_cdfa (_cceag );if _dcccb !=nil {return nil ,_dcccb ;};_ccdb [string (_fcdg )]=_egaec ;};return _ccdb ,nil ;};

// Items returns all children outline items.
func (_aafcc *Outline )Items ()[]*OutlineItem {return _aafcc .Entries };func (_cgb *PdfReader )newPdfActionMovieFromDict (_dbffc *_aff .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dbffc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dbffc .Get ("\u0054"),Operation :_dbffc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ReplacePage replaces the original page to a new page.
func (_eeef *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_gacga :=pageNum -1;for _eebe :=range _eeef ._bbgg {if _eebe ==_gacga {_egeb :=page .Duplicate ();_aefbgd (_egeb );_eeef ._bbgg [_eebe ]=_egeb ;};};};type fontFile struct{_gdag string ;
_ffca string ;_bgbca _eee .SimpleEncoder ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gabgc *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gabgc .ToPdfOutline ().PdfOutlineTreeNode ;};func (_dcaae *PdfReader )buildOutlineTree (_bbaefb _aff .PdfObject ,_eafg *PdfOutlineTreeNode ,_cbgb *PdfOutlineTreeNode ,_fded map[_aff .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _fded ==nil {_fded =map[_aff .PdfObject ]struct{}{};
};_fded [_bbaefb ]=struct{}{};_affbc ,_efbfd :=_bbaefb .(*_aff .PdfIndirectObject );if !_efbfd {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bbaefb );
};_bbfca ,_faggd :=_affbc .PdfObject .(*_aff .PdfObjectDictionary );if !_faggd {return nil ,nil ,_g .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_adg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bbfca ,_affbc ,_affbc );
if _efdcd :=_bbfca .Get ("\u0054\u0069\u0074l\u0065");_efdcd !=nil {_dbbba ,_ggabbg :=_dcaae .newPdfOutlineItemFromIndirectObject (_affbc );if _ggabbg !=nil {return nil ,nil ,_ggabbg ;};_dbbba .Parent =_eafg ;_dbbba .Prev =_cbgb ;_fbgba :=_aff .ResolveReference (_bbfca .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cfadcf :=_fded [_fbgba ];_fbgba !=nil &&_fbgba !=_affbc &&!_cfadcf {if !_aff .IsNullObject (_fbgba ){_bbbc ,_bgeec ,_cgdgg :=_dcaae .buildOutlineTree (_fbgba ,&_dbbba .PdfOutlineTreeNode ,nil ,_fded );if _cgdgg !=nil {_adg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_cgdgg );
}else {_dbbba .First =_bbbc ;_dbbba .Last =_bgeec ;};};};_cadbg :=_aff .ResolveReference (_bbfca .Get ("\u004e\u0065\u0078\u0074"));if _ ,_eddbb :=_fded [_cadbg ];_cadbg !=nil &&_cadbg !=_affbc &&!_eddbb {if !_aff .IsNullObject (_cadbg ){_ecaad ,_cadbgd ,_gffdcc :=_dcaae .buildOutlineTree (_cadbg ,_eafg ,&_dbbba .PdfOutlineTreeNode ,_fded );
if _gffdcc !=nil {_adg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_gffdcc );
}else {_dbbba .Next =_ecaad ;return &_dbbba .PdfOutlineTreeNode ,_cadbgd ,nil ;};};};return &_dbbba .PdfOutlineTreeNode ,&_dbbba .PdfOutlineTreeNode ,nil ;};_dfda ,_fcbge :=_dcge (_affbc );if _fcbge !=nil {return nil ,nil ,_fcbge ;};_dfda .Parent =_eafg ;
if _gccbbe :=_bbfca .Get ("\u0046\u0069\u0072s\u0074");_gccbbe !=nil {_gccbbe =_aff .ResolveReference (_gccbbe );if _ ,_dbfae :=_fded [_gccbbe ];_gccbbe !=nil &&_gccbbe !=_affbc &&!_dbfae {_bdbf :=_aff .TraceToDirectObject (_gccbbe );if _ ,_geeeg :=_bdbf .(*_aff .PdfObjectNull );
!_geeeg &&_bdbf !=nil {_cbgbe ,_gbde ,_dgga :=_dcaae .buildOutlineTree (_gccbbe ,&_dfda .PdfOutlineTreeNode ,nil ,_fded );if _dgga !=nil {_adg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_dgga );
}else {_dfda .First =_cbgbe ;_dfda .Last =_gbde ;};};};};return &_dfda .PdfOutlineTreeNode ,&_dfda .PdfOutlineTreeNode ,nil ;};

// SetImage updates XObject Image with new image data.
func (_dddcb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_dddcb .Filter .UpdateParams (img .GetParamsDict ());_egcddd ,_gcbad :=_dddcb .Filter .EncodeBytes (img .Data );if _gcbad !=nil {return _gcbad ;};_dddcb .Stream =_egcddd ;_aacfc :=img .Width ;
_dddcb .Width =&_aacfc ;_eecfg :=img .Height ;_dddcb .Height =&_eecfg ;_eedeec :=img .BitsPerComponent ;_dddcb .BitsPerComponent =&_eedeec ;if cs ==nil {if img .ColorComponents ==1{_dddcb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dddcb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_dddcb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _g .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dddcb .ColorSpace =cs ;};return nil ;
};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aff .PdfObject ;IC _aff .PdfObject ;BE _aff .PdfObject ;RD _aff .PdfObject ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_edef :=NewPdfAnnotation ();_cdce :=&PdfAnnotationProjection {};_cdce .PdfAnnotation =_edef ;_cdce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edef .SetContext (_cdce );return _cdce ;};

// WriteToFile writes the Appender output to file specified by path.
func (_aecb *PdfAppender )WriteToFile (outputPath string )error {_ebabg ,_fade :=_db .Create (outputPath );if _fade !=nil {return _fade ;};defer _ebabg .Close ();return _aecb .Write (_ebabg );};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bcd .CharMetrics ;

// SetBorderWidth sets the style's border width.
func (_fcff *PdfBorderStyle )SetBorderWidth (width float64 ){_fcff .W =&width };

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ega .ReadSeeker )(*CompliancePdfReader ,error ){const _gaecd ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_baad ,_gaab :=_dffg (rs ,&ReaderOpts {ComplianceMode :true },false ,_gaecd );
if _gaab !=nil {return nil ,_gaab ;};return &CompliancePdfReader {PdfReader :_baad },nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ffdg *PdfColorspaceDeviceGray )ToPdfObject ()_aff .PdfObject {return _aff .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ColorToRGB converts a Lab color to an RGB color.
func (_ddec *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_eaccg :=func (_gdefg float64 )float64 {if _gdefg >=6.0/29{return _gdefg *_gdefg *_gdefg ;};return 108.0/841*(_gdefg -4.0/29.0);};_ceaf ,_ebdaf :=color .(*PdfColorLab );if !_ebdaf {_adg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ceaf .L ();AStar :=_ceaf .A ();BStar :=_ceaf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_ddec .WhitePoint [0]*_eaccg (L );Y :=_ddec .WhitePoint [1]*_eaccg (M );Z :=_ddec .WhitePoint [2]*_eaccg (N );_gcgg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_abfa :=-0.969256*X +1.875992*Y +0.041556*Z ;_gage :=0.055648*X +-0.204043*Y +1.057311*Z ;_gcgg =_cf .Min (_cf .Max (_gcgg ,0),1.0);
_abfa =_cf .Min (_cf .Max (_abfa ,0),1.0);_gage =_cf .Min (_cf .Max (_gage ,0),1.0);return NewPdfColorDeviceRGB (_gcgg ,_abfa ,_gage ),nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_dacfa *Image )ToJBIG2Image ()(*_aff .JBIG2Image ,error ){_gcgfd ,_dbggf :=_dacfa .ToGoImage ();if _dbggf !=nil {return nil ,_dbggf ;};return _aff .GoImageToJBIG2 (_gcgfd ,_aff .JB2ImageAutoThreshold );};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gfffa *PdfReader )Inspect ()(map[string ]int ,error ){return _gfffa ._gaece .Inspect ()};func _fffb (_dffdd *PdfField )[]*PdfField {_eaeaa :=[]*PdfField {_dffdd };for _ ,_bdbcd :=range _dffdd .Kids {_eaeaa =append (_eaeaa ,_fffb (_bdbcd )...);};
return _eaeaa ;};

// SetDecode sets the decode image float slice.
func (_ddecf *Image )SetDecode (decode []float64 ){_ddecf ._edgef =decode };

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_cfbg :=&PdfColorspaceDeviceN {};return _cfbg };var _fgdgb =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// GetNumComponents returns the number of color components (4 for CMYK32).
func (_affa *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_aff .PdfObjectDictionary )(*PdfPageResources ,error ){_dabee :=NewPdfPageResources ();if _fbef :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fbef !=nil {_dabee .ExtGState =_fbef ;};if _bdcg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_bdcg !=nil &&!_aff .IsNullObject (_bdcg ){_dabee .ColorSpace =_bdcg ;};if _dbfac :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_dbfac !=nil {_dabee .Pattern =_dbfac ;};if _aeed :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_aeed !=nil {_dabee .Shading =_aeed ;
};if _cabd :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cabd !=nil {_dabee .XObject =_cabd ;};if _fbbaf :=_aff .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fbbaf !=nil {_dabee .Font =_fbbaf ;};if _bddad :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_bddad !=nil {_dabee .ProcSet =_bddad ;};if _cgdcd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cgdcd !=nil {_dabee .Properties =_cgdcd ;};return _dabee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfe *PdfActionSound )ToPdfObject ()_aff .PdfObject {_dfe .PdfAction .ToPdfObject ();_egaf :=_dfe ._df ;_efe :=_egaf .PdfObject .(*_aff .PdfObjectDictionary );_efe .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeSound )));_efe .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dfe .Sound );
_efe .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dfe .Volume );_efe .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dfe .Synchronous );_efe .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dfe .Repeat );_efe .SetIfNotNil ("\u004d\u0069\u0078",_dfe .Mix );
return _egaf ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// IsSimple returns true if `font` is a simple font.
func (_dacee *PdfFont )IsSimple ()bool {_ ,_efdf :=_dacee ._gebd .(*pdfFontSimple );return _efdf };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fead *Image )ConvertToBinary ()error {if _fead .ColorComponents ==1&&_fead .BitsPerComponent ==1{return nil ;};_dggd ,_ggfac :=_fead .ToGoImage ();if _ggfac !=nil {return _ggfac ;};_bdcbd ,_ggfac :=_gd .MonochromeConverter .Convert (_dggd );if _ggfac !=nil {return _ggfac ;
};_fead .Data =_bdcbd .Base ().Data ;_fead ._becb ,_ggfac =_gd .ScaleAlphaToMonochrome (_fead ._becb ,int (_fead .Width ),int (_fead .Height ));if _ggfac !=nil {return _ggfac ;};_fead .BitsPerComponent =1;_fead .ColorComponents =1;_fead ._edgef =nil ;return nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bbg *PdfActionSetOCGState )ToPdfObject ()_aff .PdfObject {_bbg .PdfAction .ToPdfObject ();_ga :=_bbg ._df ;_fae :=_ga .PdfObject .(*_aff .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeSetOCGState )));_fae .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bbg .State );
_fae .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bbg .PreserveRB );return _ga ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_ecbb *_aff .PdfIndirectObject ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cbg :=NewPdfAnnotation ();_cag :=&PdfAnnotationPolyLine {};_cag .PdfAnnotation =_cbg ;_cag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbg .SetContext (_cag );return _cag ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_cedd *PdfAppender )SetDocInfo (info *PdfInfo ){_cedd ._fabd =info };func (_cdefg *PdfFilespec )getDict ()*_aff .PdfObjectDictionary {if _cgacc ,_fgbgb :=_cdefg ._dfefa .(*_aff .PdfIndirectObject );_fgbgb {_ecgef ,_cgfag :=_cgacc .PdfObject .(*_aff .PdfObjectDictionary );
if !_cgfag {return nil ;};return _ecgef ;}else if _eeffa ,_cdeggg :=_cdefg ._dfefa .(*_aff .PdfObjectDictionary );_cdeggg {return _eeffa ;}else {_adg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cdefg ._dfefa );
return nil ;};};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cbee *PdfField )GetContainingPdfObject ()_aff .PdfObject {return _cbee ._dfbfd };

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_afcfa *PdfField )GetContext ()PdfModel {return _afcfa ._gaecf };

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dgdgg *PdfPage )GetContainingPdfObject ()_aff .PdfObject {return _dgdgg ._fage };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cecd *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eede ,_dfgb :=_aff .GetNumbersAsFloat (objects );
if _dfgb !=nil {return nil ,_dfgb ;};return _cecd .ColorFromFloats (_eede );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_degeca *PdfOutlineTreeNode )GetContext ()PdfModel {if _accfdf ,_dedce :=_degeca ._gecd .(*PdfOutline );_dedce {return _accfdf ;};if _fgfbe ,_gbcf :=_degeca ._gecd .(*PdfOutlineItem );_gbcf {return _fgfbe ;};_adg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_aage *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetStandardApplier gets currently used StandardApplier..
func (_dbcffc *PdfWriter )GetStandardApplier ()StandardApplier {return _dbcffc ._afgef };

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_ccad *PdfFieldButton )IsRadio ()bool {return _ccad .GetType ()==ButtonTypeRadio };

// ToPdfObject implements interface PdfModel.
func (_de *PdfActionHide )ToPdfObject ()_aff .PdfObject {_de .PdfAction .ToPdfObject ();_fag :=_de ._df ;_acc :=_fag .PdfObject .(*_aff .PdfObjectDictionary );_acc .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeHide )));_acc .SetIfNotNil ("\u0054",_de .T );
_acc .SetIfNotNil ("\u0048",_de .H );return _fag ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_edcda *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_beeeg :=NewPdfOutlineItem ();_beeeg .Title =_aff .MakeEncodedString (_edcda .Title ,true );_beeeg .Dest =_edcda .Dest .ToPdfObject ();var _gceed []*PdfOutlineItem ;var _edgefe int64 ;
var _fdfa *PdfOutlineItem ;for _ ,_fdefe :=range _edcda .Entries {_febc ,_eaddb :=_fdefe .ToPdfOutlineItem ();_febc .Parent =&_beeeg .PdfOutlineTreeNode ;if _fdfa !=nil {_fdfa .Next =&_febc .PdfOutlineTreeNode ;_febc .Prev =&_fdfa .PdfOutlineTreeNode ;
};_gceed =append (_gceed ,_febc );_edgefe +=_eaddb ;_fdfa =_febc ;};_ceac :=len (_gceed );_edgefe +=int64 (_ceac );if _ceac > 0{_beeeg .First =&_gceed [0].PdfOutlineTreeNode ;_beeeg .Last =&_gceed [_ceac -1].PdfOutlineTreeNode ;_beeeg .Count =&_edgefe ;
};return _beeeg ,_edgefe ;};

// ToPdfObject implements interface PdfModel.
func (_bacg *PdfAnnotationStrikeOut )ToPdfObject ()_aff .PdfObject {_bacg .PdfAnnotation .ToPdfObject ();_fcga :=_bacg ._ccfb ;_cfdf :=_fcga .PdfObject .(*_aff .PdfObjectDictionary );_bacg .PdfAnnotationMarkup .appendToPdfDictionary (_cfdf );_cfdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_cfdf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bacg .QuadPoints );return _fcga ;};

// Register registers (caches) a model to primitive object relationship.
func (_cecg *modelManager )Register (primitive _aff .PdfObject ,model PdfModel ){_cecg ._ceaea [model ]=primitive ;_cecg ._geefd [primitive ]=model ;};

// ToPdfObject implements interface PdfModel.
func (_gfgb *PdfActionGoToE )ToPdfObject ()_aff .PdfObject {_gfgb .PdfAction .ToPdfObject ();_gce :=_gfgb ._df ;_gg :=_gce .PdfObject .(*_aff .PdfObjectDictionary );_gg .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeGoToE )));if _gfgb .F !=nil {_gg .Set ("\u0046",_gfgb .F .ToPdfObject ());
};_gg .SetIfNotNil ("\u0044",_gfgb .D );_gg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gfgb .NewWindow );_gg .SetIfNotNil ("\u0054",_gfgb .T );return _gce ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_db .File ,error ){const _fgef ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_acefb ,_abdb :=_db .Open (pdfFile );if _abdb !=nil {return nil ,nil ,_abdb ;};_aaabc ,_abdb :=_dffg (_acefb ,opts ,true ,_fgef );if _abdb !=nil {_acefb .Close ();return nil ,nil ,_abdb ;};return _aaabc ,_acefb ,nil ;};func (_bab *PdfReader )newPdfAnnotationCaretFromDict (_fbgf *_aff .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gefd :=PdfAnnotationCaret {};
_gdcf ,_fcag :=_bab .newPdfAnnotationMarkupFromDict (_fbgf );if _fcag !=nil {return nil ,_fcag ;};_gefd .PdfAnnotationMarkup =_gdcf ;_gefd .RD =_fbgf .Get ("\u0052\u0044");_gefd .Sy =_fbgf .Get ("\u0053\u0079");return &_gefd ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_eeagb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _eeagb ._gdbae ==nil {_eeagb ._gdbae =_bf .NewPSExecutor (_eeagb .Program );};var _eddb []_bf .PSObject ;for _ ,_gcdf :=range xVec {_eddb =append (_eddb ,_bf .MakeReal (_gcdf ));
};_cege ,_dedge :=_eeagb ._gdbae .Execute (_eddb );if _dedge !=nil {return nil ,_dedge ;};_eccg ,_dedge :=_bf .PSObjectArrayToFloat64Array (_cege );if _dedge !=nil {return nil ,_dedge ;};return _eccg ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ebbc *Image )ColorAt (x ,y int )(_bc .Color ,error ){_abca :=_gd .BytesPerLine (int (_ebbc .Width ),int (_ebbc .BitsPerComponent ),_ebbc .ColorComponents );switch _ebbc .ColorComponents {case 1:return _gd .ColorAtGrayscale (x ,y ,int (_ebbc .BitsPerComponent ),_abca ,_ebbc .Data ,_ebbc ._edgef );
case 3:return _gd .ColorAtNRGBA (x ,y ,int (_ebbc .Width ),_abca ,int (_ebbc .BitsPerComponent ),_ebbc .Data ,_ebbc ._becb ,_ebbc ._edgef );case 4:return _gd .ColorAtCMYK (x ,y ,int (_ebbc .Width ),_ebbc .Data ,_ebbc ._edgef );};_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebbc .ColorComponents ,_ebbc .BitsPerComponent );
return nil ,_g .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// Write writes out the PDF.
func (_eeaee *PdfWriter )Write (writer _ega .Writer )error {_adg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_fagfe :=_eeaee .checkLicense ();if _fagfe !=nil {return _fagfe ;};if _fagfe =_eeaee .writeOutlines ();_fagfe !=nil {return _fagfe ;};
if _fagfe =_eeaee .writeAcroFormFields ();_fagfe !=nil {return _fagfe ;};_eeaee .checkPendingObjects ();if _fagfe =_eeaee .writeOutputIntents ();_fagfe !=nil {return _fagfe ;};_eeaee .setCatalogVersion ();_eeaee .copyObjects ();if _fagfe =_eeaee .optimize ();
_fagfe !=nil {return _fagfe ;};if _fagfe =_eeaee .optimizeDocument ();_fagfe !=nil {return _fagfe ;};var _dbgca _c .Hash ;if _eeaee ._bdef {_dbgca =_ff .New ();writer =_ega .MultiWriter (_dbgca ,writer );};_eeaee .setWriter (writer );_efbe :=_eeaee .checkCrossReferenceStream ();
_bdafd ,_efbe :=_eeaee .mapObjectStreams (_efbe );_eeaee .adjustXRefAffectedVersion (_efbe );_eeaee .writeDocumentVersion ();_eeaee .updateObjectNumbers ();_eeaee .writeObjects ();if _fagfe =_eeaee .writeObjectsInStreams (_bdafd );_fagfe !=nil {return _fagfe ;
};_gdbbd :=_eeaee ._cagac ;var _bdebc int ;for _bdbfb :=range _eeaee ._abebd {if _bdbfb > _bdebc {_bdebc =_bdbfb ;};};if _eeaee ._bdef {if _fagfe =_eeaee .setHashIDs (_dbgca );_fagfe !=nil {return _fagfe ;};};if _efbe {if _fagfe =_eeaee .writeXRefStreams (_bdebc ,_gdbbd );
_fagfe !=nil {return _fagfe ;};}else {_eeaee .writeTrailer (_bdebc );};_eeaee .makeOffSetReference (_gdbbd );if _fagfe =_eeaee .flushWriter ();_fagfe !=nil {return _fagfe ;};return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_aff .PdfObjectArray ;TI *_aff .PdfObjectInteger ;I *_aff .PdfObjectArray ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_gfgce *PdfReader )GetObjectNums ()[]int {return _gfgce ._gaece .GetObjectNums ()};func (_bbdd *PdfReader )newPdfAnnotationSoundFromDict (_ggae *_aff .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_badcb :=PdfAnnotationSound {};_ecde ,_adbg :=_bbdd .newPdfAnnotationMarkupFromDict (_ggae );
if _adbg !=nil {return nil ,_adbg ;};_badcb .PdfAnnotationMarkup =_ecde ;_badcb .Name =_ggae .Get ("\u004e\u0061\u006d\u0065");_badcb .Sound =_ggae .Get ("\u0053\u006f\u0075n\u0064");return &_badcb ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dafd *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _g .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dgae :=field .V ;if _dgae ==nil {return _g .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_geaa :=pageNum -1;if _geaa < 0||_geaa > len (_dafd ._bbgg )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_cbff :=_dafd .Reader .PageList [_geaa ];field .P =_cbff .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_aff .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_cbff .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _dafd ._bgac ==_dafd ._dafgd .AcroForm {_dafd ._bgac =_dafd .Reader .AcroForm ;};_gdee :=_dafd ._bgac ;if _gdee ==nil {_gdee =NewPdfAcroForm ();};_gdee .SigFlags =_aff .MakeInteger (3);if _gdee .NeedAppearances !=nil {_gdee .NeedAppearances =nil ;};
_bafc :=append (_gdee .AllFields (),field .PdfField );_gdee .Fields =&_bafc ;_dafd .ReplaceAcroForm (_gdee );_dafd .UpdatePage (_cbff );_dafd ._bbgg [_geaa ]=_cbff ;if _ ,_daff :=field .V .GetDocMDPPermission ();_daff {_dafd ._dgcg =NewPermissions (field .V );
};return nil ;};

// C returns the value of the cyan component of the color.
func (_fgcd *PdfColorDeviceCMYK )C ()float64 {return _fgcd [0]};

// ToInteger convert to an integer format.
func (_babb *PdfColorDeviceGray )ToInteger (bits int )uint32 {_fgedg :=_cf .Pow (2,float64 (bits ))-1;return uint32 (_fgedg *_babb .Val ());};func (_bcgfed *PdfAcroForm )fillImageWithAppearance (_gadfe FieldImageProvider ,_gacbe FieldAppearanceGenerator )error {if _bcgfed ==nil {return nil ;
};_eaacc ,_dbedb :=_gadfe .FieldImageValues ();if _dbedb !=nil {return _dbedb ;};for _ ,_agaee :=range _bcgfed .AllFields (){_gfaf :=_agaee .PartialName ();_ddebf ,_gcca :=_eaacc [_gfaf ];if !_gcca {if _aeda ,_bfgb :=_agaee .FullName ();_bfgb ==nil {_ddebf ,_gcca =_eaacc [_aeda ];
};};if !_gcca {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gfaf );
continue ;};switch _gbdg :=_agaee .GetContext ().(type ){case *PdfFieldButton :if _gbdg .IsPush (){_gbdg .SetFillImage (_ddebf );};};if _gacbe ==nil {continue ;};for _ ,_aaabe :=range _agaee .Annotations {_cbgeb ,_ededd :=_gacbe .GenerateAppearanceDict (_bcgfed ,_agaee ,_aaabe );
if _ededd !=nil {return _ededd ;};_aaabe .AP =_cbgeb ;_aaabe .ToPdfObject ();};};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bacc *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afabf :=vals [0];if _afabf < 0.0||_afabf > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afabf );
return nil ,ErrColorOutOfRange ;};_gagd :=NewPdfColorCalGray (_afabf );return _gagd ,nil ;};func (_fecf *pdfFontType0 )subsetRegistered ()error {_gabge ,_fcacg :=_fecf .DescendantFont ._gebd .(*pdfCIDFontType2 );if !_fcacg {_adg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_fecf .DescendantFont );
return nil ;};if _gabge ==nil {return nil ;};if _gabge ._ggca ==nil {_adg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _fecf ._faggb ==nil {_adg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_dgbdb ,_fcacg :=_aff .GetStream (_gabge ._ggca .FontFile2 );if !_fcacg {_adg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _g .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eacde ,_cefgc :=_aff .DecodeStream (_dgbdb );if _cefgc !=nil {_adg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cefgc );
return _cefgc ;};_gdeg ,_cefgc :=_fga .Parse (_af .NewReader (_eacde ));if _cefgc !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dgbdb .Stream ));
return _cefgc ;};var _fbafc []rune ;var _cddd *_fga .Font ;switch _gcdcb :=_fecf ._faggb .(type ){case *_eee .TrueTypeFontEncoder :_fbafc =_gcdcb .RegisteredRunes ();_cddd ,_cefgc =_gdeg .SubsetKeepRunes (_fbafc );if _cefgc !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefgc );
return _cefgc ;};_gcdcb .SubsetRegistered ();case *_eee .IdentityEncoder :_fbafc =_gcdcb .RegisteredRunes ();_degf :=make ([]_fga .GlyphIndex ,len (_fbafc ));for _bbbfg ,_ecddc :=range _fbafc {_degf [_bbbfg ]=_fga .GlyphIndex (_ecddc );};_cddd ,_cefgc =_gdeg .SubsetKeepIndices (_degf );
if _cefgc !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefgc );return _cefgc ;};case _eee .SimpleEncoder :_fbbgf :=_gcdcb .Charcodes ();for _ ,_dgcbe :=range _fbbgf {_fgga ,_ffac :=_gcdcb .CharcodeToRune (_dgcbe );if !_ffac {_adg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_dgcbe );
continue ;};_fbafc =append (_fbafc ,_fgga );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_fecf ._faggb );
};var _fcfa _af .Buffer ;_cefgc =_cddd .Write (&_fcfa );if _cefgc !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefgc );return _cefgc ;};if _fecf ._dcad !=nil {_afca :=make (map[_da .CharCode ]rune ,len (_fbafc ));for _ ,_eeaeb :=range _fbafc {_acdc ,_edfd :=_fecf ._faggb .RuneToCharcode (_eeaeb );
if !_edfd {continue ;};_afca [_da .CharCode (_acdc )]=_eeaeb ;};_fecf ._dcad =_da .NewToUnicodeCMap (_afca );};_dgbdb ,_cefgc =_aff .MakeStream (_fcfa .Bytes (),_aff .NewFlateEncoder ());if _cefgc !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefgc );
return _cefgc ;};_dgbdb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aff .MakeInteger (int64 (_fcfa .Len ())));if _febf ,_cebb :=_aff .GetStream (_gabge ._ggca .FontFile2 );_cebb {*_febf =*_dgbdb ;}else {_gabge ._ggca .FontFile2 =_dgbdb ;};_bgec :=_aabee ();
if len (_fecf ._abed )> 0{_fecf ._abed =_fada (_fecf ._abed ,_bgec );};if len (_gabge ._abed )> 0{_gabge ._abed =_fada (_gabge ._abed ,_bgec );};if len (_fecf ._edebf )> 0{_fecf ._edebf =_fada (_fecf ._edebf ,_bgec );};if _gabge ._ggca !=nil {_gbac ,_ffbed :=_aff .GetName (_gabge ._ggca .FontName );
if _ffbed &&len (_gbac .String ())> 0{_ddeg :=_fada (_gbac .String (),_bgec );_gabge ._ggca .FontName =_aff .MakeName (_ddeg );};};return nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bfd .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bfd .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bfd .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_bbbab *PdfAppender ;_gceb *DSS ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_agd :=&PdfAppender {_dbb :reader ._dged ,Reader :reader ,_dga :reader ._gaece ,_fdab :reader ._ddcba };_fbbg ,_gfeb :=_agd ._dbb .Seek (0,_ega .SeekEnd );if _gfeb !=nil {return nil ,_gfeb ;
};_agd ._beec =_fbbg ;if _ ,_gfeb =_agd ._dbb .Seek (0,_ega .SeekStart );_gfeb !=nil {return nil ,_gfeb ;};_agd ._dafgd ,_gfeb =NewPdfReader (_agd ._dbb );if _gfeb !=nil {return nil ,_gfeb ;};for _ ,_fddd :=range _agd .Reader .GetObjectNums (){if _agd ._bfafd < _fddd {_agd ._bfafd =_fddd ;
};};_agd ._gaec =_agd ._dga .GetXrefTable ();_agd ._cadg =_agd ._dga .GetXrefOffset ();_agd ._bbgg =append (_agd ._bbgg ,_agd ._dafgd .PageList ...);_agd ._deeb =make (map[_aff .PdfObject ]struct{});_agd ._fffa =make (map[_aff .PdfObject ]int64 );_agd ._abcb =make (map[_aff .PdfObject ]struct{});
_agd ._bgac =_agd ._dafgd .AcroForm ;_agd ._fdbb =_agd ._dafgd .DSS ;return _agd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_bfdc *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_dfec :=PdfColorDeviceRGB {r ,g ,b };return &_dfec ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetContentStream returns the XObject Form's content stream.
func (_fabfg *XObjectForm )GetContentStream ()([]byte ,error ){_ffcfg ,_gdcgb :=_aff .DecodeStream (_fabfg ._fddef );if _gdcgb !=nil {return nil ,_gdcgb ;};return _ffcfg ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_efbf *pdfFontType3 )ToPdfObject ()_aff .PdfObject {if _efbf ._bggc ==nil {_efbf ._bggc =&_aff .PdfIndirectObject {};};_ggdge :=_efbf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_efbf ._bggc .PdfObject =_ggdge ;if _efbf .FirstChar !=nil {_ggdge .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_efbf .FirstChar );
};if _efbf .LastChar !=nil {_ggdge .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_efbf .LastChar );};if _efbf .Widths !=nil {_ggdge .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_efbf .Widths );};if _efbf .Encoding !=nil {_ggdge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efbf .Encoding );
}else if _efbf ._bfcg !=nil {_bbfcg :=_efbf ._bfcg .ToPdfObject ();if _bbfcg !=nil {_ggdge .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbfcg );};};if _efbf .FontBBox !=nil {_ggdge .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_efbf .FontBBox );
};if _efbf .FontMatrix !=nil {_ggdge .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_efbf .FontMatrix );};if _efbf .CharProcs !=nil {_ggdge .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_efbf .CharProcs );};if _efbf .Resources !=nil {_ggdge .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_efbf .Resources );
};return _efbf ._bggc ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_bbf *PdfReader )newPdfActionGotoEFromDict (_gcf *_aff .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ccc ,_dcf :=_dfc (_gcf .Get ("\u0046"));if _dcf !=nil {return nil ,_dcf ;};return &PdfActionGoToE {D :_gcf .Get ("\u0044"),NewWindow :_gcf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gcf .Get ("\u0054"),F :_ccc },nil ;
};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_gaag *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_gace *PdfAnnotationText )ToPdfObject ()_aff .PdfObject {_gace .PdfAnnotation .ToPdfObject ();_bfcc :=_gace ._ccfb ;_dffba :=_bfcc .PdfObject .(*_aff .PdfObjectDictionary );if _gace .PdfAnnotationMarkup !=nil {_gace .PdfAnnotationMarkup .appendToPdfDictionary (_dffba );
};_dffba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0054\u0065\u0078\u0074"));_dffba .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gace .Open );_dffba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gace .Name );_dffba .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gace .State );
_dffba .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gace .StateModel );return _bfcc ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_aff .PdfObjectStream )(*XObjectImage ,error ){_eabdbf :=&XObjectImage {};_eabdbf ._fccgd =stream ;_gdedbf :=*(stream .PdfObjectDictionary );_ceba ,_ccfdb :=_aff .NewEncoderFromStream (stream );if _ccfdb !=nil {return nil ,_ccfdb ;
};_eabdbf .Filter =_ceba ;if _cgfeg :=_aff .TraceToDirectObject (_gdedbf .Get ("\u0057\u0069\u0064t\u0068"));_cgfeg !=nil {_baebd ,_ddcdb :=_cgfeg .(*_aff .PdfObjectInteger );if !_ddcdb {return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fedfa :=int64 (*_baebd );_eabdbf .Width =&_fedfa ;}else {return nil ,_g .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ecfdc :=_aff .TraceToDirectObject (_gdedbf .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_ecfdc !=nil {_deaeg ,_dacff :=_ecfdc .(*_aff .PdfObjectInteger );if !_dacff {return nil ,_g .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ceegd :=int64 (*_deaeg );
_eabdbf .Height =&_ceegd ;}else {return nil ,_g .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cbdfac :=_aff .TraceToDirectObject (_gdedbf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_cbdfac !=nil {_bebg ,_addcaa :=NewPdfColorspaceFromPdfObject (_cbdfac );if _addcaa !=nil {return nil ,_addcaa ;};_eabdbf .ColorSpace =_bebg ;}else {_adg .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_eabdbf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cbbgc :=_aff .TraceToDirectObject (_gdedbf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cbbgc !=nil {_dggac ,_edfce :=_cbbgc .(*_aff .PdfObjectInteger );
if !_edfce {return nil ,_g .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_aaedg :=int64 (*_dggac );_eabdbf .BitsPerComponent =&_aaedg ;};_eabdbf .Intent =_gdedbf .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_eabdbf .ImageMask =_gdedbf .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_eabdbf .Mask =_gdedbf .Get ("\u004d\u0061\u0073\u006b");_eabdbf .Decode =_gdedbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_eabdbf .Interpolate =_gdedbf .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_eabdbf .Alternatives =_gdedbf .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_eabdbf .SMask =_gdedbf .Get ("\u0053\u004d\u0061s\u006b");_eabdbf .SMaskInData =_gdedbf .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_eabdbf .Matte =_gdedbf .Get ("\u004d\u0061\u0074t\u0065");_eabdbf .Name =_gdedbf .Get ("\u004e\u0061\u006d\u0065");_eabdbf .StructParent =_gdedbf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eabdbf .ID =_gdedbf .Get ("\u0049\u0044");
_eabdbf .OPI =_gdedbf .Get ("\u004f\u0050\u0049");_eabdbf .Metadata =_gdedbf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eabdbf .OC =_gdedbf .Get ("\u004f\u0043");_eabdbf .Stream =stream .Stream ;return _eabdbf ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cae :=NewPdfAction ();_dd :=&PdfActionURI {};_dd .PdfAction =_cae ;_cae .SetContext (_dd );return _dd ;};func (_affd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gdgc pdfCIDFontType0 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){return _bcd .CharMetrics {Wx :_gdgc ._fgbc },true ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _aff .PdfObject ;MK _aff .PdfObject ;A _aff .PdfObject ;AA _aff .PdfObject ;BS _aff .PdfObject ;Parent _aff .PdfObject ;_afae *PdfField ;_cbcf bool ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_becb []byte ;_edgef []float64 ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bad :=NewPdfAnnotation ();_gffd :=&PdfAnnotationCircle {};_gffd .PdfAnnotation =_bad ;_gffd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bad .SetContext (_gffd );return _gffd ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_edfag *PdfSignature ,_ddbaee Hasher ,_dedaa SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// ToPdfObject implements interface PdfModel.
func (_faddd *PdfAnnotationProjection )ToPdfObject ()_aff .PdfObject {_faddd .PdfAnnotation .ToPdfObject ();_bfdbc :=_faddd ._ccfb ;_ebee :=_bfdbc .PdfObject .(*_aff .PdfObjectDictionary );_faddd .PdfAnnotationMarkup .appendToPdfDictionary (_ebee );return _bfdbc ;
};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_afdag *PdfReader )GetPageLabels ()(_aff .PdfObject ,error ){_ggeca :=_aff .ResolveReference (_afdag ._dcadd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ggeca ==nil {return nil ,nil ;};if !_afdag ._gfgg {_egcb :=_afdag .traverseObjectData (_ggeca );
if _egcb !=nil {return nil ,_egcb ;};};return _ggeca ,nil ;};func _dbdf (_ddageg _aff .PdfObject )(*PdfShading ,error ){_eefaf :=&PdfShading {};var _fccaa *_aff .PdfObjectDictionary ;if _adcca ,_gagba :=_aff .GetIndirect (_ddageg );_gagba {_eefaf ._bdacg =_adcca ;
_abfcg ,_accacf :=_adcca .PdfObject .(*_aff .PdfObjectDictionary );if !_accacf {_adg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aff .ErrTypeError ;
};_fccaa =_abfcg ;}else if _cgadec ,_babdg :=_aff .GetStream (_ddageg );_babdg {_eefaf ._bdacg =_cgadec ;_fccaa =_cgadec .PdfObjectDictionary ;}else if _agad ,_ebfe :=_aff .GetDict (_ddageg );_ebfe {_eefaf ._bdacg =_agad ;_fccaa =_agad ;}else {_adg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ddageg );
return nil ,_aff .ErrTypeError ;};if _fccaa ==nil {_adg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_g .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ddageg =_fccaa .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddageg ==nil {_adg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddageg =_aff .TraceToDirectObject (_ddageg );_deceg ,_beea :=_ddageg .(*_aff .PdfObjectInteger );if !_beea {_adg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ddageg );
return nil ,_aff .ErrTypeError ;};if *_deceg < 1||*_deceg > 7{_adg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_deceg );
return nil ,_aff .ErrTypeError ;};_eefaf .ShadingType =_deceg ;_ddageg =_fccaa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ddageg ==nil {_adg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eeece ,_edage :=NewPdfColorspaceFromPdfObject (_ddageg );if _edage !=nil {_adg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_edage );
return nil ,_edage ;};_eefaf .ColorSpace =_eeece ;_ddageg =_fccaa .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ddageg !=nil {_ddageg =_aff .TraceToDirectObject (_ddageg );_aecfb ,_ffacf :=_ddageg .(*_aff .PdfObjectArray );if !_ffacf {_adg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ddageg );
return nil ,_aff .ErrTypeError ;};_eefaf .Background =_aecfb ;};_ddageg =_fccaa .Get ("\u0042\u0042\u006f\u0078");if _ddageg !=nil {_ddageg =_aff .TraceToDirectObject (_ddageg );_gbcef ,_eggfd :=_ddageg .(*_aff .PdfObjectArray );if !_eggfd {_adg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ddageg );
return nil ,_aff .ErrTypeError ;};_eeba ,_fcdad :=NewPdfRectangle (*_gbcef );if _fcdad !=nil {_adg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fcdad );return nil ,_fcdad ;};_eefaf .BBox =_eeba ;};_ddageg =_fccaa .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _ddageg !=nil {_ddageg =_aff .TraceToDirectObject (_ddageg );_gcgba ,_cfeag :=_ddageg .(*_aff .PdfObjectBool );if !_cfeag {_adg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddageg );
return nil ,_aff .ErrTypeError ;};_eefaf .AntiAlias =_gcgba ;};switch *_deceg {case 1:_efedb ,_abfeef :=_aggd (_fccaa );if _abfeef !=nil {return nil ,_abfeef ;};_efedb .PdfShading =_eefaf ;_eefaf ._fcbfb =_efedb ;return _eefaf ,nil ;case 2:_babae ,_bbgcb :=_ccbae (_fccaa );
if _bbgcb !=nil {return nil ,_bbgcb ;};_babae .PdfShading =_eefaf ;_eefaf ._fcbfb =_babae ;return _eefaf ,nil ;case 3:_fdadd ,_aaded :=_ffcgg (_fccaa );if _aaded !=nil {return nil ,_aaded ;};_fdadd .PdfShading =_eefaf ;_eefaf ._fcbfb =_fdadd ;return _eefaf ,nil ;
case 4:_fbefc ,_geefc :=_abegfg (_fccaa );if _geefc !=nil {return nil ,_geefc ;};_fbefc .PdfShading =_eefaf ;_eefaf ._fcbfb =_fbefc ;return _eefaf ,nil ;case 5:_bbdcf ,_dddb :=_ccfa (_fccaa );if _dddb !=nil {return nil ,_dddb ;};_bbdcf .PdfShading =_eefaf ;
_eefaf ._fcbfb =_bbdcf ;return _eefaf ,nil ;case 6:_dbgdg ,_afcfg :=_dccgd (_fccaa );if _afcfg !=nil {return nil ,_afcfg ;};_dbgdg .PdfShading =_eefaf ;_eefaf ._fcbfb =_dbgdg ;return _eefaf ,nil ;case 7:_deedc ,_gdfge :=_daeaac (_fccaa );if _gdfge !=nil {return nil ,_gdfge ;
};_deedc .PdfShading =_eefaf ;_eefaf ._fcbfb =_deedc ;return _eefaf ,nil ;};return nil ,_g .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bfcaa *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bfcaa ._bbgb ==nil {_bfcaa .GetAnnotations ();};_bfcaa ._bbgb =append (_bfcaa ._bbgb ,annot );};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _aff .PdfObjectName ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_afbfg pdfCIDFontType2 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){_afaae ,_fafd :=_afbfg ._aedcf [r ];if !_fafd {_egafa ,_eeefb :=_aff .GetInt (_afbfg .DW );if !_eeefb {return _bcd .CharMetrics {},false ;};_afaae =int (*_egafa );};return _bcd .CharMetrics {Wx :float64 (_afaae )},true ;
};func (_fcageb *PdfReader )buildNameNodes (_dbeaca *_aff .PdfIndirectObject ,_efefd map[_aff .PdfObject ]struct{})error {if _dbeaca ==nil {return nil ;};if _ ,_dbeae :=_efefd [_dbeaca ];_dbeae {_adg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dbeaca .ObjectNumber );
return nil ;};_efefd [_dbeaca ]=struct{}{};_edcedb ,_cgcd :=_dbeaca .PdfObject .(*_aff .PdfObjectDictionary );if !_cgcd {return _g .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _facb ,_eedffd :=_aff .GetDict (_edcedb .Get ("\u0044\u0065\u0073t\u0073"));
_eedffd {_daeaa ,_gdcef :=_aff .GetArray (_facb .Get ("\u004b\u0069\u0064\u0073"));if !_gdcef {return _g .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_adg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_daeaa );
for _deffca ,_deeeb :=range _daeaa .Elements (){_aebbd ,_fbacb :=_aff .GetIndirect (_deeeb );if !_fbacb {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_aebbd );
return _g .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_daeaa .Set (_deffca ,_aebbd );_cecbg :=_fcageb .buildNameNodes (_aebbd ,_efefd );if _cecbg !=nil {return _cecbg ;
};};};if _adab ,_bfcf :=_aff .GetDict (_edcedb );_bfcf {if !_aff .IsNullObject (_adab .Get ("\u004b\u0069\u0064\u0073")){if _cbdde ,_gcafa :=_aff .GetArray (_adab .Get ("\u004b\u0069\u0064\u0073"));_gcafa {for _caddb ,_cffga :=range _cbdde .Elements (){if _cfea ,_fbdge :=_aff .GetIndirect (_cffga );
_fbdge {_cbdde .Set (_caddb ,_cfea );_dgcf :=_fcageb .buildNameNodes (_cfea ,_efefd );if _dgcf !=nil {return _dgcf ;};};};};};};return nil ;};func (_egcac *LTV )getCerts (_dfae []*_fb .Certificate )([][]byte ,error ){_addca :=make ([][]byte ,0,len (_dfae ));
for _ ,_acfe :=range _dfae {_addca =append (_addca ,_acfe .Raw );};return _addca ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ffcf *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gcgf :=_aae .NewReader (img .getBase ());_bfag :=_gd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ffcf .AlternateSpace .GetNumComponents (),nil ,img ._becb ,nil );
_cdacf :=_aae .NewWriter (_bfag );_abac :=_cf .Pow (2,float64 (img .BitsPerComponent ))-1;_adg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_adg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ffcf .TintTransform );_ebdf :=_ffcf .AlternateSpace .DecodeArray ();var (_dfdb uint32 ;_bfdbf error ;);for {_dfdb ,_bfdbf =_gcgf .ReadSample ();
if _bfdbf ==_ega .EOF {break ;};if _bfdbf !=nil {return img ,_bfdbf ;};_agag :=float64 (_dfdb )/_abac ;_cfeea ,_efgb :=_ffcf .TintTransform .Evaluate ([]float64 {_agag });if _efgb !=nil {return img ,_efgb ;};for _cfeg ,_bcgg :=range _cfeea {_gfgca :=_gd .LinearInterpolate (_bcgg ,_ebdf [_cfeg *2],_ebdf [_cfeg *2+1],0,1);
if _efgb =_cdacf .WriteSample (uint32 (_gfgca *_abac ));_efgb !=nil {return img ,_efgb ;};};};return _ffcf .AlternateSpace .ImageToRGB (_efecb (&_bfag ));};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_eacc *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _aff .PdfObject ;FS _aff .PdfObject ;F _aff .PdfObject ;UF _aff .PdfObject ;DOS _aff .PdfObject ;Mac _aff .PdfObject ;Unix _aff .PdfObject ;ID _aff .PdfObject ;V _aff .PdfObject ;EF _aff .PdfObject ;RF _aff .PdfObject ;Desc _aff .PdfObject ;
CI _aff .PdfObject ;_dfefa _aff .PdfObject ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _aff .PdfObject ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cfeff *PdfPageResources )GetXObjectImageByName (keyName _aff .PdfObjectName )(*XObjectImage ,error ){_dfeag ,_egdb :=_cfeff .GetXObjectByName (keyName );if _dfeag ==nil {return nil ,nil ;};if _egdb !=XObjectTypeImage {return nil ,_g .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_bbbae ,_aagdc :=NewXObjectImageFromStream (_dfeag );if _aagdc !=nil {return nil ,_aagdc ;};return _bbbae ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_aebfa *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdceb ,_dfef :=color .(*PdfColorCalRGB );if !_dfef {_adg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adfe :=_bdceb .A ();_aagd :=_bdceb .B ();_gffbe :=_bdceb .C ();X :=_aebfa .Matrix [0]*_cf .Pow (_adfe ,_aebfa .Gamma [0])+_aebfa .Matrix [3]*_cf .Pow (_aagd ,_aebfa .Gamma [1])+_aebfa .Matrix [6]*_cf .Pow (_gffbe ,_aebfa .Gamma [2]);
Y :=_aebfa .Matrix [1]*_cf .Pow (_adfe ,_aebfa .Gamma [0])+_aebfa .Matrix [4]*_cf .Pow (_aagd ,_aebfa .Gamma [1])+_aebfa .Matrix [7]*_cf .Pow (_gffbe ,_aebfa .Gamma [2]);Z :=_aebfa .Matrix [2]*_cf .Pow (_adfe ,_aebfa .Gamma [0])+_aebfa .Matrix [5]*_cf .Pow (_aagd ,_aebfa .Gamma [1])+_aebfa .Matrix [8]*_cf .Pow (_gffbe ,_aebfa .Gamma [2]);
_egef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cdegg :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbecb :=0.055648*X +-0.204043*Y +1.057311*Z ;_egef =_cf .Min (_cf .Max (_egef ,0),1.0);_cdegg =_cf .Min (_cf .Max (_cdegg ,0),1.0);_cbecb =_cf .Min (_cf .Max (_cbecb ,0),1.0);
return NewPdfColorDeviceRGB (_egef ,_cdegg ,_cbecb ),nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ega .ReadSeeker )(*PdfFont ,error ){const _ffdfg =_eee .CharCode (32);const _abcee =_eee .CharCode (255);_dcdg ,_bcdfe :=_ad .ReadAll (r );if _bcdfe !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bcdfe );
return nil ,_bcdfe ;};_gcfdf ,_bcdfe :=_bcd .TtfParse (_af .NewReader (_dcdg ));if _bcdfe !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_bcdfe );
return nil ,_bcdfe ;};_egfc :=&pdfFontSimple {_ecgd :make (map[_eee .CharCode ]float64 ),fontCommon :fontCommon {_fbged :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_egfc ._fdgc =_eee .NewWinAnsiEncoder ();_egfc ._abed =_gcfdf .PostScriptName ;
_egfc .FirstChar =_aff .MakeInteger (int64 (_ffdfg ));_egfc .LastChar =_aff .MakeInteger (int64 (_abcee ));_bbdc :=1000.0/float64 (_gcfdf .UnitsPerEm );if len (_gcfdf .Widths )<=0{return nil ,_g .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gcbb :=_bbdc *float64 (_gcfdf .Widths [0]);_gddfc :=make ([]float64 ,0,_abcee -_ffdfg +1);for _gcedd :=_ffdfg ;_gcedd <=_abcee ;_gcedd ++{_cabe ,_agae :=_egfc .Encoder ().CharcodeToRune (_gcedd );if !_agae {_adg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gcedd );
_gddfc =append (_gddfc ,_gcbb );continue ;};_bggdd ,_bfac :=_gcfdf .Chars [_cabe ];if !_bfac {_adg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_gddfc =append (_gddfc ,_gcbb );continue ;
};_gdae :=_bbdc *float64 (_gcfdf .Widths [_bggdd ]);_gddfc =append (_gddfc ,_gdae );};_egfc .Widths =_aff .MakeIndirectObject (_aff .MakeArrayFromFloats (_gddfc ));if len (_gddfc )< int (_abcee -_ffdfg +1){_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_gddfc ),255-32+1);
return nil ,_aff .ErrRangeError ;};for _bdaec :=_ffdfg ;_bdaec <=_abcee ;_bdaec ++{_egfc ._ecgd [_bdaec ]=_gddfc [_bdaec -_ffdfg ];};_egfc .Encoding =_aff .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bfefg :=&PdfFontDescriptor {};
_bfefg .FontName =_aff .MakeName (_gcfdf .PostScriptName );_bfefg .Ascent =_aff .MakeFloat (_bbdc *float64 (_gcfdf .TypoAscender ));_bfefg .Descent =_aff .MakeFloat (_bbdc *float64 (_gcfdf .TypoDescender ));_bfefg .CapHeight =_aff .MakeFloat (_bbdc *float64 (_gcfdf .CapHeight ));
_bfefg .FontBBox =_aff .MakeArrayFromFloats ([]float64 {_bbdc *float64 (_gcfdf .Xmin ),_bbdc *float64 (_gcfdf .Ymin ),_bbdc *float64 (_gcfdf .Xmax ),_bbdc *float64 (_gcfdf .Ymax )});_bfefg .ItalicAngle =_aff .MakeFloat (_gcfdf .ItalicAngle );_bfefg .MissingWidth =_aff .MakeFloat (_bbdc *float64 (_gcfdf .Widths [0]));
_fgfc ,_bcdfe :=_aff .MakeStream (_dcdg ,_aff .NewFlateEncoder ());if _bcdfe !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bcdfe );
return nil ,_bcdfe ;};_fgfc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aff .MakeInteger (int64 (len (_dcdg ))));_bfefg .FontFile2 =_fgfc ;if _gcfdf .Bold {_bfefg .StemV =_aff .MakeInteger (120);}else {_bfefg .StemV =_aff .MakeInteger (70);
};_fafdb :=_gffbb ;if _gcfdf .IsFixedPitch {_fafdb |=_egde ;};if _gcfdf .ItalicAngle !=0{_fafdb |=_degcc ;};_bfefg .Flags =_aff .MakeInteger (int64 (_fafdb ));_egfc ._ggca =_bfefg ;_ggdga :=&PdfFont {_gebd :_egfc };return _ggdga ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cgd :=NewPdfAction ();_aad :=&PdfActionImportData {};_aad .PdfAction =_cgd ;_cgd .SetContext (_aad );return _aad ;};

// HasExtGState checks if ExtGState name is available.
func (_becab *PdfPage )HasExtGState (name _aff .PdfObjectName )bool {if _becab .Resources ==nil {return false ;};if _becab .Resources .ExtGState ==nil {return false ;};_cddfd ,_egabg :=_aff .TraceToDirectObject (_becab .Resources .ExtGState ).(*_aff .PdfObjectDictionary );
if !_egabg {_adg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aff .TraceToDirectObject (_becab .Resources .ExtGState ));
return false ;};_ddbcd :=_cddfd .Get (name );_deffc :=_ddbcd !=nil ;return _deffc ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_aff .PdfObject ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _aff .PdfObject ;NewWindow _aff .PdfObject ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ccgf ,_ddafa :=_db .Open (filePath );if _ddafa !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ddafa );
return nil ,_ddafa ;};defer _ccgf .Close ();return NewPdfFontFromTTF (_ccgf );};type pdfCIDFontType2 struct{fontCommon ;_eaacd *_aff .PdfIndirectObject ;_begcd _eee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_aff .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aff .PdfObject ;W _aff .PdfObject ;DW2 _aff .PdfObject ;W2 _aff .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _aff .PdfObject ;_egdcef map[_eee .CharCode ]float64 ;_ceageb float64 ;_aedcf map[rune ]int ;};func _ggceb (_bcfg _aff .PdfObject )(*PdfColorspaceICCBased ,error ){_bgee :=&PdfColorspaceICCBased {};if _gdba ,_eaaa :=_bcfg .(*_aff .PdfIndirectObject );
_eaaa {_bgee ._ecfc =_gdba ;};_bcfg =_aff .TraceToDirectObject (_bcfg );_ccbac ,_ccca :=_bcfg .(*_aff .PdfObjectArray );if !_ccca {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ccbac .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_bcfg =_aff .TraceToDirectObject (_ccbac .Get (0));_fafb ,_ccca :=_bcfg .(*_aff .PdfObjectName );if !_ccca {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fafb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bcfg =_ccbac .Get (1);
_abcbe ,_ccca :=_aff .GetStream (_bcfg );if !_ccca {_adg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_bcfg );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_agge :=_abcbe .PdfObjectDictionary ;_fdcg ,_ccca :=_agge .Get ("\u004e").(*_aff .PdfObjectInteger );
if !_ccca {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fdcg !=1&&*_fdcg !=3&&*_fdcg !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bgee .N =int (*_fdcg );if _abdfd :=_agge .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_abdfd !=nil {_aaab ,_fgaf :=NewPdfColorspaceFromPdfObject (_abdfd );if _fgaf !=nil {return nil ,_fgaf ;};_bgee .Alternate =_aaab ;};if _fegg :=_agge .Get ("\u0052\u0061\u006eg\u0065");
_fegg !=nil {_fegg =_aff .TraceToDirectObject (_fegg );_dbac ,_babf :=_fegg .(*_aff .PdfObjectArray );if !_babf {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _dbac .Len ()!=2*_bgee .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_efb ,_fcab :=_dbac .GetAsFloat64Slice ();if _fcab !=nil {return nil ,_fcab ;};_bgee .Range =_efb ;}else {_bgee .Range =make ([]float64 ,2*_bgee .N );for _bgf :=0;_bgf < _bgee .N ;_bgf ++{_bgee .Range [2*_bgf ]=0.0;_bgee .Range [2*_bgf +1]=1.0;};};if _cbeb :=_agge .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_cbeb !=nil {_cdff ,_ddef :=_cbeb .(*_aff .PdfObjectStream );if !_ddef {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bgee .Metadata =_cdff ;};_gebg ,_eeaga :=_aff .DecodeStream (_abcbe );if _eeaga !=nil {return nil ,_eeaga ;};_bgee .Data =_gebg ;_bgee ._abcbf =_abcbe ;return _bgee ,nil ;};func _begg (_fcfbf _aff .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_adg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_fcfbf .String (),_fcfbf );
_dccc :=NewPdfColorspaceSpecialPattern ();if _dgcde ,_ccage :=_fcfbf .(*_aff .PdfIndirectObject );_ccage {_dccc ._ccd =_dgcde ;};_fcfbf =_aff .TraceToDirectObject (_fcfbf );if _bbca ,_ffaa :=_fcfbf .(*_aff .PdfObjectName );_ffaa {if *_bbca !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dccc ,nil ;};_bddf ,_egbg :=_fcfbf .(*_aff .PdfObjectArray );if !_egbg {_adg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_fcfbf );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bddf .Len ()!=1&&_bddf .Len ()!=2{_adg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bddf );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_fcfbf =_bddf .Get (0);if _dfgg ,_ccfe :=_fcfbf .(*_aff .PdfObjectName );_ccfe {if *_dfgg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_adg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_dfgg );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bddf .Len ()> 1{_fcfbf =_bddf .Get (1);_fcfbf =_aff .TraceToDirectObject (_fcfbf );_afdge ,_abfg :=NewPdfColorspaceFromPdfObject (_fcfbf );if _abfg !=nil {return nil ,_abfg ;
};_dccc .UnderlyingCS =_afdge ;};_adg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dccc .UnderlyingCS );
return _dccc ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_aff .PdfObjectString ;Author *_aff .PdfObjectString ;Subject *_aff .PdfObjectString ;Keywords *_aff .PdfObjectString ;Creator *_aff .PdfObjectString ;Producer *_aff .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_aff .PdfObjectName ;_cgbc *_aff .PdfObjectDictionary ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ebced *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dag ,_afdb :=_aff .GetNumbersAsFloat (objects );
if _afdb !=nil {return nil ,_afdb ;};return _ebced .ColorFromFloats (_dag );};var _abcgc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ToPdfObject implements interface PdfModel.
func (_egcf *PdfAnnotationCaret )ToPdfObject ()_aff .PdfObject {_egcf .PdfAnnotation .ToPdfObject ();_cbfa :=_egcf ._ccfb ;_bgag :=_cbfa .PdfObject .(*_aff .PdfObjectDictionary );_egcf .PdfAnnotationMarkup .appendToPdfDictionary (_bgag );_bgag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0043\u0061\u0072e\u0074"));
_bgag .SetIfNotNil ("\u0052\u0044",_egcf .RD );_bgag .SetIfNotNil ("\u0053\u0079",_egcf .Sy );return _cbfa ;};func (_gdb *PdfReader )newPdfAnnotationLinkFromDict (_cdge *_aff .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_edgd :=PdfAnnotationLink {};
_edgd .A =_cdge .Get ("\u0041");_edgd .Dest =_cdge .Get ("\u0044\u0065\u0073\u0074");_edgd .H =_cdge .Get ("\u0048");_edgd .PA =_cdge .Get ("\u0050\u0041");_edgd .QuadPoints =_cdge .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_edgd .BS =_cdge .Get ("\u0042\u0053");
return &_edgd ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// Y returns the value of the yellow component of the color.
func (_beee *PdfColorDeviceCMYK )Y ()float64 {return _beee [2]};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_eeeb *PdfColorspaceSpecialIndexed )ToPdfObject ()_aff .PdfObject {_gdfc :=_aff .MakeArray (_aff .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_gdfc .Append (_eeeb .Base .ToPdfObject ());_gdfc .Append (_aff .MakeInteger (int64 (_eeeb .HiVal )));
_gdfc .Append (_eeeb .Lookup );if _eeeb ._efeca !=nil {_eeeb ._efeca .PdfObject =_gdfc ;return _eeeb ._efeca ;};return _gdfc ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_aff .PdfObjectInteger ;BitsPerComponent *_aff .PdfObjectInteger ;VerticesPerRow *_aff .PdfObjectInteger ;Decode *_aff .PdfObjectArray ;Function []PdfFunction ;};

// MergePageWith appends page content to source Pdf file page content.
func (_effc *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ecbf :=pageNum -1;var _ddag *PdfPage ;for _fdga ,_aded :=range _effc ._bbgg {if _fdga ==_ecbf {_ddag =_aded ;};};if _ddag ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _ddag ._fage !=nil &&_ddag ._fage .GetParser ()==_effc ._dafgd ._gaece {_ddag =_ddag .Duplicate ();_effc ._bbgg [_ecbf ]=_ddag ;};page =page .Duplicate ();_aefbgd (page );_dbcg :=_gca (_ddag );_ebf :=_gca (page );_dgfd :=make (map[_aff .PdfObjectName ]_aff .PdfObjectName );
for _efeff :=range _ebf {if _ ,_eaeg :=_dbcg [_efeff ];_eaeg {for _becg :=1;true ;_becg ++{_gaaa :=_aff .PdfObjectName (string (_efeff )+_eed .Itoa (_becg ));if _ ,_geebf :=_dbcg [_gaaa ];!_geebf {_dgfd [_efeff ]=_gaaa ;break ;};};};};_gcdc ,_cdad :=page .GetContentStreams ();
if _cdad !=nil {return _cdad ;};_egdc ,_cdad :=_ddag .GetContentStreams ();if _cdad !=nil {return _cdad ;};for _fdagdd ,_ffbd :=range _gcdc {for _eaa ,_baba :=range _dgfd {_ffbd =_ba .Replace (_ffbd ,"\u002f"+string (_eaa ),"\u002f"+string (_baba ),-1);
};_gcdc [_fdagdd ]=_ffbd ;};_egdc =append (_egdc ,_gcdc ...);if _bcgf :=_ddag .SetContentStreams (_egdc ,_aff .NewFlateEncoder ());_bcgf !=nil {return _bcgf ;};_ddag ._bbgb =append (_ddag ._bbgb ,page ._bbgb ...);if _ddag .Resources ==nil {_ddag .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_ddag .Resources .Font =_effc .mergeResources (_ddag .Resources .Font ,page .Resources .Font ,_dgfd );_ddag .Resources .XObject =_effc .mergeResources (_ddag .Resources .XObject ,page .Resources .XObject ,_dgfd );_ddag .Resources .Properties =_effc .mergeResources (_ddag .Resources .Properties ,page .Resources .Properties ,_dgfd );
if _ddag .Resources .ProcSet ==nil {_ddag .Resources .ProcSet =page .Resources .ProcSet ;};_ddag .Resources .Shading =_effc .mergeResources (_ddag .Resources .Shading ,page .Resources .Shading ,_dgfd );_ddag .Resources .ExtGState =_effc .mergeResources (_ddag .Resources .ExtGState ,page .Resources .ExtGState ,_dgfd );
};_adff ,_cdad :=_ddag .GetMediaBox ();if _cdad !=nil {return _cdad ;};_ebgdg ,_cdad :=page .GetMediaBox ();if _cdad !=nil {return _cdad ;};var _dfgd bool ;if _adff .Llx > _ebgdg .Llx {_adff .Llx =_ebgdg .Llx ;_dfgd =true ;};if _adff .Lly > _ebgdg .Lly {_adff .Lly =_ebgdg .Lly ;
_dfgd =true ;};if _adff .Urx < _ebgdg .Urx {_adff .Urx =_ebgdg .Urx ;_dfgd =true ;};if _adff .Ury < _ebgdg .Ury {_adff .Ury =_ebgdg .Ury ;_dfgd =true ;};if _dfgd {_ddag .MediaBox =_adff ;};return nil ;};func _efbb (_beca _aff .PdfObject )(*PdfFunctionType3 ,error ){_ebdbg :=&PdfFunctionType3 {};
var _gabdd *_aff .PdfObjectDictionary ;if _ddce ,_daac :=_beca .(*_aff .PdfIndirectObject );_daac {_gggfd ,_cbdfa :=_ddce .PdfObject .(*_aff .PdfObjectDictionary );if !_cbdfa {return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ebdbg ._cabf =_ddce ;_gabdd =_gggfd ;}else if _ceca ,_dcce :=_beca .(*_aff .PdfObjectDictionary );_dcce {_gabdd =_ceca ;}else {return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_addec ,_bgaba :=_aff .TraceToDirectObject (_gabdd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aff .PdfObjectArray );
if !_bgaba {_adg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _addec .Len ()!=2{_adg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_g .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dcdde ,_dbdbb :=_addec .ToFloat64Array ();
if _dbdbb !=nil {return nil ,_dbdbb ;};_ebdbg .Domain =_dcdde ;_addec ,_bgaba =_aff .TraceToDirectObject (_gabdd .Get ("\u0052\u0061\u006eg\u0065")).(*_aff .PdfObjectArray );if _bgaba {if _addec .Len ()< 0||_addec .Len ()%2!=0{return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gfede ,_ggdbb :=_addec .ToFloat64Array ();if _ggdbb !=nil {return nil ,_ggdbb ;};_ebdbg .Range =_gfede ;};_addec ,_bgaba =_aff .TraceToDirectObject (_gabdd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_aff .PdfObjectArray );if !_bgaba {_adg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ebdbg .Functions =[]PdfFunction {};
for _ ,_bdcef :=range _addec .Elements (){_baada ,_cdfb :=_fdfeg (_bdcef );if _cdfb !=nil {return nil ,_cdfb ;};_ebdbg .Functions =append (_ebdbg .Functions ,_baada );};_addec ,_bgaba =_aff .TraceToDirectObject (_gabdd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_aff .PdfObjectArray );
if !_bgaba {_adg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_eegd ,_dbdbb :=_addec .ToFloat64Array ();if _dbdbb !=nil {return nil ,_dbdbb ;};_ebdbg .Bounds =_eegd ;if len (_ebdbg .Bounds )!=len (_ebdbg .Functions )-1{_adg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ebdbg .Bounds ),len (_ebdbg .Functions ));
return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_addec ,_bgaba =_aff .TraceToDirectObject (_gabdd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aff .PdfObjectArray );if !_bgaba {_adg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_efged ,_dbdbb :=_addec .ToFloat64Array ();
if _dbdbb !=nil {return nil ,_dbdbb ;};_ebdbg .Encode =_efged ;if len (_ebdbg .Encode )!=2*len (_ebdbg .Functions ){_adg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ebdbg .Encode ),len (_ebdbg .Functions ));
return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ebdbg ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_cbcde *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _cbcde ._gaece .GetRevisionNumber ()==0{return nil ,_g .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _ddcga ,_beae :=_cbcde ._gfga [_cbcde ];_beae {return _ddcga ,nil ;};_daabd ,_agcc :=_cbcde ._gaece .GetPreviousRevisionReadSeeker ();if _agcc !=nil {return nil ,_agcc ;};_fbdbe ,_agcc :=_dffg (_daabd ,_cbcde ._edbfa ,_cbcde ._acgad ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _agcc !=nil {return nil ,_agcc ;};_cbcde ._ccbga [_cbcde ._gaece .GetRevisionNumber ()-1]=_fbdbe ;_cbcde ._gfga [_cbcde ]=_fbdbe ;_fbdbe ._gfga =_cbcde ._gfga ;return _fbdbe ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_cede *PdfPageResources )SetXObjectFormByName (keyName _aff .PdfObjectName ,xform *XObjectForm )error {_ffbgc :=xform .ToPdfObject ().(*_aff .PdfObjectStream );_aadbd :=_cede .SetXObjectByName (keyName ,_ffbgc );return _aadbd ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gf .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _f .Time ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_cefc *PdfFont )BytesToCharcodes (data []byte )[]_eee .CharCode {_adg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dege ,_cfcgac :=_cefc ._gebd .(*pdfFontType0 );_cfcgac &&_dege ._baedc !=nil {if _cdcfga ,_bffdc :=_dege .bytesToCharcodes (data );_bffdc {return _cdcfga ;};};var (_ffad =make ([]_eee .CharCode ,0,len (data )+len (data )%2);_dbfgf =_cefc .baseFields ();
);if _dbfgf ._dcad !=nil {if _gcbg ,_cggf :=_dbfgf ._dcad .BytesToCharcodes (data );_cggf {for _ ,_adbgg :=range _gcbg {_ffad =append (_ffad ,_eee .CharCode (_adbgg ));};return _ffad ;};};if _dbfgf .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _ebbb :=0;_ebbb < len (data );_ebbb +=2{_dfadg :=uint16 (data [_ebbb ])<<8|uint16 (data [_ebbb +1]);_ffad =append (_ffad ,_eee .CharCode (_dfadg ));};}else {for _ ,_abeab :=range data {_ffad =append (_ffad ,_eee .CharCode (_abeab ));
};};return _ffad ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_effe DefaultImageHandler )NewGrayImageFromGoImage (goimg _cg .Image )(*Image ,error ){_geebg :=goimg .Bounds ();_fecfd :=&Image {Width :int64 (_geebg .Dx ()),Height :int64 (_geebg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _debfc :=goimg .(type ){case *_cg .Gray :if len (_debfc .Pix )!=_geebg .Dx ()*_geebg .Dy (){_fgbfc ,_gcbga :=_gd .GrayConverter .Convert (goimg );
if _gcbga !=nil {return nil ,_gcbga ;};_fecfd .Data =_fgbfc .Pix ();}else {_fecfd .Data =_debfc .Pix ;};case *_cg .Gray16 :_fecfd .BitsPerComponent =16;if len (_debfc .Pix )!=_geebg .Dx ()*_geebg .Dy ()*2{_bgbd ,_dcbgg :=_gd .Gray16Converter .Convert (goimg );
if _dcbgg !=nil {return nil ,_dcbgg ;};_fecfd .Data =_bgbd .Pix ();}else {_fecfd .Data =_debfc .Pix ;};case _gd .Image :_fcec :=_debfc .Base ();if _fcec .ColorComponents ==1{_fecfd .BitsPerComponent =int64 (_fcec .BitsPerComponent );_fecfd .Data =_fcec .Data ;
return _fecfd ,nil ;};_dccgf ,_egeg :=_gd .GrayConverter .Convert (goimg );if _egeg !=nil {return nil ,_egeg ;};_fecfd .Data =_dccgf .Pix ();default:_dbdcc ,_cagcf :=_gd .GrayConverter .Convert (goimg );if _cagcf !=nil {return nil ,_cagcf ;};_fecfd .Data =_dbdcc .Pix ();
};return _fecfd ,nil ;};func (_ffbb *PdfAnnotation )String ()string {_add :="";_dcgb ,_cdc :=_ffbb .ToPdfObject ().(*_aff .PdfIndirectObject );if _cdc {_add =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ffbb ._eefa ,_dcgb .PdfObject .String ());
};return _add ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_bfb :=NewPdfAnnotation ();_dgg :=&PdfAnnotationLine {};_dgg .PdfAnnotation =_bfb ;_dgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfb .SetContext (_dgg );return _dgg ;};func (_adfec *Image )resampleLowBits (_eabdb []uint32 ){_ebeadg :=_gd .BytesPerLine (int (_adfec .Width ),int (_adfec .BitsPerComponent ),_adfec .ColorComponents );
_cgfd :=make ([]byte ,_adfec .ColorComponents *_ebeadg *int (_adfec .Height ));_decc :=int (_adfec .BitsPerComponent )*_adfec .ColorComponents *int (_adfec .Width );_edcd :=uint8 (8);var (_abcfa ,_dfcba int ;_abbb uint32 ;);for _addcg :=0;_addcg < int (_adfec .Height );
_addcg ++{_dfcba =_addcg *_ebeadg ;for _deba :=0;_deba < _decc ;_deba ++{_abbb =_eabdb [_abcfa ];_edcd -=uint8 (_adfec .BitsPerComponent );_cgfd [_dfcba ]|=byte (_abbb )<<_edcd ;if _edcd ==0{_edcd =8;_dfcba ++;};_abcfa ++;};};_adfec .Data =_cgfd ;};func (_decab *PdfWriter )checkPendingObjects (){for _ddgcf ,_feabbg :=range _decab ._gbfdc {if !_decab .hasObject (_ddgcf ){_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_ddgcf ,_ddgcf ,_ddgcf );
for _ ,_aagfa :=range _feabbg {for _ ,_faabad :=range _aagfa .Keys (){_gfcdd :=_aagfa .Get (_faabad );if _gfcdd ==_ddgcf {_adg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_aagfa .Set (_faabad ,_aff .MakeNull ());break ;};};};};};};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_degec *Image )GetParamsDict ()*_aff .PdfObjectDictionary {_aggaa :=_aff .MakeDict ();_aggaa .Set ("\u0057\u0069\u0064t\u0068",_aff .MakeInteger (_degec .Width ));_aggaa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aff .MakeInteger (_degec .Height ));
_aggaa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aff .MakeInteger (int64 (_degec .ColorComponents )));_aggaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aff .MakeInteger (_degec .BitsPerComponent ));
return _aggaa ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcdd *PdfColorspaceSpecialSeparation )ToPdfObject ()_aff .PdfObject {_dfed :=_aff .MakeArray (_aff .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dfed .Append (_dcdd .ColorantName );_dfed .Append (_dcdd .AlternateSpace .ToPdfObject ());
_dfed .Append (_dcdd .TintTransform .ToPdfObject ());if _dcdd ._dede !=nil {_dcdd ._dede .PdfObject =_dfed ;return _dcdd ._dede ;};return _dfed ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_bgef *PdfField )IsTerminal ()bool {return len (_bgef .Kids )==0};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_adcf *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _adcf .UnderlyingCS ==nil {return nil ,_g .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _adcf .UnderlyingCS .ColorFromFloats (vals );};func _eceg (_edgf *_aff .PdfObjectDictionary )(*PdfFieldChoice ,error ){_gddgd :=&PdfFieldChoice {};_gddgd .Opt ,_ =_aff .GetArray (_edgf .Get ("\u004f\u0070\u0074"));_gddgd .TI ,_ =_aff .GetInt (_edgf .Get ("\u0054\u0049"));
_gddgd .I ,_ =_aff .GetArray (_edgf .Get ("\u0049"));return _gddgd ,nil ;};func (_ebceb *PdfField )inherit (_begb func (*PdfField )bool )(bool ,error ){_ffbg :=map[*PdfField ]bool {};_defe :=false ;_dabe :=_ebceb ;for _dabe !=nil {if _ ,_ccff :=_ffbg [_dabe ];
_ccff {return false ,_g .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cdab :=_begb (_dabe );if _cdab {_defe =true ;break ;};_ffbg [_dabe ]=true ;_dabe =_dabe .Parent ;};return _defe ,nil ;
};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ebg :=NewPdfAction ();_ddb :=&PdfActionSubmitForm {};_ddb .PdfAction =_ebg ;_ebg .SetContext (_ddb );return _ddb ;};type pdfFont interface{_bcd .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_aff .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_dddca *PdfTransformParamsDocMDP )ToPdfObject ()_aff .PdfObject {_egbgc :=_aff .MakeDict ();_egbgc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dddca .Type );_egbgc .SetIfNotNil ("\u0056",_dddca .V );_egbgc .SetIfNotNil ("\u0050",_dddca .P );return _egbgc ;
};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_afb :=NewPdfAnnotation ();_egg :=&PdfAnnotationPolygon {};_egg .PdfAnnotation =_afb ;_egg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afb .SetContext (_egg );return _egg ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_addee *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gfa []float64 ;for _cfcb :=0;_cfcb < _addee .GetNumComponents ();_cfcb ++{_gfa =append (_gfa ,0.0,1.0);};return _gfa ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_caea *PdfPage )Size ()(float64 ,float64 ,error ){_cgbcgd ,_ccbacd :=_caea .GetMediaBox ();if _ccbacd !=nil {return 0,0,_ccbacd ;};_edebg ,_ggff :=_cgbcgd .Width (),_cgbcgd .Height ();_agfbe ,_ccbacd :=_caea .GetRotate ();if _ccbacd !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_ccbacd .Error ());
};if _gdcc :=_agfbe ;_gdcc %360!=0&&_gdcc %90==0{if _cddaa :=(360+_gdcc %360)%360;_cddaa ==90||_cddaa ==270{_edebg ,_ggff =_ggff ,_edebg ;};};return _edebg ,_ggff ,nil ;};func (_ffag *PdfReader )newPdfAnnotationUnderlineFromDict (_dgc *_aff .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fdd :=PdfAnnotationUnderline {};
_ced ,_dgce :=_ffag .newPdfAnnotationMarkupFromDict (_dgc );if _dgce !=nil {return nil ,_dgce ;};_fdd .PdfAnnotationMarkup =_ced ;_fdd .QuadPoints =_dgc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdd ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_dbea *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=_dbea .GetNumComponents (){return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adbgf ,_bbbad :=_aff .GetNumbersAsFloat (objects );
if _bbbad !=nil {return nil ,_bbbad ;};return _dbea .ColorFromFloats (_adbgf );};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dagc *PdfField )ToPdfObject ()_aff .PdfObject {_dbdc :=_dagc ._dfbfd ;_eaag :=_dbdc .PdfObject .(*_aff .PdfObjectDictionary );_dgegb :=_aff .MakeArray ();for _ ,_fcfg :=range _dagc .Kids {_dgegb .Append (_fcfg .ToPdfObject ());};for _ ,_ebcf :=range _dagc .Annotations {if _ebcf ._ccfb !=_dagc ._dfbfd {_dgegb .Append (_ebcf .GetContext ().ToPdfObject ());
};};if _dagc .Parent !=nil {_eaag .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dagc .Parent .GetContainingPdfObject ());};if _dgegb .Len ()> 0{_eaag .Set ("\u004b\u0069\u0064\u0073",_dgegb );};_eaag .SetIfNotNil ("\u0046\u0054",_dagc .FT );_eaag .SetIfNotNil ("\u0054",_dagc .T );
_eaag .SetIfNotNil ("\u0054\u0055",_dagc .TU );_eaag .SetIfNotNil ("\u0054\u004d",_dagc .TM );_eaag .SetIfNotNil ("\u0046\u0066",_dagc .Ff );_eaag .SetIfNotNil ("\u0056",_dagc .V );_eaag .SetIfNotNil ("\u0044\u0056",_dagc .DV );_eaag .SetIfNotNil ("\u0041\u0041",_dagc .AA );
if _dagc .VariableText !=nil {_eaag .SetIfNotNil ("\u0044\u0041",_dagc .VariableText .DA );_eaag .SetIfNotNil ("\u0051",_dagc .VariableText .Q );_eaag .SetIfNotNil ("\u0044\u0053",_dagc .VariableText .DS );_eaag .SetIfNotNil ("\u0052\u0056",_dagc .VariableText .RV );
};return _dbdc ;};

// GetXObjectByName gets XObject by name.
func (_eegdgd *PdfPage )GetXObjectByName (name _aff .PdfObjectName )(_aff .PdfObject ,bool ){_febgg ,_agfdg :=_eegdgd .Resources .XObject .(*_aff .PdfObjectDictionary );if !_agfdg {return nil ,false ;};if _cecba :=_febgg .Get (name );_cecba !=nil {return _cecba ,true ;
};return nil ,false ;};func _bbcf (_ecbc *_aff .PdfObjectDictionary ,_edefe *fontCommon )(*pdfFontType0 ,error ){_facfg ,_fedafc :=_aff .GetArray (_ecbc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_fedafc {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_edefe );
return nil ,_aff .ErrRangeError ;};if _facfg .Len ()!=1{_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_facfg .Len ());
return nil ,_aff .ErrRangeError ;};_egaad ,_dbgf :=_bfdbcc (_facfg .Get (0),false );if _dbgf !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_dbgf ,_edefe );
return nil ,_dbgf ;};_ffcfeg :=_fgdf (_edefe );_ffcfeg .DescendantFont =_egaad ;_ebdgf ,_fedafc :=_aff .GetNameVal (_ecbc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fedafc {if _ebdgf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_ebdgf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_ffcfeg ._faggb =_eee .NewIdentityTextEncoder (_ebdgf );
}else if _da .IsPredefinedCMap (_ebdgf ){_ffcfeg ._baedc ,_dbgf =_da .LoadPredefinedCMap (_ebdgf );if _dbgf !=nil {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ebdgf ,_dbgf );
};}else {_adg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_ebdgf );};};if _becfc :=_egaad .baseFields ()._dcad ;_becfc !=nil {if _ccbb :=_becfc .Name ();_ccbb =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ccbb =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ccbb =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ccbb =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_ffcfeg ._faggb =_eee .NewCMapEncoder (_ebdgf ,_ffcfeg ._baedc ,_becfc );
};};return _ffcfeg ,nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fbagb FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fbagb .Mask ()|fl .Mask ())};func _geffg (_gffcg _aff .PdfObject )(*PdfFunctionType2 ,error ){_ggbe :=&PdfFunctionType2 {};var _cbdfg *_aff .PdfObjectDictionary ;if _beaab ,_ebcc :=_gffcg .(*_aff .PdfIndirectObject );
_ebcc {_daaad ,_edbb :=_beaab .PdfObject .(*_aff .PdfObjectDictionary );if !_edbb {return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggbe ._ceeae =_beaab ;_cbdfg =_daaad ;}else if _ccde ,_baacb :=_gffcg .(*_aff .PdfObjectDictionary );
_baacb {_cbdfg =_ccde ;}else {return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cbdfg .String ());_acec ,_accgb :=_aff .TraceToDirectObject (_cbdfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aff .PdfObjectArray );
if !_accgb {_adg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _acec .Len ()< 0||_acec .Len ()%2!=0{_adg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_g .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ggefd ,_fgbcc :=_acec .ToFloat64Array ();if _fgbcc !=nil {return nil ,_fgbcc ;};_ggbe .Domain =_ggefd ;_acec ,_accgb =_aff .TraceToDirectObject (_cbdfg .Get ("\u0052\u0061\u006eg\u0065")).(*_aff .PdfObjectArray );if _accgb {if _acec .Len ()< 0||_acec .Len ()%2!=0{return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dega ,_caegc :=_acec .ToFloat64Array ();if _caegc !=nil {return nil ,_caegc ;};_ggbe .Range =_dega ;};_acec ,_accgb =_aff .TraceToDirectObject (_cbdfg .Get ("\u0043\u0030")).(*_aff .PdfObjectArray );if _accgb {_ecffa ,_bdgad :=_acec .ToFloat64Array ();
if _bdgad !=nil {return nil ,_bdgad ;};_ggbe .C0 =_ecffa ;};_acec ,_accgb =_aff .TraceToDirectObject (_cbdfg .Get ("\u0043\u0031")).(*_aff .PdfObjectArray );if _accgb {_ccedc ,_aceg :=_acec .ToFloat64Array ();if _aceg !=nil {return nil ,_aceg ;};_ggbe .C1 =_ccedc ;
};if len (_ggbe .C0 )!=len (_ggbe .C1 ){_adg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_aff .ErrRangeError ;};N ,_fgbcc :=_aff .GetNumberAsFloat (_aff .TraceToDirectObject (_cbdfg .Get ("\u004e")));
if _fgbcc !=nil {_adg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cbdfg .String ());return nil ,_fgbcc ;};_ggbe .N =N ;
return _ggbe ,nil ;};func (_daaca *PdfShading )getShadingDict ()(*_aff .PdfObjectDictionary ,error ){_begfd :=_daaca ._bdacg ;if _dedde ,_cgedgf :=_begfd .(*_aff .PdfIndirectObject );_cgedgf {_adbgcf ,_cdfcf :=_dedde .PdfObject .(*_aff .PdfObjectDictionary );
if !_cdfcf {return nil ,_aff .ErrTypeError ;};return _adbgcf ,nil ;}else if _gfgcfd ,_cfcaf :=_begfd .(*_aff .PdfObjectStream );_cfcaf {return _gfgcfd .PdfObjectDictionary ,nil ;}else if _faedd ,_facec :=_begfd .(*_aff .PdfObjectDictionary );_facec {return _faedd ,nil ;
}else {_adg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_aff .ErrTypeError ;};};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_dfad *_aff .PdfIndirectObject ;Certs []*_aff .PdfObjectStream ;OCSPs []*_aff .PdfObjectStream ;CRLs []*_aff .PdfObjectStream ;VRI map[string ]*VRI ;_eddd map[string ]*_aff .PdfObjectStream ;_eaga map[string ]*_aff .PdfObjectStream ;_abba map[string ]*_aff .PdfObjectStream ;
};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_aadb :=NewPdfAnnotation ();_bbge :=&PdfAnnotationTrapNet {};_bbge .PdfAnnotation =_aadb ;_aadb .SetContext (_bbge );return _bbge ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_cddag *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _dbcba []*PdfField ;if _cddag .AcroForm !=nil {_dbcba =_cddag .AcroForm .AllFields ();};_aagcb :=make (map[*PdfField ]struct{},len (_dbcba ));for _ ,_fbfc :=range _dbcba {_aagcb [_fbfc ]=struct{}{};
};for _ ,_bcce :=range _cddag .PageList {_effb ,_feafe :=_bcce .GetAnnotations ();if _feafe !=nil {return false ,_feafe ;};for _ ,_fdaba :=range _effb {_degbc ,_cdbcb :=_fdaba .GetContext ().(*PdfAnnotationWidget );if !_cdbcb {continue ;};_cbgbf :=_degbc .Field ();
if _cbgbf ==nil {return true ,nil ;};if _ ,_fdgd :=_aagcb [_cbgbf ];!_fdgd {return true ,nil ;};};};return false ,nil ;};

// AddCerts adds certificates to DSS.
func (_daga *DSS )AddCerts (certs [][]byte )([]*_aff .PdfObjectStream ,error ){return _daga .add (&_daga .Certs ,_daga ._eddd ,certs );};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_aff .PdfObjectArray ;ExtGState _aff .PdfObject ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_gdaga *PdfPageResources )SetColorspaceByName (keyName _aff .PdfObjectName ,cs PdfColorspace )error {_dgde ,_bfcad :=_gdaga .GetColorspaces ();if _bfcad !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bfcad );
return _bfcad ;};if _dgde ==nil {_dgde =NewPdfPageResourcesColorspaces ();_gdaga .SetColorSpace (_dgde );};_dgde .Set (keyName ,cs );return nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_agddb *PdfPage )GetContentStreams ()([]string ,error ){_cbgff :=_agddb .GetContentStreamObjs ();var _cbad []string ;for _ ,_fcbbg :=range _cbgff {_ddcae ,_fgadg :=_cefcd (_fcbbg );if _fgadg !=nil {return nil ,_fgadg ;};_cbad =append (_cbad ,_ddcae );
};return _cbad ,nil ;};func (_ffec *DSS )add (_dgdb *[]*_aff .PdfObjectStream ,_dbdb map[string ]*_aff .PdfObjectStream ,_cgac [][]byte )([]*_aff .PdfObjectStream ,error ){_fgea :=make ([]*_aff .PdfObjectStream ,0,len (_cgac ));for _ ,_ebead :=range _cgac {_dcef ,_gdbb :=_cdfa (_ebead );
if _gdbb !=nil {return nil ,_gdbb ;};_gcgag ,_badg :=_dbdb [string (_dcef )];if !_badg {_gcgag ,_gdbb =_aff .MakeStream (_ebead ,_aff .NewRawEncoder ());if _gdbb !=nil {return nil ,_gdbb ;};_dbdb [string (_dcef )]=_gcgag ;*_dgdb =append (*_dgdb ,_gcgag );
};_fgea =append (_fgea ,_gcgag );};return _fgea ,nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_addg *DSS )AddOCSPs (ocsps [][]byte )([]*_aff .PdfObjectStream ,error ){return _addg .add (&_addg .OCSPs ,_addg ._eaga ,ocsps );};

// Initialize initializes the PdfSignature.
func (_cfbbf *PdfSignature )Initialize ()error {if _cfbbf .Handler ==nil {return _g .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _cfbbf .Handler .InitSignature (_cfbbf );};

// ToPdfObject implements interface PdfModel.
func (_acfbf *PdfFilespec )ToPdfObject ()_aff .PdfObject {_dbde :=_acfbf .getDict ();_dbde .Clear ();_dbde .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_dbde .SetIfNotNil ("\u0046\u0053",_acfbf .FS );
_dbde .SetIfNotNil ("\u0046",_acfbf .F );_dbde .SetIfNotNil ("\u0055\u0046",_acfbf .UF );_dbde .SetIfNotNil ("\u0044\u004f\u0053",_acfbf .DOS );_dbde .SetIfNotNil ("\u004d\u0061\u0063",_acfbf .Mac );_dbde .SetIfNotNil ("\u0055\u006e\u0069\u0078",_acfbf .Unix );
_dbde .SetIfNotNil ("\u0049\u0044",_acfbf .ID );_dbde .SetIfNotNil ("\u0056",_acfbf .V );_dbde .SetIfNotNil ("\u0045\u0046",_acfbf .EF );_dbde .SetIfNotNil ("\u0052\u0046",_acfbf .RF );_dbde .SetIfNotNil ("\u0044\u0065\u0073\u0063",_acfbf .Desc );_dbde .SetIfNotNil ("\u0043\u0049",_acfbf .CI );
return _acfbf ._dfefa ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aff .PdfObject ;LE _aff .PdfObject ;BS _aff .PdfObject ;IC _aff .PdfObject ;BE _aff .PdfObject ;IT _aff .PdfObject ;Measure _aff .PdfObject ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_gebea :_aff .MakeDict (),ColorComponents :colorComponents };
};func _fcage (_begbe string )map[string ]string {_cdbgdd :=_cgcf .Split (_begbe ,-1);_ccebg :=map[string ]string {};for _ ,_cfdc :=range _cdbgdd {_ebcd :=_ggge .FindStringSubmatch (_cfdc );if _ebcd ==nil {continue ;};_eege ,_ccdfc :=_ebcd [1],_ebcd [2];
_ccebg [_eege ]=_ccdfc ;};return _ccebg ;};

// ToPdfObject implements interface PdfModel.
func (_edcg *PdfAnnotationCircle )ToPdfObject ()_aff .PdfObject {_edcg .PdfAnnotation .ToPdfObject ();_ggg :=_edcg ._ccfb ;_bge :=_ggg .PdfObject .(*_aff .PdfObjectDictionary );_edcg .PdfAnnotationMarkup .appendToPdfDictionary (_bge );_bge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_bge .SetIfNotNil ("\u0042\u0053",_edcg .BS );_bge .SetIfNotNil ("\u0049\u0043",_edcg .IC );_bge .SetIfNotNil ("\u0042\u0045",_edcg .BE );_bge .SetIfNotNil ("\u0052\u0044",_edcg .RD );return _ggg ;};func (_gcff *pdfFontSimple )addEncoding ()error {var (_bbbd string ;
_aaede map[_eee .CharCode ]_eee .GlyphName ;_abeae _eee .SimpleEncoder ;);if _gcff .Encoder ()!=nil {_cddgf ,_dfaad :=_gcff .Encoder ().(_eee .SimpleEncoder );if _dfaad &&_cddgf !=nil {_bbbd =_cddgf .BaseName ();};};if _gcff .Encoding !=nil {_dfbfdg ,_daae ,_adaa :=_gcff .getFontEncoding ();
if _adaa !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gcff ._abed ,_gcff ._fbged ,_gcff .Encoding ,_gcff .Encoding ,_adaa );
return _adaa ;};if _dfbfdg !=""{_bbbd =_dfbfdg ;};_aaede =_daae ;_abeae ,_adaa =_eee .NewSimpleTextEncoder (_bbbd ,_aaede );if _adaa !=nil {return _adaa ;};};if _abeae ==nil {_fbcb :=_gcff ._ggca ;if _fbcb !=nil {switch _gcff ._fbged {case "\u0054\u0079\u0070e\u0031":if _fbcb .fontFile !=nil &&_fbcb .fontFile ._bgbca !=nil {_adg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_abeae =_fbcb .fontFile ._bgbca ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fbcb ._ddffd !=nil {_adg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_agaga ,_cagab :=_fbcb ._ddffd .MakeEncoder ();
if _cagab ==nil {_abeae =_agaga ;};if _gcff ._dcad ==nil {_gcff ._dcad =_fbcb ._ddffd .MakeToUnicode ();};};};};};if _abeae !=nil {if _aaede !=nil {_adg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aaede ,_gcff .baseFields ());
_abeae =_eee .ApplyDifferences (_abeae ,_aaede );};_gcff .SetEncoder (_abeae );};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bgbf *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgec :=vals [0];if _cgec < 0.0||_cgec > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cgec );
return nil ,ErrColorOutOfRange ;};_gffbg :=vals [1];if _gffbg < 0.0||_gffbg > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cgec );return nil ,ErrColorOutOfRange ;
};_gadae :=vals [2];if _gadae < 0.0||_gadae > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cgec );return nil ,ErrColorOutOfRange ;};_dac :=NewPdfColorDeviceRGB (_cgec ,_gffbg ,_gadae );
return _dac ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cabf *_aff .PdfIndirectObject ;};

// String returns a string representation of the field.
func (_abfcd *PdfField )String ()string {if _deda ,_gegfd :=_abfcd .ToPdfObject ().(*_aff .PdfIndirectObject );_gegfd {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_abfcd ._gaecf ,_deda .PdfObject .String ());};return "";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_degcf *PdfShadingType7 )ToPdfObject ()_aff .PdfObject {_degcf .PdfShading .ToPdfObject ();_ffbbe ,_adeb :=_degcf .getShadingDict ();if _adeb !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _degcf .BitsPerCoordinate !=nil {_ffbbe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_degcf .BitsPerCoordinate );};if _degcf .BitsPerComponent !=nil {_ffbbe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_degcf .BitsPerComponent );
};if _degcf .BitsPerFlag !=nil {_ffbbe .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_degcf .BitsPerFlag );};if _degcf .Decode !=nil {_ffbbe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_degcf .Decode );};if _degcf .Function !=nil {if len (_degcf .Function )==1{_ffbbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_degcf .Function [0].ToPdfObject ());
}else {_ecdga :=_aff .MakeArray ();for _ ,_cceff :=range _degcf .Function {_ecdga .Append (_cceff .ToPdfObject ());};_ffbbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecdga );};};return _degcf ._bdacg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dfbdgg pdfFontType3 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){_efdg :=_dfbdgg .Encoder ();if _efdg ==nil {_adg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dfbdgg );
return _bcd .CharMetrics {},false ;};_gcce ,_daag :=_efdg .RuneToCharcode (r );if !_daag {if r !=' '{_adg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dfbdgg );
};return _bcd .CharMetrics {},false ;};_baccf ,_bafec :=_dfbdgg .GetCharMetrics (_gcce );return _baccf ,_bafec ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ega .ReadSeeker )(*PdfReader ,error ){const _caad ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dffg (rs ,&ReaderOpts {LazyLoad :true },false ,_caad );
};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _aff .PdfObject ;Name _aff .PdfObject ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};var _cafgd =false ;

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_aefe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_aff .PdfObject {_gafg :=_aff .MakeDict ();if _aefe .Subtype !=nil {_gafg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aefe .Subtype );};_gafg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_aefe .Colorants );
_gafg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_aefe .Process );_gafg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_aefe .MixingHints );if _aefe ._ecgec !=nil {_aefe ._ecgec .PdfObject =_gafg ;return _aefe ._ecgec ;
};return _gafg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_aff .PdfObjectStream )(*XObjectForm ,error ){_dfeg :=&XObjectForm {};_dfeg ._fddef =stream ;_fbgeda :=*(stream .PdfObjectDictionary );_accagg ,_caff :=_aff .NewEncoderFromStream (stream );if _caff !=nil {return nil ,_caff ;
};_dfeg .Filter =_accagg ;if _aefab :=_fbgeda .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_aefab !=nil {_egaea ,_ccdee :=_aefab .(*_aff .PdfObjectName );if !_ccdee {return nil ,_g .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_egaea !="\u0046\u006f\u0072\u006d"{_adg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_g .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _adagad :=_fbgeda .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_adagad !=nil {_dfeg .FormType =_adagad ;};if _bfafe :=_fbgeda .Get ("\u0042\u0042\u006f\u0078");_bfafe !=nil {_dfeg .BBox =_bfafe ;};if _bedgdb :=_fbgeda .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bedgdb !=nil {_dfeg .Matrix =_bedgdb ;};if _eccd :=_fbgeda .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eccd !=nil {_eccd =_aff .TraceToDirectObject (_eccd );_agfdf ,_abcdc :=_eccd .(*_aff .PdfObjectDictionary );if !_abcdc {_adg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_aff .ErrTypeError ;};_ffacfd ,_gfeab :=NewPdfPageResourcesFromDict (_agfdf );if _gfeab !=nil {_adg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_gfeab ;};_dfeg .Resources =_ffacfd ;_adg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_dfeg .Resources );};_dfeg .Group =_fbgeda .Get ("\u0047\u0072\u006fu\u0070");
_dfeg .Ref =_fbgeda .Get ("\u0052\u0065\u0066");_dfeg .MetaData =_fbgeda .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_dfeg .PieceInfo =_fbgeda .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dfeg .LastModified =_fbgeda .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_dfeg .StructParent =_fbgeda .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dfeg .StructParents =_fbgeda .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_dfeg .OPI =_fbgeda .Get ("\u004f\u0050\u0049");
_dfeg .OC =_fbgeda .Get ("\u004f\u0043");_dfeg .Name =_fbgeda .Get ("\u004e\u0061\u006d\u0065");_dfeg .Stream =stream .Stream ;return _dfeg ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_aff .PdfObjectInteger ;TilingType *_aff .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_aff .PdfObjectFloat ;YStep *_aff .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_aff .PdfObjectArray ;};


// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ged :=&PdfAnnotation {};_ged ._ccfb =_aff .MakeIndirectObject (_aff .MakeDict ());return _ged ;};func _gface (_fadde *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_fadde }};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cfcac *XObjectForm )SetContentStream (content []byte ,encoder _aff .StreamEncoder )error {_bbfgf :=content ;if encoder ==nil {if _cfcac .Filter !=nil {encoder =_cfcac .Filter ;}else {encoder =_aff .NewRawEncoder ();};};_eadfa ,_cbfg :=encoder .EncodeBytes (_bbfgf );
if _cbfg !=nil {return _cbfg ;};_bbfgf =_eadfa ;_cfcac .Stream =_bbfgf ;_cfcac .Filter =encoder ;return nil ;};func (_bbab fontCommon )coreString ()string {_gaaac :="";if _bbab ._ggca !=nil {_gaaac =_bbab ._ggca .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bbab ._fbged ,_bbab ._abed ,_bbab ._edebf ,_bbab ._acfg ,_bbab ._ccbfg !=nil ,_bbab .fontFlags (),_gaaac );
};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _aff .PdfObject )(*PdfInfo ,error ){var _dccg PdfInfo ;_egaag ,_ddff :=obj .(*_aff .PdfObjectDictionary );if !_ddff {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_cddc :=range _egaag .Keys (){switch _cddc {case "\u0054\u0069\u0074l\u0065":_dccg .Title ,_ =_aff .GetString (_egaag .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_dccg .Author ,_ =_aff .GetString (_egaag .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_dccg .Subject ,_ =_aff .GetString (_egaag .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_dccg .Keywords ,_ =_aff .GetString (_egaag .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_dccg .Creator ,_ =_aff .GetString (_egaag .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_dccg .Producer ,_ =_aff .GetString (_egaag .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_dccg .Trapped ,_ =_aff .GetName (_egaag .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _gecf ,_fbbdfe :=_aff .GetString (_egaag .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_fbbdfe &&_gecf .String ()!=""{_bede ,_aedg :=NewPdfDate (_gecf .String ());if _aedg !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_aedg );
};_dccg .CreationDate =&_bede ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _fedaf ,_bfddf :=_aff .GetString (_egaag .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bfddf &&_fedaf .String ()!=""{_abeec ,_gaad :=NewPdfDate (_fedaf .String ());if _gaad !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_gaad );
};_dccg .ModifiedDate =&_abeec ;};default:_dbcff ,_ :=_aff .GetString (_egaag .Get (_cddc ));if _dccg ._cgbc ==nil {_dccg ._cgbc =_aff .MakeDict ();};_dccg ._cgbc .Set (_cddc ,_dbcff );};};return &_dccg ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_dded *PdfPageResources )HasExtGState (keyName _aff .PdfObjectName )bool {_ ,_agfbeg :=_dded .GetFontByName (keyName );return _agfbeg ;};func (_ffga *PdfReader )newPdfActionResetFormFromDict (_dfb *_aff .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dfb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dfb .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _aff .PdfObject ;IsMap _aff .PdfObject ;};var (_aebda _b .Mutex ;_gabfb ="";_bebcb _f .Time ;_gddfe ="";_bbbade ="";_ffbbd _f .Time ;_aaaab ="";_cacc ="";_eddc ="";);

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_eddg *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_fgeab *PdfWriter )writeOutputIntents ()error {if len (_fgeab ._bfedd )==0{return nil ;};_degcd :=make ([]_aff .PdfObject ,len (_fgeab ._bfedd ));
for _befcb ,_eebef :=range _fgeab ._bfedd {_gddfb :=_eebef .ToPdfObject ();_degcd [_befcb ]=_aff .MakeIndirectObject (_gddfb );};_febgc :=_aff .MakeIndirectObject (_aff .MakeArray (_degcd ...));_fgeab ._cdccb .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_febgc );
if _bdfbf :=_fgeab .addObjects (_febgc );_bdfbf !=nil {return _bdfbf ;};return nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_adad *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_baea ,_gegc :=color .(*PdfColorDeviceGray );if !_gegc {_adg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_baea ),float64 (*_baea ),float64 (*_baea )),nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bccfg *_aff .PdfIndirectObject ;};func (_debc Image )getBase ()_gd .ImageBase {return _gd .NewImageBase (int (_debc .Width ),int (_debc .Height ),int (_debc .BitsPerComponent ),_debc .ColorComponents ,_debc .Data ,_debc ._becb ,_debc ._edgef );
};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bfddd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_eefe *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cgda :=_eefe ._ggca ;_cgda !=nil {return _cgda ;};return _eefe ._adcc ;
};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fgge *PdfPattern )GetContainingPdfObject ()_aff .PdfObject {return _fgge ._cfegc };

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _f .Time ){_aebda .Lock ();defer _aebda .Unlock ();_bebcb =creationDate ;};

// SetAnnotations sets the annotations list.
func (_ddceb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_ddceb ._bbgb =annotations };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func _cbdga (_gbeaa _aff .PdfObject )[]*_aff .PdfObjectStream {if _gbeaa ==nil {return nil ;};_abgfec ,_eaaccg :=_aff .GetArray (_gbeaa );if !_eaaccg ||_abgfec .Len ()==0{return nil ;};_ebdbc :=make ([]*_aff .PdfObjectStream ,0,_abgfec .Len ());
for _ ,_edecb :=range _abgfec .Elements (){if _cdceb ,_feea :=_aff .GetStream (_edecb );_feea {_ebdbc =append (_ebdbc ,_cdceb );};};return _ebdbc ;};var (CourierName =_bcd .CourierName ;CourierBoldName =_bcd .CourierBoldName ;CourierObliqueName =_bcd .CourierObliqueName ;
CourierBoldObliqueName =_bcd .CourierBoldObliqueName ;HelveticaName =_bcd .HelveticaName ;HelveticaBoldName =_bcd .HelveticaBoldName ;HelveticaObliqueName =_bcd .HelveticaObliqueName ;HelveticaBoldObliqueName =_bcd .HelveticaBoldObliqueName ;SymbolName =_bcd .SymbolName ;
ZapfDingbatsName =_bcd .ZapfDingbatsName ;TimesRomanName =_bcd .TimesRomanName ;TimesBoldName =_bcd .TimesBoldName ;TimesItalicName =_bcd .TimesItalicName ;TimesBoldItalicName =_bcd .TimesBoldItalicName ;);func (_agfda *PdfFunctionType0 )processSamples ()error {_dfedg :=_aae .ResampleBytes (_agfda ._aggcg ,_agfda .BitsPerSample );
_agfda ._bfcae =_dfedg ;return nil ;};func _gdbebd (_ggdbe *_aff .PdfObjectDictionary ,_bcggb *fontCommon )(*pdfFontType3 ,error ){_dafa :=_gface (_bcggb );_bcge :=_ggdbe .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bcge ==nil {_bcge =_aff .MakeInteger (0);
};_dafa .FirstChar =_bcge ;_eefef ,_cdfcd :=_aff .GetIntVal (_bcge );if !_cdfcd {_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bcge );
return nil ,_aff .ErrTypeError ;};_efcf :=_eee .CharCode (_eefef );_bcge =_ggdbe .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bcge ==nil {_bcge =_aff .MakeInteger (255);};_dafa .LastChar =_bcge ;_eefef ,_cdfcd =_aff .GetIntVal (_bcge );
if !_cdfcd {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bcge );return nil ,_aff .ErrTypeError ;
};_ccgcd :=_eee .CharCode (_eefef );_bcge =_ggdbe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bcge !=nil {_dafa .Resources =_bcge ;};_bcge =_ggdbe .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bcge ==nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bcge );
return nil ,_aff .ErrNotSupported ;};_dafa .CharProcs =_bcge ;_bcge =_ggdbe .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bcge ==nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bcge );
return nil ,_aff .ErrNotSupported ;};_dafa .FontMatrix =_bcge ;_dafa ._bbef =make (map[_eee .CharCode ]float64 );_bcge =_ggdbe .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bcge !=nil {_dafa .Widths =_bcge ;_aeef ,_gafc :=_aff .GetArray (_bcge );if !_gafc {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bcge );
return nil ,_aff .ErrTypeError ;};_eeeab ,_gggbf :=_aeef .ToFloat64Array ();if _gggbf !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gggbf ;};if len (_eeeab )!=int (_ccgcd -_efcf +1){_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ccgcd -_efcf +1,len (_eeeab ));
return nil ,_aff .ErrRangeError ;};_ebgf ,_gafc :=_aff .GetArray (_dafa .FontMatrix );if !_gafc {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ebgf );
return nil ,_gggbf ;};_egab ,_gggbf :=_ebgf .ToFloat64Array ();if _gggbf !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gggbf ;};_ggbbc :=_eb .NewMatrix (_egab [0],_egab [1],_egab [2],_egab [3],_egab [4],_egab [5]);for _bece ,_edaea :=range _eeeab {_edfbc ,_ :=_ggbbc .Transform (_edaea ,_edaea );_dafa ._bbef [_efcf +_eee .CharCode (_bece )]=_edfbc ;};};_dafa .Encoding =_aff .TraceToDirectObject (_ggdbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_gecfa :=_ggdbe .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _gecfa !=nil {_dafa ._ccbfg =_aff .TraceToDirectObject (_gecfa );_ddfga ,_aabc :=_dgdfe (_dafa ._ccbfg ,&_dafa .fontCommon );if _aabc !=nil {return nil ,_aabc ;};_dafa ._dcad =_ddfga ;
};if _dfafc :=_dafa ._dcad ;_dfafc !=nil {_dafa ._bfcg =_eee .NewCMapEncoder ("",nil ,_dfafc );}else {_dafa ._bfcg =_eee .NewPdfDocEncoder ();};return _dafa ,nil ;};func (_cdcb *PdfWriter )setHashIDs (_adedb _c .Hash )error {_fefeg :=_adedb .Sum (nil );
if _cdcb ._bacb ==""{_cdcb ._bacb =_fe .EncodeToString (_fefeg [:8]);};_cdcb .setDocumentIDs (_cdcb ._bacb ,_fe .EncodeToString (_fefeg [8:]));return nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ffdeb *PdfPageResources )GenerateXObjectName ()_aff .PdfObjectName {_cbcfc :=1;for {_fbde :=_aff .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_cbcfc ));if !_ffdeb .HasXObjectByName (*_fbde ){return *_fbde ;};_cbcfc ++;};};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_cfac :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_cfac ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_eaac *VRI )ToPdfObject ()*_aff .PdfObjectDictionary {_bfgdc :=_aff .MakeDict ();_bfgdc .SetIfNotNil (_aff .PdfObjectName ("\u0043\u0065\u0072\u0074"),_egcdd (_eaac .Cert ));_bfgdc .SetIfNotNil (_aff .PdfObjectName ("\u004f\u0043\u0053\u0050"),_egcdd (_eaac .OCSP ));
_bfgdc .SetIfNotNil (_aff .PdfObjectName ("\u0043\u0052\u004c"),_egcdd (_eaac .CRL ));_bfgdc .SetIfNotNil ("\u0054\u0055",_eaac .TU );_bfgdc .SetIfNotNil ("\u0054\u0053",_eaac .TS );return _bfgdc ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_faebg *PdfPageResources )SetXObjectByName (keyName _aff .PdfObjectName ,stream *_aff .PdfObjectStream )error {if _faebg .XObject ==nil {_faebg .XObject =_aff .MakeDict ();};_dedcfg :=_aff .TraceToDirectObject (_faebg .XObject );_ceedg ,_ddgbg :=_dedcfg .(*_aff .PdfObjectDictionary );
if !_ddgbg {_adg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_faebg .XObject ,_dedcfg );return _g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ceedg .Set (keyName ,stream );return nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cebe *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_g .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_fbab ,_bgce :=_gd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._becb ,img ._edgef );if _bgce !=nil {return img ,_bgce ;};_dfbf ,_bgce :=_gd .NRGBAConverter .Convert (_fbab );if _bgce !=nil {return img ,_bgce ;
};_ccea :=_efecb (_dfbf .Base ());_adg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_adg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_adg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ccea .Data );
_adg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ccea );return _ccea ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_adbgd *modelManager )GetPrimitiveFromModel (model PdfModel )_aff .PdfObject {_aaega ,_aedfc :=_adbgd ._ceaea [model ];if !_aedfc {return nil ;};return _aaega ;};func _aefbgd (_ccdgbc *PdfPage ){_fbfa :=_gff .GetLicenseKey ();if _fbfa !=nil &&_fbfa .IsLicensed (){return ;
};_abfga :=_aff .PdfObjectName ("\u0055\u0046\u0031");if !_ccdgbc .Resources .HasFontByName (_abfga ){_ccdgbc .Resources .SetFontByName (_abfga ,DefaultFont ().ToPdfObject ());};var _daedgd []string ;_daedgd =append (_daedgd ,"\u0071");_daedgd =append (_daedgd ,"\u0042\u0054");
_daedgd =append (_daedgd ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_abfga .String ()));_daedgd =append (_daedgd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_daedgd =append (_daedgd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_bdefc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_daedgd =append (_daedgd ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_bdefc ));_daedgd =append (_daedgd ,"\u0045\u0054");_daedgd =append (_daedgd ,"\u0051");_acad :=_ba .Join (_daedgd ,"\u000a");_ccdgbc .AddContentStreamByString (_acad );_ccdgbc .ToPdfObject ();
};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fcea *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fcea ._abbe .(*PdfTilingPattern );};func (_cbdb *PdfAcroForm )filteredFields (_dffcf FieldFilterFunc ,_badgf bool )[]*PdfField {if _cbdb ==nil {return nil ;};return _ebaff (_cbdb .Fields ,_dffcf ,_badgf );
};func (_gabef *PdfWriter )writeAcroFormFields ()error {if _gabef ._deacb ==nil {return nil ;};_adg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_afgcf :=_gabef ._deacb .ToPdfObject ();_adg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_afgcf );
_gabef ._cdccb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_afgcf );_gcec :=_gabef .addObjects (_afgcf );if _gcec !=nil {return _gcec ;};return nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_ffeda *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abad :=vals [0];if _abad < 0.0||_abad > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abad );
return nil ,ErrColorOutOfRange ;};_egdg :=vals [1];if _egdg < 0.0||_egdg > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_egdg );return nil ,ErrColorOutOfRange ;
};_dcba :=vals [2];if _dcba < 0.0||_dcba > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dcba );return nil ,ErrColorOutOfRange ;};_ecea :=vals [3];
if _ecea < 0.0||_ecea > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecea );return nil ,ErrColorOutOfRange ;};_bbgd :=NewPdfColorDeviceCMYK (_abad ,_egdg ,_dcba ,_ecea );
return _bbgd ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_ffdgc *pdfSignDictionary )WriteString ()string {_ffdgc ._aeage =0;_ffdgc ._gebef =0;_ffdgc ._bedebd =0;_ffdgc ._ebceg =0;_egefd :=_af .NewBuffer (nil );_egefd .WriteString ("\u003c\u003c");for _ ,_aebgf :=range _ffdgc .Keys (){_gdda :=_ffdgc .Get (_aebgf );
switch _aebgf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_egefd .WriteString (_aebgf .WriteString ());_egefd .WriteString ("\u0020");_ffdgc ._bedebd =_egefd .Len ();_egefd .WriteString (_gdda .WriteString ());_egefd .WriteString ("\u0020");_ffdgc ._ebceg =_egefd .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_egefd .WriteString (_aebgf .WriteString ());_egefd .WriteString ("\u0020");_ffdgc ._aeage =_egefd .Len ();_egefd .WriteString (_gdda .WriteString ());_egefd .WriteString ("\u0020");_ffdgc ._gebef =_egefd .Len ()-1;
default:_egefd .WriteString (_aebgf .WriteString ());_egefd .WriteString ("\u0020");_egefd .WriteString (_gdda .WriteString ());};};_egefd .WriteString ("\u003e\u003e");return _egefd .String ();};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_edaeb *PdfWriter )SetOptimizer (optimizer Optimizer ){_edaeb ._bgbg =optimizer };type pdfFontType3 struct{fontCommon ;_bggc *_aff .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _aff .PdfObject ;Encoding _aff .PdfObject ;FontBBox _aff .PdfObject ;FontMatrix _aff .PdfObject ;FirstChar _aff .PdfObject ;LastChar _aff .PdfObject ;Widths _aff .PdfObject ;Resources _aff .PdfObject ;_bbef map[_eee .CharCode ]float64 ;_bfcg _eee .TextEncoder ;
};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _aff .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _afd *_aff .PdfIndirectObject ;var _aabe *_aff .PdfObjectName ;var _faag *_aff .PdfObjectArray ;if _efd ,_agbd :=obj .(*_aff .PdfIndirectObject );
_agbd {_afd =_efd ;};obj =_aff .TraceToDirectObject (obj );switch _abfb :=obj .(type ){case *_aff .PdfObjectArray :_faag =_abfb ;case *_aff .PdfObjectName :_aabe =_abfb ;};if _aabe !=nil {switch *_aabe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_adg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_aabe );return nil ,_ddcbc ;};};if _faag !=nil &&_faag .Len ()> 0{var _bcdc _aff .PdfObject =_afd ;
if _afd ==nil {_bcdc =_faag ;};if _cef ,_ccgc :=_aff .GetName (_faag .Get (0));_ccgc {switch _cef .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _faag .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _faag .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _faag .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _edgb (_bcdc );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ceeb (_bcdc );
case "\u004c\u0061\u0062":return _ffaff (_bcdc );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _ggceb (_bcdc );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _begg (_bcdc );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _egba (_bcdc );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _baef (_bcdc );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _abeg (_bcdc );default:_adg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_cef );
};};};_adg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func _fefef (_abegf *_aff .PdfObjectDictionary )(*PdfFieldText ,error ){_gegfg :=&PdfFieldText {};_gegfg .DA ,_ =_aff .GetString (_abegf .Get ("\u0044\u0041"));_gegfg .Q ,_ =_aff .GetInt (_abegf .Get ("\u0051"));_gegfg .DS ,_ =_aff .GetString (_abegf .Get ("\u0044\u0053"));
_gegfg .RV =_abegf .Get ("\u0052\u0056");_gegfg .MaxLen ,_ =_aff .GetInt (_abegf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gegfg ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_aff .PdfObjectArray ;ExtGState _aff .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dfce *PdfFilespec )GetContainingPdfObject ()_aff .PdfObject {return _dfce ._dfefa };

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ffaaa :=NewPdfOutline ();_ffaaa ._gecd =&_ffaaa ;return _ffaaa ;};

// ToPdfObject implements interface PdfModel.
func (_ffea *PdfActionTrans )ToPdfObject ()_aff .PdfObject {_ffea .PdfAction .ToPdfObject ();_eeb :=_ffea ._df ;_dee :=_eeb .PdfObject .(*_aff .PdfObjectDictionary );_dee .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeTrans )));_dee .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ffea .Trans );
return _eeb ;};type pdfSignDictionary struct{*_aff .PdfObjectDictionary ;_efde *SignatureHandler ;_afgeg *PdfSignature ;_fgfd int64 ;_aeage int ;_gebef int ;_bedebd int ;_ebceg int ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_decb :=PdfColorDeviceGray (grayVal );return &_decb ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bafe *PdfFont )CharcodesToUnicodeWithStats (charcodes []_eee .CharCode )(_defa []rune ,_dgba ,_dfdcd int ){_fcbgc ,_dgba ,_dfdcd :=_bafe .CharcodesToStrings (charcodes );return []rune (_ba .Join (_fcbgc ,"")),_dgba ,_dfdcd ;};

// IsValid checks if the given pdf output intent type is valid.
func (_bfdfc PdfOutputIntentType )IsValid ()bool {return _bfdfc >=PdfOutputIntentTypeA1 &&_bfdfc <=PdfOutputIntentTypeX ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_caf *BorderStyle )GetPdfName ()string {switch *_caf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ababa int64 ;_acdbf int64 ;_afcd int64 ;_bfcbd int64 ;_ggdbf int64 ;_bdcc int64 ;_acbgca byte ;_cdbec int64 ;_geecde int64 ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_daabg *PdfReader )GetTrailer ()(*_aff .PdfObjectDictionary ,error ){_bgaacb :=_daabg ._gaece .GetTrailer ();if _bgaacb ==nil {return nil ,_g .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bgaacb ,nil ;
};

// PartialName returns the partial name of the field.
func (_bffd *PdfField )PartialName ()string {_gadbb :="";if _bffd .T !=nil {_gadbb =_bffd .T .Decoded ();}else {_adg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gadbb ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_fgfaa byte )byte ;

// ToPdfObject returns the PDF representation of the function.
func (_bgacg *PdfFunctionType4 )ToPdfObject ()_aff .PdfObject {_ebbgg :=_bgacg ._edgbg ;if _ebbgg ==nil {_bgacg ._edgbg =&_aff .PdfObjectStream {};_ebbgg =_bgacg ._edgbg ;};_fffgg :=_aff .MakeDict ();_fffgg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aff .MakeInteger (4));
_bgegf :=&_aff .PdfObjectArray {};for _ ,_edfee :=range _bgacg .Domain {_bgegf .Append (_aff .MakeFloat (_edfee ));};_fffgg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgegf );_bgca :=&_aff .PdfObjectArray {};for _ ,_eefd :=range _bgacg .Range {_bgca .Append (_aff .MakeFloat (_eefd ));
};_fffgg .Set ("\u0052\u0061\u006eg\u0065",_bgca );if _bgacg ._addecb ==nil &&_bgacg .Program !=nil {_bgacg ._addecb =[]byte (_bgacg .Program .String ());};_fffgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_bgacg ._addecb ))));
_ebbgg .Stream =_bgacg ._addecb ;_ebbgg .PdfObjectDictionary =_fffgg ;return _ebbgg ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_ecaeg *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_dcbd :=_ecaeg ._gaece .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _dcbd {return nil ,_g .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_dcbd {return _ecaeg ,nil ;};if _ecaeg ._ccbga [revisionNumber ]!=nil {return _ecaeg ._ccbga [revisionNumber ],nil ;};_fadef :=_ecaeg ;for _gbca :=_dcbd -1;_gbca >=revisionNumber ;_gbca --{_bbbcb ,_cagcg :=_fadef .GetPreviousRevision ();
if _cagcg !=nil {return nil ,_cagcg ;};_ecaeg ._ccbga [_gbca ]=_bbbcb ;_fadef =_bbbcb ;};return _fadef ,nil ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_gcafc *PdfSignature )GetDocMDPPermission ()(_gf .DocMDPPermission ,bool ){for _ ,_ebdda :=range _gcafc .Reference .Elements (){if _ceggc ,_bgcg :=_aff .GetDict (_ebdda );_bgcg {if _ecabg ,_efcbg :=_aff .GetNameVal (_ceggc .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_efcbg &&_ecabg =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _dedga ,_fdbda :=_aff .GetDict (_ceggc .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fdbda {if P ,_bbbbb :=_aff .GetIntVal (_dedga .Get ("\u0050"));
_bbbbb {return _gf .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ac :=NewPdfAction ();_fcg :=&PdfActionGoTo {};_fcg .PdfAction =_ac ;_ac .SetContext (_fcg );return _fcg ;};func (_gdf *PdfReader )newPdfAnnotationSquareFromDict (_fcbc *_aff .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_ece :=PdfAnnotationSquare {};
_abfe ,_eebg :=_gdf .newPdfAnnotationMarkupFromDict (_fcbc );if _eebg !=nil {return nil ,_eebg ;};_ece .PdfAnnotationMarkup =_abfe ;_ece .BS =_fcbc .Get ("\u0042\u0053");_ece .IC =_fcbc .Get ("\u0049\u0043");_ece .BE =_fcbc .Get ("\u0042\u0045");_ece .RD =_fcbc .Get ("\u0052\u0044");
return &_ece ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bdga *PdfAnnotationRichMedia )ToPdfObject ()_aff .PdfObject {_bdga .PdfAnnotation .ToPdfObject ();_fdg :=_bdga ._ccfb ;_cdd :=_fdg .PdfObject .(*_aff .PdfObjectDictionary );_cdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_cdd .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bdga .RichMediaSettings );_cdd .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bdga .RichMediaContent );
return _fdg ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bcaag pdfCIDFontType0 )GetCharMetrics (code _eee .CharCode )(_bcd .CharMetrics ,bool ){_cebea :=_bcaag ._fgbc ;if _bagfg ,_bagga :=_bcaag ._egfb [code ];_bagga {_cebea =_bagfg ;};return _bcd .CharMetrics {Wx :_cebea },true ;};func (_adga *PdfReader )newPdfAnnotationStampFromDict (_cdced *_aff .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_eda :=PdfAnnotationStamp {};
_aed ,_gbc :=_adga .newPdfAnnotationMarkupFromDict (_cdced );if _gbc !=nil {return nil ,_gbc ;};_eda .PdfAnnotationMarkup =_aed ;_eda .Name =_cdced .Get ("\u004e\u0061\u006d\u0065");return &_eda ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_afaef *PdfFieldButton )IsPush ()bool {return _afaef .GetType ()==ButtonTypePush };

// SetForms sets the Acroform for a PDF file.
func (_afdcb *PdfWriter )SetForms (form *PdfAcroForm )error {_afdcb ._deacb =form ;return nil };func _geda (_cbfef []byte )bool {if len (_cbfef )< 4{return true ;};for _aaef :=range _cbfef [:4]{_gcggb :=rune (_aaef );if !_ee .Is (_ee .ASCII_Hex_Digit ,_gcggb )&&!_ee .IsSpace (_gcggb ){return true ;
};};return false ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ega .ReadSeeker )(*PdfReader ,error ){const _eacbb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dffg (rs ,&ReaderOpts {},false ,_eacbb );};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_bdgd *PdfColorspaceICCBased )GetContainingPdfObject ()_aff .PdfObject {return _bdgd ._abcbf };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ecbe *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_ecbe .Base .GetNumComponents ();_gdcee :=int (vals [0])*N ;
if _gdcee < 0||(_gdcee +N -1)>=len (_ecbe ._ecfb ){_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdcee );return nil ,ErrColorOutOfRange ;};_edfe :=_ecbe ._ecfb [_gdcee :_gdcee +N ];
var _egae []float64 ;for _ ,_daad :=range _edfe {_egae =append (_egae ,float64 (_daad )/255.0);};_cbge ,_gdeec :=_ecbe .Base .ColorFromFloats (_egae );if _gdeec !=nil {return nil ,_gdeec ;};return _cbge ,nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_befa :=&PdfPageResourcesColorspaces {};_befa .Names =[]string {};_befa .Colorspaces =map[string ]PdfColorspace {};_befa ._abedg =&_aff .PdfIndirectObject {};return _befa ;};func _fegcf (_aecdd *_aff .PdfObjectDictionary ,_ebeeg *fontCommon )(*pdfCIDFontType2 ,error ){if _ebeeg ._fbged !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_adg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ebeeg );
return nil ,_aff .ErrRangeError ;};_fcdab :=_aedb (_ebeeg );_fddf ,_faefe :=_aff .GetDict (_aecdd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_faefe {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ebeeg );
return nil ,ErrRequiredAttributeMissing ;};_fcdab .CIDSystemInfo =_fddf ;_fcdab .DW =_aecdd .Get ("\u0044\u0057");_fcdab .W =_aecdd .Get ("\u0057");_fcdab .DW2 =_aecdd .Get ("\u0044\u0057\u0032");_fcdab .W2 =_aecdd .Get ("\u0057\u0032");_fcdab .CIDToGIDMap =_aecdd .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_fcdab ._ceageb =1000.0;if _cfbd ,_cffg :=_aff .GetNumberAsFloat (_fcdab .DW );_cffg ==nil {_fcdab ._ceageb =_cfbd ;};_ffgag ,_ddffb :=_adffed (_fcdab .W );if _ddffb !=nil {return nil ,_ddffb ;};if _ffgag ==nil {_ffgag =map[_eee .CharCode ]float64 {};};
_fcdab ._egdcef =_ffgag ;return _fcdab ,nil ;};func (_bbac *PdfReader )newPdfAnnotationFileAttachmentFromDict (_dafg *_aff .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ddgb :=PdfAnnotationFileAttachment {};_agfe ,_fcfe :=_bbac .newPdfAnnotationMarkupFromDict (_dafg );
if _fcfe !=nil {return nil ,_fcfe ;};_ddgb .PdfAnnotationMarkup =_agfe ;_ddgb .FS =_dafg .Get ("\u0046\u0053");_ddgb .Name =_dafg .Get ("\u004e\u0061\u006d\u0065");return &_ddgb ,nil ;};func _aggd (_abbdd *_aff .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bgda :=PdfShadingType1 {};
if _daedg :=_abbdd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_daedg !=nil {_daedg =_aff .TraceToDirectObject (_daedg );_fdbfa ,_gdbcfb :=_daedg .(*_aff .PdfObjectArray );if !_gdbcfb {_adg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daedg );
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgda .Domain =_fdbfa ;};if _geeegf :=_abbdd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_geeegf !=nil {_geeegf =_aff .TraceToDirectObject (_geeegf );
_dgdc ,_gdced :=_geeegf .(*_aff .PdfObjectArray );if !_gdced {_adg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_geeegf );return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bgda .Matrix =_dgdc ;};_bcfd :=_abbdd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bcfd ==nil {_adg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bgda .Function =[]PdfFunction {};if _cead ,_fbgdd :=_bcfd .(*_aff .PdfObjectArray );_fbgdd {for _ ,_fccdf :=range _cead .Elements (){_dagg ,_bgad :=_fdfeg (_fccdf );if _bgad !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgad );
return nil ,_bgad ;};_bgda .Function =append (_bgda .Function ,_dagg );};}else {_accee ,_ddcbbe :=_fdfeg (_bcfd );if _ddcbbe !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcbbe );
return nil ,_ddcbbe ;};_bgda .Function =append (_bgda .Function ,_accee );};return &_bgda ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_facff *Outline )Insert (index uint ,item *OutlineItem ){_bcgge :=uint (len (_facff .Entries ));if index > _bcgge {index =_bcgge ;};_facff .Entries =append (_facff .Entries [:index ],append ([]*OutlineItem {item },_facff .Entries [index :]...)...);
};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _aff .PdfObject ;Name _aff .PdfObject ;State _aff .PdfObject ;StateModel _aff .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gb *PdfAction )ToPdfObject ()_aff .PdfObject {_faa :=_gb ._df ;_bag :=_faa .PdfObject .(*_aff .PdfObjectDictionary );_bag .Clear ();_bag .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_bag .SetIfNotNil ("\u0053",_gb .S );
_bag .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gb .Next );return _faa ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _aff .PdfObject ;V _aff .PdfObject ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_beb :=NewPdfAnnotation ();_aaca :=&PdfAnnotationWatermark {};_aaca .PdfAnnotation =_beb ;_beb .SetContext (_aaca );return _aaca ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_faeed *PdfPageResources )AddExtGState (gsName _aff .PdfObjectName ,gsDict _aff .PdfObject )error {if _faeed .ExtGState ==nil {_faeed .ExtGState =_aff .MakeDict ();};_ebgbcf :=_faeed .ExtGState ;_ddage ,_cfgaba :=_aff .TraceToDirectObject (_ebgbcf ).(*_aff .PdfObjectDictionary );
if !_cfgaba {_adg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ebgbcf ,_aff .TraceToDirectObject (_ebgbcf ));
return _aff .ErrTypeError ;};_ddage .Set (gsName ,gsDict );return nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToInteger convert to an integer format.
func (_bcb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_abfbd :=_cf .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_abfbd *_bcb .C ()),uint32 (_abfbd *_bcb .M ()),uint32 (_abfbd *_bcb .Y ()),uint32 (_abfbd *_bcb .K ())};};

// GetCharMetrics returns the char metrics for character code `code`.
func (_abbd pdfFontType3 )GetCharMetrics (code _eee .CharCode )(_bcd .CharMetrics ,bool ){if _fefeb ,_dbcc :=_abbd ._bbef [code ];_dbcc {return _bcd .CharMetrics {Wx :_fefeb },true ;};if _bcd .IsStdFont (_bcd .StdFontName (_abbd ._abed )){return _bcd .CharMetrics {Wx :250},true ;
};return _bcd .CharMetrics {},false ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dbadd *PdfReader )GetNameDictionary ()(_aff .PdfObject ,error ){_ffbbg :=_aff .ResolveReference (_dbadd ._dcadd .Get ("\u004e\u0061\u006de\u0073"));if _ffbbg ==nil {return nil ,nil ;};if !_dbadd ._gfgg {_ceeaf :=_dbadd .traverseObjectData (_ffbbg );
if _ceeaf !=nil {return nil ,_ceeaf ;};};return _ffbbg ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_febdg *PdfShadingPattern )ToPdfObject ()_aff .PdfObject {_febdg .PdfPattern .ToPdfObject ();_deeac :=_febdg .getDict ();if _febdg .Shading !=nil {_deeac .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_febdg .Shading .ToPdfObject ());};if _febdg .Matrix !=nil {_deeac .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_febdg .Matrix );
};if _febdg .ExtGState !=nil {_deeac .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_febdg .ExtGState );};return _febdg ._cfegc ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_ccadg *Image )SetSamples (samples []uint32 ){if _ccadg .BitsPerComponent < 8{samples =_ccadg .samplesAddPadding (samples );};_aged :=_aae .ResampleUint32 (samples ,int (_ccadg .BitsPerComponent ),8);_egea :=make ([]byte ,len (_aged ));for _dbcde ,_cdfbe :=range _aged {_egea [_dbcde ]=byte (_cdfbe );
};_ccadg .Data =_egea ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_ffacc :=&PdfShadingType2 {};_ffacc .PdfShading =&PdfShading {};_ffacc .PdfShading ._bdacg =_aff .MakeIndirectObject (_aff .MakeDict ());_ffacc .PdfShading ._fcbfb =_ffacc ;return _ffacc ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_baag *PdfPattern )ToPdfObject ()_aff .PdfObject {_afadb :=_baag .getDict ();_afadb .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_afadb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_aff .MakeInteger (_baag .PatternType ));
return _baag ._cfegc ;};func (_gdaeb *PdfReader )newPdfOutlineItemFromIndirectObject (_cecf *_aff .PdfIndirectObject )(*PdfOutlineItem ,error ){_ccageg ,_eadbd :=_cecf .PdfObject .(*_aff .PdfObjectDictionary );if !_eadbd {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ebcfe :=NewPdfOutlineItem ();_cbfc :=_ccageg .Get ("\u0054\u0069\u0074l\u0065");if _cbfc ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_affg ,_gbdd :=_aff .GetString (_cbfc );if !_gbdd {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cbfc );};_ebcfe .Title =_affg ;if _aeff :=_ccageg .Get ("\u0043\u006f\u0075n\u0074");
_aeff !=nil {_aecfd ,_eeacf :=_aeff .(*_aff .PdfObjectInteger );if !_eeacf {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_aeff );};_bbff :=int64 (*_aecfd );
_ebcfe .Count =&_bbff ;};if _aafa :=_ccageg .Get ("\u0044\u0065\u0073\u0074");_aafa !=nil {_ebcfe .Dest =_aff .ResolveReference (_aafa );if !_gdaeb ._gfgg {_eeccc :=_gdaeb .traverseObjectData (_ebcfe .Dest );if _eeccc !=nil {return nil ,_eeccc ;};};};if _dfgdge :=_ccageg .Get ("\u0041");
_dfgdge !=nil {_ebcfe .A =_aff .ResolveReference (_dfgdge );if !_gdaeb ._gfgg {_gafff :=_gdaeb .traverseObjectData (_ebcfe .A );if _gafff !=nil {return nil ,_gafff ;};};};if _gfcea :=_ccageg .Get ("\u0053\u0045");_gfcea !=nil {_ebcfe .SE =nil ;};if _babe :=_ccageg .Get ("\u0043");
_babe !=nil {_ebcfe .C =_aff .ResolveReference (_babe );};if _acbgf :=_ccageg .Get ("\u0046");_acbgf !=nil {_ebcfe .F =_aff .ResolveReference (_acbgf );};return _ebcfe ,nil ;};func _dbcbc (_cgbcg _bcd .StdFont )pdfFontSimple {_aada :=_cgbcg .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_fbged :"\u0054\u0079\u0070e\u0031",_abed :_cgbcg .Name ()},_cadeb :_cgbcg .GetMetricsTable (),_adcc :&PdfFontDescriptor {FontName :_aff .MakeName (string (_aada .Name )),FontFamily :_aff .MakeName (_aada .Family ),FontWeight :_aff .MakeFloat (float64 (_aada .Weight )),Flags :_aff .MakeInteger (int64 (_aada .Flags )),FontBBox :_aff .MakeArrayFromFloats (_aada .BBox [:]),ItalicAngle :_aff .MakeFloat (_aada .ItalicAngle ),Ascent :_aff .MakeFloat (_aada .Ascent ),Descent :_aff .MakeFloat (_aada .Descent ),CapHeight :_aff .MakeFloat (_aada .CapHeight ),XHeight :_aff .MakeFloat (_aada .XHeight ),StemV :_aff .MakeFloat (_aada .StemV ),StemH :_aff .MakeFloat (_aada .StemH )},_ggebf :_cgbcg .Encoder ()};
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_aegbb *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _aegbb .MediaBox !=nil {return _aegbb .MediaBox ,nil ;};_fccde :=_aegbb .Parent ;for _fccde !=nil {_bcegd ,_bdbcf :=_aff .GetDict (_fccde );if !_bdbcf {return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _debg :=_bcegd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_debg !=nil {_beffg ,_febd :=_aff .GetArray (_debg );if !_febd {return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_gcafbd ,_cfdbd :=NewPdfRectangle (*_beffg );if _cfdbd !=nil {return nil ,_cfdbd ;};return _gcafbd ,nil ;};_fccde =_bcegd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_g .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _aff .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _aff .PdfObject ;Contents _aff .PdfObject ;
Rotate *int64 ;Group _aff .PdfObject ;Thumb _aff .PdfObject ;B _aff .PdfObject ;Dur _aff .PdfObject ;Trans _aff .PdfObject ;AA _aff .PdfObject ;Metadata _aff .PdfObject ;PieceInfo _aff .PdfObject ;StructParents _aff .PdfObject ;ID _aff .PdfObject ;PZ _aff .PdfObject ;
SeparationInfo _aff .PdfObject ;Tabs _aff .PdfObject ;TemplateInstantiated _aff .PdfObject ;PresSteps _aff .PdfObject ;UserUnit _aff .PdfObject ;VP _aff .PdfObject ;Annots _aff .PdfObject ;_bbgb []*PdfAnnotation ;_bbdac *_aff .PdfObjectDictionary ;_fage *_aff .PdfIndirectObject ;
_bfce _aff .PdfObjectDictionary ;_dbbf *PdfReader ;};func (_efcb *Image )samplesTrimPadding (_cfcdf []uint32 )[]uint32 {_bcage :=_efcb .ColorComponents *int (_efcb .Width )*int (_efcb .Height );if len (_cfcdf )==_bcage {return _cfcdf ;};_dbceb :=make ([]uint32 ,_bcage );
_ddae :=int (_efcb .Width )*_efcb .ColorComponents ;var _gabcb ,_bggbf ,_cdgc ,_bbdba int ;_cdeb :=_gd .BytesPerLine (int (_efcb .Width ),int (_efcb .BitsPerComponent ),_efcb .ColorComponents );for _gabcb =0;_gabcb < int (_efcb .Height );_gabcb ++{_bggbf =_gabcb *int (_efcb .Width );
_cdgc =_gabcb *_cdeb ;for _bbdba =0;_bbdba < _ddae ;_bbdba ++{_dbceb [_bggbf +_bbdba ]=_cfcdf [_cdgc +_bbdba ];};};return _dbceb ;};func _aebd (_gfcdc _aff .PdfObject )(*PdfPattern ,error ){_beggf :=&PdfPattern {};var _cadc *_aff .PdfObjectDictionary ;
if _gffbab ,_cfab :=_aff .GetIndirect (_gfcdc );_cfab {_beggf ._cfegc =_gffbab ;_bfaga ,_ebfdfe :=_gffbab .PdfObject .(*_aff .PdfObjectDictionary );if !_ebfdfe {_adg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_gffbab .PdfObject );
return nil ,_aff .ErrTypeError ;};_cadc =_bfaga ;}else if _agfad ,_fgaad :=_aff .GetStream (_gfcdc );_fgaad {_beggf ._cfegc =_agfad ;_cadc =_agfad .PdfObjectDictionary ;}else {_adg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_gfcdc );
return nil ,_aff .ErrTypeError ;};_ggdbec :=_cadc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ggdbec ==nil {_adg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edad ,_fecg :=_ggdbec .(*_aff .PdfObjectInteger );if !_fecg {_adg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggdbec );
return nil ,_aff .ErrTypeError ;};if *_edad !=1&&*_edad !=2{_adg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_edad );return nil ,_aff .ErrRangeError ;
};_beggf .PatternType =int64 (*_edad );switch *_edad {case 1:_ggaee ,_eaab :=_bdagg (_cadc );if _eaab !=nil {return nil ,_eaab ;};_ggaee .PdfPattern =_beggf ;_beggf ._abbe =_ggaee ;return _beggf ,nil ;case 2:_egcce ,_feedd :=_agfed (_cadc );if _feedd !=nil {return nil ,_feedd ;
};_egcce .PdfPattern =_beggf ;_beggf ._abbe =_egcce ;return _beggf ,nil ;};return nil ,_g .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _dggcf (_aafce *_aff .PdfIndirectObject ,_afgf *_aff .PdfObjectDictionary )(*DSS ,error ){if _aafce ==nil {_aafce =_aff .MakeIndirectObject (nil );
};_aafce .PdfObject =_aff .MakeDict ();_fdfdf :=map[string ]*VRI {};if _fbbf ,_cbae :=_aff .GetDict (_afgf .Get ("\u0056\u0052\u0049"));_cbae {for _ ,_bbdde :=range _fbbf .Keys (){if _ggcb ,_abbgg :=_aff .GetDict (_fbbf .Get (_bbdde ));_abbgg {_fdfdf [_ba .ToUpper (_bbdde .String ())]=_efdc (_ggcb );
};};};return &DSS {Certs :_cbdga (_afgf .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_cbdga (_afgf .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_cbdga (_afgf .Get ("\u0043\u0052\u004c\u0073")),VRI :_fdfdf ,_dfad :_aafce },nil ;};func (_gcgdd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gcgdd ._gaece .GetCrypter ()!=nil &&!_gcgdd ._gaece .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fddb :=_gcgdd ._dcadd ;_eddbg :=_fddb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _eddbg ==nil {return nil ,nil ;};_cegca ,_ccdg :=_aff .GetIndirect (_eddbg );_eddbg =_aff .TraceToDirectObject (_eddbg );if _aff .IsNullObject (_eddbg ){_adg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_dfac ,_gbgdc :=_aff .GetDict (_eddbg );if !_gbgdc {_adg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eddbg );_adg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eddbg );};_adg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_adg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gcgdd ._gfgg {_bcee :=_gcgdd .traverseObjectData (_dfac );
if _bcee !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bcee );
return nil ,_bcee ;};};_ecfga ,_daeda :=_gcgdd .newPdfAcroFormFromDict (_cegca ,_dfac );if _daeda !=nil {return nil ,_daeda ;};_ecfga ._abcga =!_ccdg ;return _ecfga ,nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_aff .PdfObjectName ;P *_aff .PdfObjectInteger ;V *_aff .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_abcg *PdfAnnotationWidget )ToPdfObject ()_aff .PdfObject {_abcg .PdfAnnotation .ToPdfObject ();_fgda :=_abcg ._ccfb ;_ceg :=_fgda .PdfObject .(*_aff .PdfObjectDictionary );if _abcg ._cbcf {return _fgda ;};_abcg ._cbcf =true ;_ceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ceg .SetIfNotNil ("\u0048",_abcg .H );_ceg .SetIfNotNil ("\u004d\u004b",_abcg .MK );_ceg .SetIfNotNil ("\u0041",_abcg .A );_ceg .SetIfNotNil ("\u0041\u0041",_abcg .AA );_ceg .SetIfNotNil ("\u0042\u0053",_abcg .BS );_gbb :=_abcg .Parent ;if _abcg ._afae !=nil {if _abcg ._afae ._dfbfd ==_abcg ._ccfb {_abcg ._afae .ToPdfObject ();
};_gbb =_abcg ._afae .GetContainingPdfObject ();};if _gbb !=_fgda {_ceg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbb );};_abcg ._cbcf =false ;return _fgda ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func _cbgad (_dfba _aff .PdfObject ){_adg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_dfba ,_dfba .String ());if _agefc ,_cfbf :=_dfba .(*_aff .PdfObjectStream );
_cfbf {_dgfebd ,_gfbb :=_aff .DecodeStream (_agefc );if _gfbb !=nil {_adg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_gfbb );return ;};_adg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dgfebd );}else if _dbdgf ,_aabb :=_dfba .(*_aff .PdfIndirectObject );
_aabb {_adg .Log .Debug ("\u0025\u0054\u0020%\u0076",_dbdgf .PdfObject ,_dbdgf .PdfObject );_adg .Log .Debug ("\u0025\u0073",_dbdgf .PdfObject .String ());};};func _dcbc (_aaegc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_aaegc }};
func _cefcd (_cdcgf _aff .PdfObject )(string ,error ){_cdcgf =_aff .TraceToDirectObject (_cdcgf );switch _gdeb :=_cdcgf .(type ){case *_aff .PdfObjectString :return _gdeb .Str (),nil ;case *_aff .PdfObjectStream :_debae ,_cbdda :=_aff .DecodeStream (_gdeb );
if _cbdda !=nil {return "",_cbdda ;};return string (_debae ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cdcgf );
};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_eaecd *PdfFont )CharcodesToUnicode (charcodes []_eee .CharCode )[]rune {_cfcda ,_ ,_ :=_eaecd .CharcodesToUnicodeWithStats (charcodes );return _cfcda ;};func _dffg (_aafaf _ega .ReadSeeker ,_eedg *ReaderOpts ,_defb bool ,_fbae string )(*PdfReader ,error ){if _eedg ==nil {_eedg =NewReaderOpts ();
};_gdacf :=*_eedg ;_afffe :=&PdfReader {_dged :_aafaf ,_ddcba :map[_aff .PdfObject ]struct{}{},_cfadc :_cgdee (),_gfgg :_eedg .LazyLoad ,_bfadc :_eedg .ComplianceMode ,_acgad :_defb ,_edbfa :&_gdacf };_eacaa ,_gffg :=_ecaeb ("\u0072");if _gffg !=nil {return nil ,_gffg ;
};_gffg =_gff .Track (_eacaa ,_fbae );if _gffg !=nil {return nil ,_gffg ;};_afffe ._fafag =_eacaa ;var _gbeba *_aff .PdfParser ;if !_afffe ._bfadc {_gbeba ,_gffg =_aff .NewParser (_aafaf );}else {_gbeba ,_gffg =_aff .NewCompliancePdfParser (_aafaf );};
if _gffg !=nil {return nil ,_gffg ;};_afffe ._gaece =_gbeba ;_geefe ,_gffg :=_afffe .IsEncrypted ();if _gffg !=nil {return nil ,_gffg ;};if !_geefe {_gffg =_afffe .loadStructure ();if _gffg !=nil {return nil ,_gffg ;};}else if _defb {_gecaa ,_cbbfg :=_afffe .Decrypt ([]byte (_eedg .Password ));
if _cbbfg !=nil {return nil ,_cbbfg ;};if !_gecaa {return nil ,_g .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_afffe ._gfga =make (map[*PdfReader ]*PdfReader );_afffe ._ccbga =make ([]*PdfReader ,_gbeba .GetRevisionNumber ());return _afffe ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bagf *PdfFieldChoice )ToPdfObject ()_aff .PdfObject {_bagf .PdfField .ToPdfObject ();_cdbff :=_bagf ._dfbfd ;_gfgcc :=_cdbff .PdfObject .(*_aff .PdfObjectDictionary );_gfgcc .Set ("\u0046\u0054",_aff .MakeName ("\u0043\u0068"));if _bagf .Opt !=nil {_gfgcc .Set ("\u004f\u0070\u0074",_bagf .Opt );
};if _bagf .TI !=nil {_gfgcc .Set ("\u0054\u0049",_bagf .TI );};if _bagf .I !=nil {_gfgcc .Set ("\u0049",_bagf .I );};return _cdbff ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ecda *Image )AlphaMap (mapFunc AlphaMapFunc ){for _dgbf ,_bbcfa :=range _ecda ._becb {_ecda ._becb [_dgbf ]=mapFunc (_bbcfa );};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ceeae *_aff .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_dbgd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ecba :=_cf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ecba *_dbgd .A ()),uint32 (_ecba *_dbgd .B ()),uint32 (_ecba *_dbgd .C ())};};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_eee .SimpleEncoder ,error ){_eaged ,_ffdb :=_dggca (basefont );if _ffdb !=nil {return nil ,nil ,_ffdb ;};_acdff ,_cacb :=_eaged .Encoder ().(_eee .SimpleEncoder );
if !_cacb {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_eaged .Encoder ());
};_aebc :=make (map[rune ]_eee .GlyphName );for _gedg :=range alphabet {if _ ,_fcdeg :=_acdff .RuneToCharcode (_gedg );!_fcdeg {_ ,_ddfb :=_eaged ._cadeb .Read (_gedg );if !_ddfb {_adg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gedg ,_gedg );
continue ;};_abfd ,_ddfb :=_eee .RuneToGlyph (_gedg );if !_ddfb {_adg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gedg ,_gedg );continue ;};if len (_aebc )>=255{return nil ,nil ,_g .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_aebc [_gedg ]=_abfd ;};};var (_baadg []_eee .CharCode ;_feabf []_eee .CharCode ;);for _fafgc :=_eee .CharCode (1);_fafgc <=0xff;_fafgc ++{_eggfb ,_bfgg :=_acdff .CharcodeToRune (_fafgc );if !_bfgg {_baadg =append (_baadg ,_fafgc );continue ;};if _ ,_bfgg =alphabet [_eggfb ];
!_bfgg {_feabf =append (_feabf ,_fafgc );};};_aced :=append (_baadg ,_feabf ...);if len (_aced )< len (_aebc ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_aebc ),len (_aced ));
};_ecae :=make ([]rune ,0,len (_aebc ));for _cfbb :=range _aebc {_ecae =append (_ecae ,_cfbb );};_fg .Slice (_ecae ,func (_eacbe ,_dedcf int )bool {return _ecae [_eacbe ]< _ecae [_dedcf ]});_abgg :=make (map[_eee .CharCode ]_eee .GlyphName ,len (_ecae ));
for _ ,_cgfee :=range _ecae {_ffdf :=_aced [0];_aced =_aced [1:];_abgg [_ffdf ]=_aebc [_cgfee ];};_acdff =_eee .ApplyDifferences (_acdff ,_abgg );_eaged .SetEncoder (_acdff );return &PdfFont {_gebd :&_eaged },_acdff ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_cfad *fontFile )loadFromSegments (_ecdb ,_dafdf []byte )error {_adg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_ecdb ),len (_dafdf ));
_dfcb :=_cfad .parseASCIIPart (_ecdb );if _dfcb !=nil {return _dfcb ;};_adg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cfad );if len (_dafdf )==0{return nil ;};_adg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cfad );
return nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_aff .PdfObjectInteger ;BitsPerComponent *_aff .PdfObjectInteger ;BitsPerFlag *_aff .PdfObjectInteger ;Decode *_aff .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_dfbfd :_aff .MakeIndirectObject (_aff .MakeDict ())}};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bffcg *PdfOutline )GetContainingPdfObject ()_aff .PdfObject {return _bffcg ._ecbb };func _ecaeb (_cfcfbf string )(string ,error ){var _ccdgb _af .Buffer ;_ccdgb .WriteString (_cfcfbf );_ebfdc :=make ([]byte ,8+16);_caacb :=_f .Now ().UTC ().UnixNano ();
_d .BigEndian .PutUint64 (_ebfdc ,uint64 (_caacb ));_ ,_ggecg :=_ed .Read (_ebfdc [8:]);if _ggecg !=nil {return "",_ggecg ;};_ccdgb .WriteString (_fe .EncodeToString (_ebfdc ));return _ccdgb .String (),nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_cfgce *PdfPageResources )HasShadingByName (keyName _aff .PdfObjectName )bool {_ ,_eggc :=_cfgce .GetShadingByName (keyName );return _eggc ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _aff .PdfObject ;_ecfb []byte ;_efeca *_aff .PdfIndirectObject ;};func (_cbc *PdfReader )newPdfActionURIFromDict (_fegba *_aff .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fegba .Get ("\u0055\u0052\u0049"),IsMap :_fegba .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_abgf *PdfAnnotationPolygon )ToPdfObject ()_aff .PdfObject {_abgf .PdfAnnotation .ToPdfObject ();_aegab :=_abgf ._ccfb ;_bbcg :=_aegab .PdfObject .(*_aff .PdfObjectDictionary );_abgf .PdfAnnotationMarkup .appendToPdfDictionary (_bbcg );_bbcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_bbcg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_abgf .Vertices );_bbcg .SetIfNotNil ("\u004c\u0045",_abgf .LE );_bbcg .SetIfNotNil ("\u0042\u0053",_abgf .BS );_bbcg .SetIfNotNil ("\u0049\u0043",_abgf .IC );_bbcg .SetIfNotNil ("\u0042\u0045",_abgf .BE );
_bbcg .SetIfNotNil ("\u0049\u0054",_abgf .IT );_bbcg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_abgf .Measure );return _aegab ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dffb *PdfAnnotation )GetContainingPdfObject ()_aff .PdfObject {return _dffb ._ccfb };func (_edcc *pdfCIDFontType0 )baseFields ()*fontCommon {return &_edcc .fontCommon };

// ToPdfObject convert PdfInfo to pdf object.
func (_gceda *PdfInfo )ToPdfObject ()_aff .PdfObject {_bgbc :=_aff .MakeDict ();_bgbc .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_gceda .Title );_bgbc .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_gceda .Author );_bgbc .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_gceda .Subject );
_bgbc .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gceda .Keywords );_bgbc .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_gceda .Creator );_bgbc .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_gceda .Producer );
_bgbc .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_gceda .Trapped );if _gceda .CreationDate !=nil {_bgbc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gceda .CreationDate .ToPdfObject ());};if _gceda .ModifiedDate !=nil {_bgbc .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_gceda .ModifiedDate .ToPdfObject ());
};for _ ,_fcac :=range _gceda ._cgbc .Keys (){_bgbc .SetIfNotNil (_fcac ,_gceda ._cgbc .Get (_fcac ));};return _bgbc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_fbceb *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgaf ,_cbab :=_aff .GetNumbersAsFloat (objects );
if _cbab !=nil {return nil ,_cbab ;};return _fbceb .ColorFromFloats (_cgaf );};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dcfd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_fcba :=&PdfColorPattern {};_agdf ,_gfec :=objects [len (objects )-1].(*_aff .PdfObjectName );if !_gfec {_adg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_fcba .PatternName =*_agdf ;if len (objects )> 1{_bbddd :=objects [0:len (objects )-1];if _dcfd .UnderlyingCS ==nil {_adg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_g .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_acgf ,_dgbc :=_dcfd .UnderlyingCS .ColorFromPdfObjects (_bbddd );if _dgbc !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dgbc );
return nil ,_dgbc ;};_fcba .Color =_acgf ;};return _fcba ,nil ;};func (_ffba *pdfFontType0 )bytesToCharcodes (_cdbbc []byte )([]_eee .CharCode ,bool ){if _ffba ._baedc ==nil {return nil ,false ;};_deaf ,_dcff :=_ffba ._baedc .BytesToCharcodes (_cdbbc );
if !_dcff {return nil ,false ;};_bedgd :=make ([]_eee .CharCode ,len (_deaf ));for _cdgdd ,_fgaeg :=range _deaf {_bedgd [_cdgdd ]=_eee .CharCode (_fgaeg );};return _bedgd ,true ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_begd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_begd .GetNumComponents (){return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daca ,_bcfcd :=_begd .TintTransform .Evaluate (vals );
if _bcfcd !=nil {return nil ,_bcfcd ;};_bdbb ,_bcfcd :=_begd .AlternateSpace .ColorFromFloats (_daca );if _bcfcd !=nil {return nil ,_bcfcd ;};return _bdbb ,nil ;};func (_cafd *pdfFontSimple )updateStandard14Font (){_fcbgd ,_bbcgf :=_cafd .Encoder ().(_eee .SimpleEncoder );
if !_bbcgf {_adg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cafd .Encoder (),_cafd );return ;};_addaf :=_fcbgd .Charcodes ();
_cafd ._ecgd =make (map[_eee .CharCode ]float64 ,len (_addaf ));for _ ,_adfa :=range _addaf {_ecfg ,_ :=_fcbgd .CharcodeToRune (_adfa );_bedeb ,_ :=_cafd ._cadeb .Read (_ecfg );_cafd ._ecgd [_adfa ]=_bedeb .Wx ;};};

// GetPdfVersion gets the version of the PDF used within this document.
func (_gdea *PdfWriter )GetPdfVersion ()string {return _gdea .getPdfVersion ()};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _aff .PdfObject ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_aggcg []byte ;_bfcae []uint32 ;_fcbe *_aff .PdfObjectStream ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_facf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcc :=vals [0];if _gcc < 0.0||_gcc > 1.0{_adg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _gcc < 0.0{_gcc =0.0;}else if _gcc > 1.0{_gcc =1.0;};return NewPdfColorDeviceGray (_gcc ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_dad *PdfAnnotation3D )ToPdfObject ()_aff .PdfObject {_dad .PdfAnnotation .ToPdfObject ();_bfafb :=_dad ._ccfb ;_dbab :=_bfafb .PdfObject .(*_aff .PdfObjectDictionary );_dbab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0033\u0044"));
_dbab .SetIfNotNil ("\u0033\u0044\u0044",_dad .T3DD );_dbab .SetIfNotNil ("\u0033\u0044\u0056",_dad .T3DV );_dbab .SetIfNotNil ("\u0033\u0044\u0041",_dad .T3DA );_dbab .SetIfNotNil ("\u0033\u0044\u0049",_dad .T3DI );_dbab .SetIfNotNil ("\u0033\u0044\u0042",_dad .T3DB );
return _bfafb ;};

// ToPdfObject implements interface PdfModel.
func (_dcfb *PdfBorderStyle )ToPdfObject ()_aff .PdfObject {_bafg :=_aff .MakeDict ();if _dcfb ._bgcf !=nil {if _ddba ,_eacg :=_dcfb ._bgcf .(*_aff .PdfIndirectObject );_eacg {_ddba .PdfObject =_bafg ;};};_bafg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dcfb .W !=nil {_bafg .Set ("\u0057",_aff .MakeFloat (*_dcfb .W ));};if _dcfb .S !=nil {_bafg .Set ("\u0053",_aff .MakeName (_dcfb .S .GetPdfName ()));};if _dcfb .D !=nil {_bafg .Set ("\u0044",_aff .MakeArrayFromIntegers (*_dcfb .D ));};if _dcfb ._bgcf !=nil {return _dcfb ._bgcf ;
};return _bafg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bffdf *PdfOutline )ToPdfObject ()_aff .PdfObject {_bbcd :=_bffdf ._ecbb ;_fgdb :=_bbcd .PdfObject .(*_aff .PdfObjectDictionary );_fgdb .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bffdf .First !=nil {_fgdb .Set ("\u0046\u0069\u0072s\u0074",_bffdf .First .ToPdfObject ());
};if _bffdf .Last !=nil {_fgdb .Set ("\u004c\u0061\u0073\u0074",_bffdf .Last .GetContext ().GetContainingPdfObject ());};if _bffdf .Parent !=nil {_fgdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bffdf .Parent .GetContext ().GetContainingPdfObject ());
};if _bffdf .Count !=nil {_fgdb .Set ("\u0043\u006f\u0075n\u0074",_aff .MakeInteger (*_bffdf .Count ));};return _bbcd ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cbf :=NewPdfAnnotation ();_ecb :=&PdfAnnotationFileAttachment {};_ecb .PdfAnnotation =_cbf ;_ecb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbf .SetContext (_ecb );return _ecb ;};
var _ pdfFont =(*pdfFontType0 )(nil );

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fgba *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// GetDescent returns the Descent of the font `descriptor`.
func (_bdee *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _aff .GetNumberAsFloat (_bdee .Descent );};

// Transform rectangle with the supplied matrix.
func (_ceegc *PdfRectangle )Transform (transformMatrix _eb .Matrix ){_ceegc .Llx ,_ceegc .Lly =transformMatrix .Transform (_ceegc .Llx ,_ceegc .Lly );_ceegc .Urx ,_ceegc .Ury =transformMatrix .Transform (_ceegc .Urx ,_ceegc .Ury );_ceegc .Normalize ();
};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_faeb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_faeb .N =N ;return _faeb ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_afcfc *PdfTilingPattern )ToPdfObject ()_aff .PdfObject {_afcfc .PdfPattern .ToPdfObject ();_bfggf :=_afcfc .getDict ();if _afcfc .PaintType !=nil {_bfggf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_afcfc .PaintType );};if _afcfc .TilingType !=nil {_bfggf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_afcfc .TilingType );
};if _afcfc .BBox !=nil {_bfggf .Set ("\u0042\u0042\u006f\u0078",_afcfc .BBox .ToPdfObject ());};if _afcfc .XStep !=nil {_bfggf .Set ("\u0058\u0053\u0074e\u0070",_afcfc .XStep );};if _afcfc .YStep !=nil {_bfggf .Set ("\u0059\u0053\u0074e\u0070",_afcfc .YStep );
};if _afcfc .Resources !=nil {_bfggf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_afcfc .Resources .ToPdfObject ());};if _afcfc .Matrix !=nil {_bfggf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afcfc .Matrix );};return _afcfc ._cfegc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbfdg *PdfShadingType2 )ToPdfObject ()_aff .PdfObject {_cbfdg .PdfShading .ToPdfObject ();_geea ,_eafa :=_cbfdg .getShadingDict ();if _eafa !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _geea ==nil {_adg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _cbfdg .Coords !=nil {_geea .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cbfdg .Coords );
};if _cbfdg .Domain !=nil {_geea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cbfdg .Domain );};if _cbfdg .Function !=nil {if len (_cbfdg .Function )==1{_geea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbfdg .Function [0].ToPdfObject ());
}else {_afge :=_aff .MakeArray ();for _ ,_dafc :=range _cbfdg .Function {_afge .Append (_dafc .ToPdfObject ());};_geea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afge );};};if _cbfdg .Extend !=nil {_geea .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cbfdg .Extend );
};return _cbfdg ._bdacg ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_baeab *PdfWriter )SetDocInfo (info *PdfInfo ){_baeab .setDocInfo (info .ToPdfObject ())};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_gaga *PdfPage )GetRotate ()(int64 ,error ){if _gaga .Rotate !=nil {return *_gaga .Rotate ,nil ;};_bcega :=_gaga .Parent ;for _bcega !=nil {_ecddea ,_gfagb :=_aff .GetDict (_bcega );if !_gfagb {return 0,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _efgbg :=_ecddea .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_efgbg !=nil {_degfa ,_gegbc :=_aff .GetInt (_efgbg );if !_gegbc {return 0,_g .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _degfa !=nil {return int64 (*_degfa ),nil ;};return 0,_g .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bcega =_ecddea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_g .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbcfd *PdfShadingType4 )ToPdfObject ()_aff .PdfObject {_dbcfd .PdfShading .ToPdfObject ();_cgeb ,_gfadc :=_dbcfd .getShadingDict ();if _gfadc !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbcfd .BitsPerCoordinate !=nil {_cgeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbcfd .BitsPerCoordinate );};if _dbcfd .BitsPerComponent !=nil {_cgeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbcfd .BitsPerComponent );
};if _dbcfd .BitsPerFlag !=nil {_cgeb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dbcfd .BitsPerFlag );};if _dbcfd .Decode !=nil {_cgeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbcfd .Decode );};if _dbcfd .Function !=nil {if len (_dbcfd .Function )==1{_cgeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbcfd .Function [0].ToPdfObject ());
}else {_edeeg :=_aff .MakeArray ();for _ ,_aadac :=range _dbcfd .Function {_edeeg .Append (_aadac .ToPdfObject ());};_cgeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edeeg );};};return _dbcfd ._bdacg ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_fbcde :_aff .MakeIndirectObject (_aff .MakeDict ())};};func (_cgaaf *PdfWriter )hasObject (_bdagf _aff .PdfObject )bool {_ ,_dcgaaf :=_cgaaf ._bgadg [_bdagf ];return _dcgaaf ;
};func (_fcdcg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fcdcg ._ggca ==nil &&_fcdcg .DescendantFont !=nil {return _fcdcg .DescendantFont .FontDescriptor ();};return _fcdcg ._ggca ;};

// IsShading specifies if the pattern is a shading pattern.
func (_cfda *PdfPattern )IsShading ()bool {return _cfda .PatternType ==2};func (_gefe *PdfWriter )writeObject (_gdbad int ,_gabgec _aff .PdfObject ){_adg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gdbad );
if _gfcgb ,_begdg :=_gabgec .(*_aff .PdfIndirectObject );_begdg {_gefe ._abebd [_gdbad ]=crossReference {Type :1,Offset :_gefe ._cagac ,Generation :_gfcgb .GenerationNumber };_gdagg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gdbad );
if _cebbf ,_bded :=_gfcgb .PdfObject .(*pdfSignDictionary );_bded {_cebbf ._fgfd =_gefe ._cagac +int64 (len (_gdagg ));};if _gfcgb .PdfObject ==nil {_adg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gfcgb .PdfObject =_aff .MakeNull ();};_gdagg +=_gfcgb .PdfObject .WriteString ();_gdagg +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_gefe .writeString (_gdagg );return ;};if _ccefa ,_gbfda :=_gabgec .(*_aff .PdfObjectStream );_gbfda {_gefe ._abebd [_gdbad ]=crossReference {Type :1,Offset :_gefe ._cagac ,Generation :_ccefa .GenerationNumber };
_bfdbcg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gdbad );_bfdbcg +=_ccefa .PdfObjectDictionary .WriteString ();_bfdbcg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gefe .writeString (_bfdbcg );_gefe .writeBytes (_ccefa .Stream );
_gefe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fddbc ,_aadbe :=_gabgec .(*_aff .PdfObjectStreams );_aadbe {_gefe ._abebd [_gdbad ]=crossReference {Type :1,Offset :_gefe ._cagac ,Generation :_fddbc .GenerationNumber };
_aggfa :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gdbad );var _gceff []string ;var _bdacfd string ;var _faecc int64 ;for _fbcfe ,_bgged :=range _fddbc .Elements (){_ebedg ,_aacb :=_bgged .(*_aff .PdfIndirectObject );if !_aacb {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gdbad ,_bgged );
continue ;};_gdeffb :=_ebedg .PdfObject .WriteString ()+"\u0020";_bdacfd =_bdacfd +_gdeffb ;_gceff =append (_gceff ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_ebedg .ObjectNumber ,_faecc ));_gefe ._abebd [int (_ebedg .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gdbad ,Index :_fbcfe };
_faecc =_faecc +int64 (len ([]byte (_gdeffb )));};_agaa :=_ba .Join (_gceff ,"\u0020")+"\u0020";_eafe :=_aff .NewFlateEncoder ();_ecca :=_eafe .MakeStreamDict ();_ecca .Set (_aff .PdfObjectName ("\u0054\u0079\u0070\u0065"),_aff .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_bdad :=int64 (_fddbc .Len ());_ecca .Set (_aff .PdfObjectName ("\u004e"),_aff .MakeInteger (_bdad ));_cbaca :=int64 (len (_agaa ));_ecca .Set (_aff .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_aff .MakeInteger (_cbaca ));_gefeb ,_ :=_eafe .EncodeBytes ([]byte (_agaa +_bdacfd ));
_bdadb :=int64 (len (_gefeb ));_ecca .Set (_aff .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_aff .MakeInteger (_bdadb ));_aggfa +=_ecca .WriteString ();_aggfa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gefe .writeString (_aggfa );
_gefe .writeBytes (_gefeb );_gefe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_gefe .writeString (_gabgec .WriteString ());};

// ToPdfObject implements interface PdfModel.
func (_aaea *PdfActionURI )ToPdfObject ()_aff .PdfObject {_aaea .PdfAction .ToPdfObject ();_gcd :=_aaea ._df ;_ffd :=_gcd .PdfObject .(*_aff .PdfObjectDictionary );_ffd .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeURI )));_ffd .SetIfNotNil ("\u0055\u0052\u0049",_aaea .URI );
_ffd .SetIfNotNil ("\u0049\u0073\u004da\u0070",_aaea .IsMap );return _gcd ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_ecad *PdfOutlineItem )GetContainingPdfObject ()_aff .PdfObject {return _ecad ._dcee };func (_bgfed *PdfWriter )checkCrossReferenceStream ()bool {_bbaa :=_bgfed ._bgeecg .Major > 1||(_bgfed ._bgeecg .Major ==1&&_bgfed ._bgeecg .Minor > 4);if _bgfed ._deggb !=nil {_bbaa =*_bgfed ._deggb ;
};return _bbaa ;};func _becdc (_ceddb *_aff .PdfObjectStream )(*PdfFunctionType4 ,error ){_abaeb :=&PdfFunctionType4 {};_abaeb ._edgbg =_ceddb ;_ggga :=_ceddb .PdfObjectDictionary ;_gbec ,_ebbg :=_aff .TraceToDirectObject (_ggga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aff .PdfObjectArray );
if !_ebbg {_adg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gbec .Len ()%2!=0{_adg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_g .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gecg ,_baeb :=_gbec .ToFloat64Array ();
if _baeb !=nil {return nil ,_baeb ;};_abaeb .Domain =_gecg ;_gbec ,_ebbg =_aff .TraceToDirectObject (_ggga .Get ("\u0052\u0061\u006eg\u0065")).(*_aff .PdfObjectArray );if _ebbg {if _gbec .Len ()< 0||_gbec .Len ()%2!=0{return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fcce ,_caed :=_gbec .ToFloat64Array ();if _caed !=nil {return nil ,_caed ;};_abaeb .Range =_fcce ;};_dcefcb ,_baeb :=_aff .DecodeStream (_ceddb );if _baeb !=nil {return nil ,_baeb ;};_abaeb ._addecb =_dcefcb ;_dcbbd :=_bf .NewPSParser (_dcefcb );_gfda ,_baeb :=_dcbbd .Parse ();
if _baeb !=nil {return nil ,_baeb ;};_abaeb .Program =_gfda ;return _abaeb ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_aff .PdfObject ,error );};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_afbd *PdfOutlineItem )ToPdfObject ()_aff .PdfObject {_cceed :=_afbd ._dcee ;_fbgfc :=_cceed .PdfObject .(*_aff .PdfObjectDictionary );_fbgfc .Set ("\u0054\u0069\u0074l\u0065",_afbd .Title );if _afbd .A !=nil {_fbgfc .Set ("\u0041",_afbd .A );};if _cbbb :=_fbgfc .Get ("\u0053\u0045");
_cbbb !=nil {_fbgfc .Remove ("\u0053\u0045");};if _afbd .C !=nil {_fbgfc .Set ("\u0043",_afbd .C );};if _afbd .Dest !=nil {_fbgfc .Set ("\u0044\u0065\u0073\u0074",_afbd .Dest );};if _afbd .F !=nil {_fbgfc .Set ("\u0046",_afbd .F );};if _afbd .Count !=nil {_fbgfc .Set ("\u0043\u006f\u0075n\u0074",_aff .MakeInteger (*_afbd .Count ));
};if _afbd .Next !=nil {_fbgfc .Set ("\u004e\u0065\u0078\u0074",_afbd .Next .ToPdfObject ());};if _afbd .First !=nil {_fbgfc .Set ("\u0046\u0069\u0072s\u0074",_afbd .First .ToPdfObject ());};if _afbd .Prev !=nil {_fbgfc .Set ("\u0050\u0072\u0065\u0076",_afbd .Prev .GetContext ().GetContainingPdfObject ());
};if _afbd .Last !=nil {_fbgfc .Set ("\u004c\u0061\u0073\u0074",_afbd .Last .GetContext ().GetContainingPdfObject ());};if _afbd .Parent !=nil {_fbgfc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afbd .Parent .GetContext ().GetContainingPdfObject ());
};return _cceed ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_dbe :=NewPdfAction ();_fad :=&PdfActionThread {};_fad .PdfAction =_dbe ;_dbe .SetContext (_fad );return _fad ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gggg *PdfColorspaceSpecialPattern )ToPdfObject ()_aff .PdfObject {if _gggg .UnderlyingCS ==nil {return _aff .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gced :=_aff .MakeArray (_aff .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_gced .Append (_gggg .UnderlyingCS .ToPdfObject ());if _gggg ._ccd !=nil {_gggg ._ccd .PdfObject =_gced ;return _gggg ._ccd ;};return _gced ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aff .PdfObject ;IC _aff .PdfObject ;BE _aff .PdfObject ;RD _aff .PdfObject ;};

// R returns the value of the red component of the color.
func (_dbce *PdfColorDeviceRGB )R ()float64 {return _dbce [0]};

// GetNumPages returns the number of pages in the document.
func (_gabdac *PdfReader )GetNumPages ()(int ,error ){if _gabdac ._gaece .GetCrypter ()!=nil &&!_gabdac ._gaece .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_gabdac ._bfgfec ),nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_aff .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dede *_aff .PdfIndirectObject ;};func (_cdadb *PdfReader )resolveReference (_bbabb *_aff .PdfObjectReference )(_aff .PdfObject ,bool ,error ){_acfda ,_ecebe :=_cdadb ._gaece .ObjCache [int (_bbabb .ObjectNumber )];
if !_ecebe {_adg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_bbabb );_cceg ,_geffb :=_cdadb ._gaece .LookupByReference (*_bbabb );if _geffb !=nil {return nil ,false ,_geffb ;};_cdadb ._gaece .ObjCache [int (_bbabb .ObjectNumber )]=_cceg ;
return _cceg ,false ,nil ;};return _acfda ,true ,nil ;};type pdfCIDFontType0 struct{fontCommon ;_gccc *_aff .PdfIndirectObject ;_fbdc _eee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_aff .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aff .PdfObject ;W _aff .PdfObject ;DW2 _aff .PdfObject ;W2 _aff .PdfObject ;_egfb map[_eee .CharCode ]float64 ;_fgbc float64 ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_befeb *PdfAcroForm )ToPdfObject ()_aff .PdfObject {_fecef :=_befeb ._fbcde ;_baeedb :=_fecef .PdfObject .(*_aff .PdfObjectDictionary );if _befeb .Fields !=nil {_ffde :=_aff .PdfObjectArray {};for _ ,_fffg :=range *_befeb .Fields {_edgg :=_fffg .GetContext ();
if _edgg !=nil {_ffde .Append (_edgg .ToPdfObject ());}else {_ffde .Append (_fffg .ToPdfObject ());};};_baeedb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_ffde );};if _befeb .NeedAppearances !=nil {_baeedb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_befeb .NeedAppearances );
}else {if _bdda :=_baeedb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bdda !=nil {_baeedb .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _befeb .SigFlags !=nil {_baeedb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_befeb .SigFlags );
};if _befeb .CO !=nil {_baeedb .Set ("\u0043\u004f",_befeb .CO );};if _befeb .DR !=nil {_baeedb .Set ("\u0044\u0052",_befeb .DR .ToPdfObject ());};if _befeb .DA !=nil {_baeedb .Set ("\u0044\u0041",_befeb .DA );};if _befeb .Q !=nil {_baeedb .Set ("\u0051",_befeb .Q );
};if _befeb .XFA !=nil {_baeedb .Set ("\u0058\u0046\u0041",_befeb .XFA );};if _befeb .ADBEEchoSign !=nil {_baeedb .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_befeb .ADBEEchoSign );};return _fecef ;};

// ToInteger convert to an integer format.
func (_agfd *PdfColorLab )ToInteger (bits int )[3]uint32 {_cddf :=_cf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cddf *_agfd .L ()),uint32 (_cddf *_agfd .A ()),uint32 (_cddf *_agfd .B ())};};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_cdgdf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _aegc []*PdfOutlineTreeNode ;var _fcbee []string ;var _baadgd func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_baadgd =func (_gfad *PdfOutlineTreeNode ,_cefe *[]*PdfOutlineTreeNode ,_efffa *[]string ,_ffebb int ){if _gfad ==nil {return ;
};if _gfad ._gecd ==nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bfabb ,_gdedb :=_gfad ._gecd .(*PdfOutlineItem );if _gdedb {*_cefe =append (*_cefe ,&_bfabb .PdfOutlineTreeNode );
_dcac :=_ba .Repeat ("\u0020",_ffebb *2)+_bfabb .Title .Decoded ();*_efffa =append (*_efffa ,_dcac );};if _gfad .First !=nil {_edddgg :=_ba .Repeat ("\u0020",_ffebb *2)+"\u002b";*_efffa =append (*_efffa ,_edddgg );_baadgd (_gfad .First ,_cefe ,_efffa ,_ffebb +1);
};if _gdedb &&_bfabb .Next !=nil {_baadgd (_bfabb .Next ,_cefe ,_efffa ,_ffebb );};};_baadgd (_cdgdf ._ecbcb ,&_aegc ,&_fcbee ,0);return _aegc ,_fcbee ,nil ;};func _gccbb (_efge map[_bcd .GID ]int ,_gebaf uint16 )*_aff .PdfObjectArray {_cdbd :=&_aff .PdfObjectArray {};
_eedcd :=_bcd .GID (_gebaf );for _bbbe :=_bcd .GID (0);_bbbe < _eedcd ;{_eebec ,_faad :=_efge [_bbbe ];if !_faad {_bbbe ++;continue ;};_dcbe :=_bbbe ;for _bedbc :=_dcbe +1;_bedbc < _eedcd ;_bedbc ++{if _abebb ,_adgg :=_efge [_bedbc ];!_adgg ||_eebec !=_abebb {break ;
};_dcbe =_bedbc ;};_cdbd .Append (_aff .MakeInteger (int64 (_bbbe )));_cdbd .Append (_aff .MakeInteger (int64 (_dcbe )));_cdbd .Append (_aff .MakeInteger (int64 (_eebec )));_bbbe =_dcbe +1;};return _cdbd ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_cbacfc DefaultImageHandler )Read (reader _ega .Reader )(*Image ,error ){_geed ,_ ,_ffef :=_cg .Decode (reader );if _ffef !=nil {_adg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ffef );
return nil ,_ffef ;};return _cbacfc .NewImageFromGoImage (_geed );};func _gccca ()string {return _adg .Version };

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dce :=NewPdfAnnotation ();_cfa :=&PdfAnnotationInk {};_cfa .PdfAnnotation =_dce ;_cfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dce .SetContext (_cfa );return _cfa ;};

// SetFlag sets the flag for the field.
func (_befec *PdfField )SetFlag (flag FieldFlag ){_befec .Ff =_aff .MakeInteger (int64 (flag ))};func (_dbfe *PdfReader )newPdfAnnotationPolyLineFromDict (_cad *_aff .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ggd :=PdfAnnotationPolyLine {};
_egc ,_bfdec :=_dbfe .newPdfAnnotationMarkupFromDict (_cad );if _bfdec !=nil {return nil ,_bfdec ;};_ggd .PdfAnnotationMarkup =_egc ;_ggd .Vertices =_cad .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ggd .LE =_cad .Get ("\u004c\u0045");_ggd .BS =_cad .Get ("\u0042\u0053");
_ggd .IC =_cad .Get ("\u0049\u0043");_ggd .BE =_cad .Get ("\u0042\u0045");_ggd .IT =_cad .Get ("\u0049\u0054");_ggd .Measure =_cad .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ggd ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;
);func (_ddfc *LTV )generateVRIKey (_dabef *PdfSignature )(string ,error ){_eceb ,_gfbee :=_cdfa (_dabef .Contents .Bytes ());if _gfbee !=nil {return "",_gfbee ;};return _ba .ToUpper (_fe .EncodeToString (_eceb )),nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_gdeead *PdfPageResources )GetColorspaceByName (keyName _aff .PdfObjectName )(PdfColorspace ,bool ){_eaeca ,_egag :=_gdeead .GetColorspaces ();if _egag !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egag );
return nil ,false ;};if _eaeca ==nil {return nil ,false ;};_ecacd ,_cffdb :=_eaeca .Colorspaces [string (keyName )];if !_cffdb {return nil ,false ;};return _ecacd ,true ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fd :=NewPdfAction ();_ce :=&PdfActionResetForm {};_ce .PdfAction =_fd ;_fd .SetContext (_ce );return _ce ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gaccd :=&PdfBorderStyle {};return _gaccd };

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _aff .StreamEncoder )(*XObjectImage ,error ){_abedee :=NewXObjectImage ();return UpdateXObjectImageFromImage (_abedee ,img ,cs ,encoder );};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_gebea *_aff .PdfObjectDictionary ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_agaffc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_adg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_g .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_afecf *PdfAcroForm )GetContainingPdfObject ()_aff .PdfObject {return _afecf ._fbcde };

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_ebage *modelManager )GetModelFromPrimitive (primitive _aff .PdfObject )PdfModel {model ,_fbbc :=_ebage ._geefd [primitive ];if !_fbbc {return nil ;};return model ;};func (_edeg *PdfReader )newPdfAnnotationFromIndirectObject (_bfdd *_aff .PdfIndirectObject )(*PdfAnnotation ,error ){_bcc ,_cdg :=_bfdd .PdfObject .(*_aff .PdfObjectDictionary );
if !_cdg {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_edeg ._cfadc .GetModelFromPrimitive (_bcc );model !=nil {_fedg ,_cfag :=model .(*PdfAnnotation );if !_cfag {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fedg ,nil ;};_edea :=&PdfAnnotation {};_edea ._ccfb =_bfdd ;_edeg ._cfadc .Register (_bcc ,_edea );if _bbbge :=_bcc .Get ("\u0054\u0079\u0070\u0065");_bbbge !=nil {_cbb ,_cdbe :=_bbbge .(*_aff .PdfObjectName );if !_cdbe {_adg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bbbge );
}else {if *_cbb !="\u0041\u006e\u006eo\u0074"{_adg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_cbb );};};};if _ggec :=_bcc .Get ("\u0052\u0065\u0063\u0074");
_ggec !=nil {_edea .Rect =_ggec ;};if _gfd :=_bcc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gfd !=nil {_edea .Contents =_gfd ;};if _bg :=_bcc .Get ("\u0050");_bg !=nil {_edea .P =_bg ;};if _dgb :=_bcc .Get ("\u004e\u004d");_dgb !=nil {_edea .NM =_dgb ;
};if _fab :=_bcc .Get ("\u004d");_fab !=nil {_edea .M =_fab ;};if _ecc :=_bcc .Get ("\u0046");_ecc !=nil {_edea .F =_ecc ;};if _bee :=_bcc .Get ("\u0041\u0050");_bee !=nil {_edea .AP =_bee ;};if _deag :=_bcc .Get ("\u0041\u0053");_deag !=nil {_edea .AS =_deag ;
};if _adb :=_bcc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_adb !=nil {_edea .Border =_adb ;};if _bga :=_bcc .Get ("\u0043");_bga !=nil {_edea .C =_bga ;};if _gffc :=_bcc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gffc !=nil {_edea .StructParent =_gffc ;};if _fbea :=_bcc .Get ("\u004f\u0043");_fbea !=nil {_edea .OC =_fbea ;};_dba :=_bcc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _dba ==nil {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_edea ._eefa =nil ;return _edea ,nil ;};_ebga ,_bdd :=_dba .(*_aff .PdfObjectName );if !_bdd {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dba );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_dba );};switch *_ebga {case "\u0054\u0065\u0078\u0074":_bbfe ,_daf :=_edeg .newPdfAnnotationTextFromDict (_bcc );
if _daf !=nil {return nil ,_daf ;};_bbfe .PdfAnnotation =_edea ;_edea ._eefa =_bbfe ;return _edea ,nil ;case "\u004c\u0069\u006e\u006b":_fbee ,_badc :=_edeg .newPdfAnnotationLinkFromDict (_bcc );if _badc !=nil {return nil ,_badc ;};_fbee .PdfAnnotation =_edea ;
_edea ._eefa =_fbee ;return _edea ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fcbf ,_ddg :=_edeg .newPdfAnnotationFreeTextFromDict (_bcc );if _ddg !=nil {return nil ,_ddg ;};_fcbf .PdfAnnotation =_edea ;_edea ._eefa =_fcbf ;return _edea ,nil ;
case "\u004c\u0069\u006e\u0065":_baac ,_dbc :=_edeg .newPdfAnnotationLineFromDict (_bcc );if _dbc !=nil {return nil ,_dbc ;};_baac .PdfAnnotation =_edea ;_edea ._eefa =_baac ;_adg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_edea ,_edea );
_adg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_baac ,_baac );_adg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_baac .PdfAnnotationMarkup ,_baac .PdfAnnotationMarkup );
return _edea ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bgd ,_aeb :=_edeg .newPdfAnnotationSquareFromDict (_bcc );if _aeb !=nil {return nil ,_aeb ;};_bgd .PdfAnnotation =_edea ;_edea ._eefa =_bgd ;return _edea ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_fcfb ,_aab :=_edeg .newPdfAnnotationCircleFromDict (_bcc );
if _aab !=nil {return nil ,_aab ;};_fcfb .PdfAnnotation =_edea ;_edea ._eefa =_fcfb ;return _edea ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_caga ,_ffbe :=_edeg .newPdfAnnotationPolygonFromDict (_bcc );if _ffbe !=nil {return nil ,_ffbe ;};_caga .PdfAnnotation =_edea ;
_edea ._eefa =_caga ;return _edea ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cgcc ,_ebgd :=_edeg .newPdfAnnotationPolyLineFromDict (_bcc );if _ebgd !=nil {return nil ,_ebgd ;};_cgcc .PdfAnnotation =_edea ;_edea ._eefa =_cgcc ;return _edea ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_fec ,_gdgb :=_edeg .newPdfAnnotationHighlightFromDict (_bcc );if _gdgb !=nil {return nil ,_gdgb ;};_fec .PdfAnnotation =_edea ;_edea ._eefa =_fec ;return _edea ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ggeg ,_aagf :=_edeg .newPdfAnnotationUnderlineFromDict (_bcc );
if _aagf !=nil {return nil ,_aagf ;};_ggeg .PdfAnnotation =_edea ;_edea ._eefa =_ggeg ;return _edea ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bgdg ,_faf :=_edeg .newPdfAnnotationSquigglyFromDict (_bcc );if _faf !=nil {return nil ,_faf ;
};_bgdg .PdfAnnotation =_edea ;_edea ._eefa =_bgdg ;return _edea ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ebd ,_agg :=_edeg .newPdfAnnotationStrikeOut (_bcc );if _agg !=nil {return nil ,_agg ;};_ebd .PdfAnnotation =_edea ;_edea ._eefa =_ebd ;
return _edea ,nil ;case "\u0043\u0061\u0072e\u0074":_gagc ,_fbge :=_edeg .newPdfAnnotationCaretFromDict (_bcc );if _fbge !=nil {return nil ,_fbge ;};_gagc .PdfAnnotation =_edea ;_edea ._eefa =_gagc ;return _edea ,nil ;case "\u0053\u0074\u0061m\u0070":_cfe ,_eebc :=_edeg .newPdfAnnotationStampFromDict (_bcc );
if _eebc !=nil {return nil ,_eebc ;};_cfe .PdfAnnotation =_edea ;_edea ._eefa =_cfe ;return _edea ,nil ;case "\u0049\u006e\u006b":_eece ,_bfaf :=_edeg .newPdfAnnotationInkFromDict (_bcc );if _bfaf !=nil {return nil ,_bfaf ;};_eece .PdfAnnotation =_edea ;
_edea ._eefa =_eece ;return _edea ,nil ;case "\u0050\u006f\u0070u\u0070":_aeg ,_fbeb :=_edeg .newPdfAnnotationPopupFromDict (_bcc );if _fbeb !=nil {return nil ,_fbeb ;};_aeg .PdfAnnotation =_edea ;_edea ._eefa =_aeg ;return _edea ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_aegg ,_edf :=_edeg .newPdfAnnotationFileAttachmentFromDict (_bcc );
if _edf !=nil {return nil ,_edf ;};_aegg .PdfAnnotation =_edea ;_edea ._eefa =_aegg ;return _edea ,nil ;case "\u0053\u006f\u0075n\u0064":_cgag ,_ebe :=_edeg .newPdfAnnotationSoundFromDict (_bcc );if _ebe !=nil {return nil ,_ebe ;};_cgag .PdfAnnotation =_edea ;
_edea ._eefa =_cgag ;return _edea ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ded ,_ffa :=_edeg .newPdfAnnotationRichMediaFromDict (_bcc );if _ffa !=nil {return nil ,_ffa ;};_ded .PdfAnnotation =_edea ;_edea ._eefa =_ded ;return _edea ,nil ;
case "\u004d\u006f\u0076i\u0065":_beba ,_feb :=_edeg .newPdfAnnotationMovieFromDict (_bcc );if _feb !=nil {return nil ,_feb ;};_beba .PdfAnnotation =_edea ;_edea ._eefa =_beba ;return _edea ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_fagc ,_abb :=_edeg .newPdfAnnotationScreenFromDict (_bcc );
if _abb !=nil {return nil ,_abb ;};_fagc .PdfAnnotation =_edea ;_edea ._eefa =_fagc ;return _edea ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fba ,_eecf :=_edeg .newPdfAnnotationWidgetFromDict (_bcc );if _eecf !=nil {return nil ,_eecf ;};_fba .PdfAnnotation =_edea ;
_edea ._eefa =_fba ;return _edea ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_edge ,_eae :=_edeg .newPdfAnnotationPrinterMarkFromDict (_bcc );if _eae !=nil {return nil ,_eae ;};_edge .PdfAnnotation =_edea ;_edea ._eefa =_edge ;
return _edea ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bagg ,_addc :=_edeg .newPdfAnnotationTrapNetFromDict (_bcc );if _addc !=nil {return nil ,_addc ;};_bagg .PdfAnnotation =_edea ;_edea ._eefa =_bagg ;return _edea ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_dbgc ,_fcdec :=_edeg .newPdfAnnotationWatermarkFromDict (_bcc );
if _fcdec !=nil {return nil ,_fcdec ;};_dbgc .PdfAnnotation =_edea ;_edea ._eefa =_dbgc ;return _edea ,nil ;case "\u0033\u0044":_caeg ,_afea :=_edeg .newPdfAnnotation3DFromDict (_bcc );if _afea !=nil {return nil ,_afea ;};_caeg .PdfAnnotation =_edea ;_edea ._eefa =_caeg ;
return _edea ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bbd ,_bbdb :=_edeg .newPdfAnnotationProjectionFromDict (_bcc );if _bbdb !=nil {return nil ,_bbdb ;};_bbd .PdfAnnotation =_edea ;_edea ._eefa =_bbd ;return _edea ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_bdcf ,_bae :=_edeg .newPdfAnnotationRedactFromDict (_bcc );if _bae !=nil {return nil ,_bae ;};_bdcf .PdfAnnotation =_edea ;_edea ._eefa =_bdcf ;return _edea ,nil ;};_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_ebga );
return nil ,nil ;};func _ebaff (_ecbg *[]*PdfField ,_aagcc FieldFilterFunc ,_ecegc bool )[]*PdfField {if _ecbg ==nil {return nil ;};_gagdd :=*_ecbg ;if len (*_ecbg )==0{return nil ;};_efgfg :=_gagdd [:0];if _aagcc ==nil {_aagcc =func (*PdfField )bool {return true };
};var _gbfe []*PdfField ;for _ ,_cdcdc :=range _gagdd {_bbdaf :=_aagcc (_cdcdc );if _bbdaf {_gbfe =append (_gbfe ,_cdcdc );if len (_cdcdc .Kids )> 0{_gbfe =append (_gbfe ,_ebaff (&_cdcdc .Kids ,_aagcc ,_ecegc )...);};};if !_ecegc ||!_bbdaf ||len (_cdcdc .Kids )> 0{_efgfg =append (_efgfg ,_cdcdc );
};};*_ecbg =_efgfg ;return _gbfe ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );func (_abccb *PdfWriter )setWriter (_cdfd _ega .Writer ){_abccb ._cagac =_abccb ._bfage ;_abccb ._ggee =_ag .NewWriter (_cdfd );};

// String returns a string that describes `font`.
func (_fgfbg *PdfFont )String ()string {_gabda :="";if _fgfbg ._gebd .Encoder ()!=nil {_gabda =_fgfbg ._gebd .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_fgfbg ._gebd ,_fgfbg .baseFields ().coreString (),_gabda );
};func (_acdbc *PdfSignature )extractChainFromCert ()([]*_fb .Certificate ,error ){var _gegbb *_aff .PdfObjectArray ;switch _adgb :=_acdbc .Cert .(type ){case *_aff .PdfObjectString :_gegbb =_aff .MakeArray (_adgb );case *_aff .PdfObjectArray :_gegbb =_adgb ;
default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_adgb );
};var _dcagf _af .Buffer ;for _ ,_egfa :=range _gegbb .Elements (){_ccfc ,_dage :=_aff .GetString (_egfa );if !_dage {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_egfa );
};if _ ,_edacb :=_dcagf .Write (_ccfc .Bytes ());_edacb !=nil {return nil ,_edacb ;};};return _fb .ParseCertificates (_dcagf .Bytes ());};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bbaee *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_aff .StreamEncoder ,error ){_fcae ,_aacaga :=_bbaee ._cfegc .(*_aff .PdfObjectStream );if !_aacaga {_adg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbaee ._cfegc );
return nil ,nil ,_aff .ErrTypeError ;};_aefbg ,_dcddeb :=_aff .DecodeStream (_fcae );if _dcddeb !=nil {_adg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dcddeb );
return nil ,nil ,_dcddeb ;};_gfdb ,_dcddeb :=_aff .NewEncoderFromStream (_fcae );if _dcddeb !=nil {_adg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dcddeb );
return nil ,nil ,_dcddeb ;};return _aefbg ,_gfdb ,nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_aeabe *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _aeabe ._cfdbe !=nil {return _aeabe ._cfdbe ,nil ;};if _aeabe .ColorSpace ==nil {return nil ,nil ;};_aeddc ,_cdegf :=_fgagf (_aeabe .ColorSpace );if _cdegf !=nil {return nil ,_cdegf ;
};_aeabe ._cfdbe =_aeddc ;return _aeabe ._cfdbe ,nil ;};func _gbge (_dfgdad _aff .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_eefcc :=&PdfColorspaceDeviceNAttributes {};var _cfed *_aff .PdfObjectDictionary ;switch _edcgb :=_dfgdad .(type ){case *_aff .PdfIndirectObject :_eefcc ._ecgec =_edcgb ;
var _geba bool ;_cfed ,_geba =_edcgb .PdfObject .(*_aff .PdfObjectDictionary );if !_geba {_adg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_g .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_aff .PdfObjectDictionary :_cfed =_edcgb ;case *_aff .PdfObjectReference :_adef :=_edcgb .Resolve ();return _gbge (_adef );default:_adg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_g .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _feec :=_cfed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_feec !=nil {_gaaeca ,_bfbc :=_aff .TraceToDirectObject (_feec ).(*_aff .PdfObjectName );if !_bfbc {_adg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_g .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eefcc .Subtype =_gaaeca ;};if _gaef :=_cfed .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gaef !=nil {_eefcc .Colorants =_gaef ;};if _dbffcc :=_cfed .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_dbffcc !=nil {_eefcc .Process =_dbffcc ;};if _bffc :=_cfed .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bffc !=nil {_eefcc .MixingHints =_bffc ;};return _eefcc ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fbdf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fbdf ._gebd .getFontDescriptor (),nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_fabeg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fabeg .Alternate ==nil {_adg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _fabeg .N ==1{_adg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_dgab :=NewPdfColorspaceDeviceGray ();return _dgab .ColorToRGB (color );}else if _fabeg .N ==3{_adg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _fabeg .N ==4{_adg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bdae :=NewPdfColorspaceDeviceCMYK ();return _bdae .ColorToRGB (color );}else {return nil ,_g .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_adg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fabeg );
return _fabeg .Alternate .ColorToRGB (color );};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_deab *PdfColorspaceICCBased )ToPdfObject ()_aff .PdfObject {_fgcbb :=&_aff .PdfObjectArray {};_fgcbb .Append (_aff .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _acda *_aff .PdfObjectStream ;if _deab ._abcbf !=nil {_acda =_deab ._abcbf ;
}else {_acda =&_aff .PdfObjectStream {};};_deagc :=_aff .MakeDict ();_deagc .Set ("\u004e",_aff .MakeInteger (int64 (_deab .N )));if _deab .Alternate !=nil {_deagc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_deab .Alternate .ToPdfObject ());};
if _deab .Metadata !=nil {_deagc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_deab .Metadata );};if _deab .Range !=nil {var _eeae []_aff .PdfObject ;for _ ,_fcdcf :=range _deab .Range {_eeae =append (_eeae ,_aff .MakeFloat (_fcdcf ));};_deagc .Set ("\u0052\u0061\u006eg\u0065",_aff .MakeArray (_eeae ...));
};_deagc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_deab .Data ))));_acda .Stream =_deab .Data ;_acda .PdfObjectDictionary =_deagc ;_fgcbb .Append (_acda );if _deab ._ecfc !=nil {_deab ._ecfc .PdfObject =_fgcbb ;return _deab ._ecfc ;
};return _fgcbb ;};

// ToPdfObject implements interface PdfModel.
func (_afc *PdfActionResetForm )ToPdfObject ()_aff .PdfObject {_afc .PdfAction .ToPdfObject ();_ffc :=_afc ._df ;_fdf :=_ffc .PdfObject .(*_aff .PdfObjectDictionary );_fdf .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeResetForm )));_fdf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_afc .Fields );
_fdf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_afc .Flags );return _ffc ;};func _abegb (_degbg string )(map[_eee .CharCode ]_eee .GlyphName ,error ){_agddg :=_ba .Split (_degbg ,"\u000a");_fgadc :=make (map[_eee .CharCode ]_eee .GlyphName );for _ ,_gbee :=range _agddg {_ddabf :=_ebaad .FindStringSubmatch (_gbee );
if _ddabf ==nil {continue ;};_dcbf ,_eagb :=_ddabf [1],_ddabf [2];_ebgc ,_ccffe :=_eed .Atoi (_dcbf );if _ccffe !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gbee );
return nil ,_aff .ErrTypeError ;};_fgadc [_eee .CharCode (_ebgc )]=_eee .GlyphName (_eagb );};_adg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_fgadc );
return _fgadc ,nil ;};

// B returns the value of the blue component of the color.
func (_cdef *PdfColorDeviceRGB )B ()float64 {return _cdef [2]};func (_ecaf *PdfReader )newPdfAcroFormFromDict (_decba *_aff .PdfIndirectObject ,_bbcge *_aff .PdfObjectDictionary )(*PdfAcroForm ,error ){_edeac :=NewPdfAcroForm ();if _decba !=nil {_edeac ._fbcde =_decba ;
_decba .PdfObject =_aff .MakeDict ();};if _eggg :=_bbcge .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_eggg !=nil &&!_aff .IsNullObject (_eggg ){_cggg ,_bbed :=_aff .GetArray (_eggg );if !_bbed {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eggg );
};var _afaaa []*PdfField ;for _ ,_begdd :=range _cggg .Elements (){_baecd ,_agfcd :=_aff .GetIndirect (_begdd );if !_agfcd {if _ ,_fbdcb :=_begdd .(*_aff .PdfObjectNull );_fbdcb {_adg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_adg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_begdd );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gacd ,_ccae :=_ecaf .newPdfFieldFromIndirectObject (_baecd ,nil );
if _ccae !=nil {return nil ,_ccae ;};_adg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gacd );_afaaa =append (_afaaa ,_gacd );};_edeac .Fields =&_afaaa ;};if _aebg :=_bbcge .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_aebg !=nil {_bdfa ,_affe :=_aff .GetBool (_aebg );if _affe {_edeac .NeedAppearances =_bdfa ;}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_aebg );
};};if _egfg :=_bbcge .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_egfg !=nil {_fgaa ,_fffd :=_aff .GetInt (_egfg );if _fffd {_edeac .SigFlags =_fgaa ;}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egfg );
};};if _gbcd :=_bbcge .Get ("\u0043\u004f");_gbcd !=nil {_fbad ,_cafg :=_aff .GetArray (_gbcd );if _cafg {_edeac .CO =_fbad ;}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gbcd );
};};if _bddfb :=_bbcge .Get ("\u0044\u0052");_bddfb !=nil {if _bcab ,_cdbef :=_aff .GetDict (_bddfb );_cdbef {_fbfd ,_ecgb :=NewPdfPageResourcesFromDict (_bcab );if _ecgb !=nil {_adg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ecgb );
return nil ,_ecgb ;};_edeac .DR =_fbfd ;}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bddfb );};};if _cefce :=_bbcge .Get ("\u0044\u0041");
_cefce !=nil {_fagge ,_gafb :=_aff .GetString (_cefce );if _gafb {_edeac .DA =_fagge ;}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cefce );
};};if _gfcfe :=_bbcge .Get ("\u0051");_gfcfe !=nil {_fbdfc ,_cdda :=_aff .GetInt (_gfcfe );if _cdda {_edeac .Q =_fbdfc ;}else {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gfcfe );
};};if _bdcfb :=_bbcge .Get ("\u0058\u0046\u0041");_bdcfb !=nil {_edeac .XFA =_bdcfb ;};if _ddfgb :=_bbcge .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_ddfgb !=nil {_edeac .ADBEEchoSign =_ddfgb ;};_edeac .ToPdfObject ();
return _edeac ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_cegd :=&PdfColorPatternType2 {};return _cegd };func (_bcdd SignatureValidationResult )String ()string {var _ccfcc _af .Buffer ;_ccfcc .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_bcdd .Name ));
if _bcdd .Date ._ababa > 0{_ccfcc .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_bcdd .Date .ToGoTime ().String ()));}else {_ccfcc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_bcdd .Reason )> 0{_ccfcc .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bcdd .Reason ));}else {_ccfcc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_bcdd .Location )> 0{_ccfcc .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bcdd .Location ));}else {_ccfcc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_bcdd .ContactInfo )> 0{_ccfcc .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_bcdd .ContactInfo ));}else {_ccfcc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_ccfcc .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_bcdd .Fields )));if _bcdd .IsSigned {_ccfcc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_ccfcc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _bcdd .IsVerified {_ccfcc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_ccfcc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _bcdd .IsTrusted {_ccfcc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_ccfcc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_bcdd .GeneralizedTime .IsZero (){_ccfcc .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_bcdd .GeneralizedTime .String ()));
};if _bcdd .DiffResults !=nil {_ccfcc .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_bcdd .DiffResults .IsPermitted ()));if len (_bcdd .DiffResults .Warnings )> 0{_ccfcc .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_acba :=range _bcdd .DiffResults .Warnings {_ccfcc .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_acba ));};};if len (_bcdd .DiffResults .Errors )> 0{_ccfcc .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_aebca :=range _bcdd .DiffResults .Errors {_ccfcc .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_aebca ));};};};if _bcdd .IsCrlFound {_ccfcc .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_ccfcc .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _bcdd .IsOcspFound {_ccfcc .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_ccfcc .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _ccfcc .String ();};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ebgb :=NewPdfAnnotation ();_fdeg :=&PdfAnnotationLink {};_fdeg .PdfAnnotation =_ebgb ;_ebgb .SetContext (_fdeg );return _fdeg ;};func _fdfeg (_agage _aff .PdfObject )(PdfFunction ,error ){_agage =_aff .ResolveReference (_agage );
if _cfece ,_bbfed :=_agage .(*_aff .PdfObjectStream );_bbfed {_bdeba :=_cfece .PdfObjectDictionary ;_dbdad ,_aageg :=_bdeba .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aff .PdfObjectInteger );if !_aageg {_adg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dbdad ==0{return _fdbfg (_cfece );}else if *_dbdad ==4{return _becdc (_cfece );
}else {return nil ,_g .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _abebf ,_cbbe :=_agage .(*_aff .PdfIndirectObject );_cbbe {_dcea ,_ecgaa :=_abebf .PdfObject .(*_aff .PdfObjectDictionary );
if !_ecgaa {_adg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_cegdc ,_ecgaa :=_dcea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aff .PdfObjectInteger );
if !_ecgaa {_adg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cegdc ==2{return _geffg (_abebf );}else if *_cegdc ==3{return _efbb (_abebf );}else {return nil ,_g .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _fecefa ,_daab :=_agage .(*_aff .PdfObjectDictionary );
_daab {_gaage ,_efbg :=_fecefa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aff .PdfObjectInteger );if !_efbg {_adg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gaage ==2{return _geffg (_fecefa );}else if *_gaage ==3{return _efbb (_fecefa );
}else {return nil ,_g .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_adg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_agage );
return nil ,_g .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_aff .PdfObjectArray ;Matrix *_aff .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_egd :=&PdfAction {};_egd ._df =_aff .MakeIndirectObject (_aff .MakeDict ());return _egd ;};

// GetAction returns the PDF action for the annotation link.
func (_acfd *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _acfd ._dea !=nil {return _acfd ._dea ,nil ;};if _acfd .A ==nil {return nil ,nil ;};if _acfd ._cdf ==nil {return nil ,nil ;};_afa ,_gdg :=_acfd ._cdf .loadAction (_acfd .A );if _gdg !=nil {return nil ,_gdg ;
};_acfd ._dea =_afa ;return _acfd ._dea ,nil ;};func (_ggdca *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cfgd *PdfPageResources )GetPatternByName (keyName _aff .PdfObjectName )(*PdfPattern ,bool ){if _cfgd .Pattern ==nil {return nil ,false ;};_feddg ,_fceff :=_aff .TraceToDirectObject (_cfgd .Pattern ).(*_aff .PdfObjectDictionary );if !_fceff {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfgd .Pattern );
return nil ,false ;};if _eaegd :=_feddg .Get (keyName );_eaegd !=nil {_bbbb ,_bcgca :=_aebd (_eaegd );if _bcgca !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bcgca );
return nil ,false ;};return _bbbb ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_ddd *PdfActionNamed )ToPdfObject ()_aff .PdfObject {_ddd .PdfAction .ToPdfObject ();_dbed :=_ddd ._df ;_dbf :=_dbed .PdfObject .(*_aff .PdfObjectDictionary );_dbf .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeNamed )));_dbf .SetIfNotNil ("\u004e",_ddd .N );
return _dbed ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_aedfe *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bbfdc []_eee .TextEncoder ;var _dbga _eee .CMapEncoder ;if _cccbg :=_aedfe .baseFields ()._dcad ;_cccbg !=nil {_dbga =_eee .NewCMapEncoder ("",nil ,_cccbg );};_bcebf :=_aedfe .Encoder ();
if _bcebf !=nil {switch _egfdb :=_bcebf .(type ){case _eee .SimpleEncoder :_cccfb :=_egfdb .BaseName ();if _ ,_efede :=_fgdgb [_cccfb ];_efede {_bbfdc =append (_bbfdc ,_bcebf );};};};if len (_bbfdc )==0{if _aedfe .baseFields ()._dcad !=nil {_bbfdc =append (_bbfdc ,_dbga );
};if _bcebf !=nil {_bbfdc =append (_bbfdc ,_bcebf );};};var _efadb _af .Buffer ;var _abade int ;for _ ,_cggff :=range data {var _eceecg bool ;for _ ,_cadd :=range _bbfdc {if _agfb :=_cadd .Encode (string (_cggff ));len (_agfb )> 0{_efadb .Write (_agfb );
_eceecg =true ;break ;};};if !_eceecg {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cggff );
_abade ++;};};if _abade !=0{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_abade ,_aedfe ,_bbfdc );
};return _efadb .Bytes (),_abade ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _aff .PdfObject ;T3DV _aff .PdfObject ;T3DA _aff .PdfObject ;T3DI _aff .PdfObject ;T3DB _aff .PdfObject ;};

// L returns the value of the L component of the color.
func (_fgag *PdfColorLab )L ()float64 {return _fgag [0]};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_abbe PdfModel ;_cfegc _aff .PdfObject ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dcga PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_aff .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_abeb []_aff .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bcf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_ecfdg *Image )samplesAddPadding (_ggfaf []uint32 )[]uint32 {_gbbdd :=_gd .BytesPerLine (int (_ecfdg .Width ),int (_ecfdg .BitsPerComponent ),_ecfdg .ColorComponents )*(8/int (_ecfdg .BitsPerComponent ));_becgd :=_gbbdd *int (_ecfdg .Height );
if len (_ggfaf )==_becgd {return _ggfaf ;};_gdaeed :=make ([]uint32 ,_becgd );_ebcdg :=int (_ecfdg .Width )*_ecfdg .ColorComponents ;for _bcegf :=0;_bcegf < int (_ecfdg .Height );_bcegf ++{_fdca :=_bcegf *int (_ecfdg .Width );_bgbbf :=_bcegf *_gbbdd ;for _deca :=0;
_deca < _ebcdg ;_deca ++{_gdaeed [_bgbbf +_deca ]=_ggfaf [_fdca +_deca ];};};return _gdaeed ;};func (_ebgaa *PdfPattern )getDict ()*_aff .PdfObjectDictionary {if _cefab ,_geddg :=_ebgaa ._cfegc .(*_aff .PdfIndirectObject );_geddg {_acafad ,_bfdae :=_cefab .PdfObject .(*_aff .PdfObjectDictionary );
if !_bfdae {return nil ;};return _acafad ;}else if _gfbda ,_gaefc :=_ebgaa ._cfegc .(*_aff .PdfObjectStream );_gaefc {return _gfbda .PdfObjectDictionary ;}else {_adg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_ebgaa ._cfegc );
return nil ;};};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_aacag *PdfAnnotation )ToPdfObject ()_aff .PdfObject {_afab :=_aacag ._ccfb ;_cacg :=_afab .PdfObject .(*_aff .PdfObjectDictionary );_cacg .Clear ();_cacg .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0041\u006e\u006eo\u0074"));_cacg .SetIfNotNil ("\u0052\u0065\u0063\u0074",_aacag .Rect );
_cacg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aacag .Contents );_cacg .SetIfNotNil ("\u0050",_aacag .P );_cacg .SetIfNotNil ("\u004e\u004d",_aacag .NM );_cacg .SetIfNotNil ("\u004d",_aacag .M );_cacg .SetIfNotNil ("\u0046",_aacag .F );
_cacg .SetIfNotNil ("\u0041\u0050",_aacag .AP );_cacg .SetIfNotNil ("\u0041\u0053",_aacag .AS );_cacg .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_aacag .Border );_cacg .SetIfNotNil ("\u0043",_aacag .C );_cacg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aacag .StructParent );
_cacg .SetIfNotNil ("\u004f\u0043",_aacag .OC );return _afab ;};

// IsColored specifies if the pattern is colored.
func (_eabca *PdfTilingPattern )IsColored ()bool {if _eabca .PaintType !=nil &&*_eabca .PaintType ==1{return true ;};return false ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_ddgc *PdfReader )newPdfAnnotationHighlightFromDict (_cagd *_aff .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_bbde :=PdfAnnotationHighlight {};_baee ,_bdaf :=_ddgc .newPdfAnnotationMarkupFromDict (_cagd );
if _bdaf !=nil {return nil ,_bdaf ;};_bbde .PdfAnnotationMarkup =_baee ;_bbde .QuadPoints =_cagd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbde ,nil ;};func (_cgdg *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};
func (_afaf *PdfAppender )mergeResources (_defg ,_gffdg _aff .PdfObject ,_fccd map[_aff .PdfObjectName ]_aff .PdfObjectName )_aff .PdfObject {if _gffdg ==nil &&_defg ==nil {return nil ;};if _gffdg ==nil {return _defg ;};_feacd ,_bbbfd :=_aff .GetDict (_gffdg );
if !_bbbfd {return _defg ;};if _defg ==nil {_egcd :=_aff .MakeDict ();_egcd .Merge (_feacd );return _gffdg ;};_edce ,_bbbfd :=_aff .GetDict (_defg );if !_bbbfd {_adg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_edce =_aff .MakeDict ();};for _ ,_fcbb :=range _feacd .Keys (){if _dcc ,_bdge :=_fccd [_fcbb ];_bdge {_edce .Set (_dcc ,_feacd .Get (_fcbb ));}else {_edce .Set (_fcbb ,_feacd .Get (_fcbb ));};};return _edce ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eedfa *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_eedfa .NumInputs {_adg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_g .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _eedfa ._bfcae ==nil {_fbeagf :=_eedfa .processSamples ();if _fbeagf !=nil {return nil ,_fbeagf ;};};_faaef :=_eedfa .Encode ;
if _faaef ==nil {_faaef =[]float64 {};for _gbaa :=0;_gbaa < len (_eedfa .Size );_gbaa ++{_faaef =append (_faaef ,0);_faaef =append (_faaef ,float64 (_eedfa .Size [_gbaa ]-1));};};_ddbcb :=_eedfa .Decode ;if _ddbcb ==nil {_ddbcb =_eedfa .Range ;};_fbbfc :=make ([]int ,len (x ));
for _ffda :=0;_ffda < len (x );_ffda ++{_cbdge :=x [_ffda ];_bdff :=_cf .Min (_cf .Max (_cbdge ,_eedfa .Domain [2*_ffda ]),_eedfa .Domain [2*_ffda +1]);_ggdae :=_gd .LinearInterpolate (_bdff ,_eedfa .Domain [2*_ffda ],_eedfa .Domain [2*_ffda +1],_faaef [2*_ffda ],_faaef [2*_ffda +1]);
_cfcage :=_cf .Min (_cf .Max (_ggdae ,0),float64 (_eedfa .Size [_ffda ]-1));_fabgg :=int (_cf .Floor (_cfcage +0.5));if _fabgg < 0{_fabgg =0;}else if _fabgg > _eedfa .Size [_ffda ]{_fabgg =_eedfa .Size [_ffda ]-1;};_fbbfc [_ffda ]=_fabgg ;};_abec :=_fbbfc [0];
for _afff :=1;_afff < _eedfa .NumInputs ;_afff ++{_ffbfce :=_fbbfc [_afff ];for _dfeae :=0;_dfeae < _afff ;_dfeae ++{_ffbfce *=_eedfa .Size [_dfeae ];};_abec +=_ffbfce ;};_abec *=_eedfa .NumOutputs ;var _edaca []float64 ;for _edfeb :=0;_edfeb < _eedfa .NumOutputs ;
_edfeb ++{_eccf :=_abec +_edfeb ;if _eccf >=len (_eedfa ._bfcae ){_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_efbd :=_eedfa ._bfcae [_eccf ];_ddge :=_gd .LinearInterpolate (float64 (_efbd ),0,_cf .Pow (2,float64 (_eedfa .BitsPerSample )),_ddbcb [2*_edfeb ],_ddbcb [2*_edfeb +1]);_gfea :=_cf .Min (_cf .Max (_ddge ,_eedfa .Range [2*_edfeb ]),_eedfa .Range [2*_edfeb +1]);
_edaca =append (_edaca ,_gfea );};return _edaca ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _aff .PdfObject ;B _aff .PdfObject ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_eab *PdfAnnotation )GetContext ()PdfModel {if _eab ==nil {return nil ;};return _eab ._eefa ;};func (_cgfa *PdfAppender )replaceObject (_abcgg ,_gffba _aff .PdfObject ){switch _gcbc :=_abcgg .(type ){case *_aff .PdfIndirectObject :_cgfa ._fffa [_gffba ]=_gcbc .ObjectNumber ;
case *_aff .PdfObjectStream :_cgfa ._fffa [_gffba ]=_gcbc .ObjectNumber ;};};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_dagff *PdfReader )GetCatalogMetadata ()(_aff .PdfObject ,bool ){if _dagff ._dcadd ==nil {return nil ,false ;};_ffead :=_dagff ._dcadd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _ffead ,_ffead !=nil ;};

// GetVersion gets the document version.
func (_gaffd *PdfWriter )GetVersion ()_aff .Version {return _gaffd ._bgeecg };

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _aff .PdfObject ;Popup *PdfAnnotationPopup ;CA _aff .PdfObject ;RC _aff .PdfObject ;CreationDate _aff .PdfObject ;IRT _aff .PdfObject ;Subj _aff .PdfObject ;RT _aff .PdfObject ;IT _aff .PdfObject ;ExData _aff .PdfObject ;
};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bcdf :=NewPdfAnnotation ();_fcd :=&PdfAnnotationRichMedia {};_fcd .PdfAnnotation =_bcdf ;_bcdf .SetContext (_fcd );return _fcd ;};func _bdeaf (_ceead _aff .PdfObject )(*fontFile ,error ){_adg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ceead );
_caag :=&fontFile {};_ceead =_aff .TraceToDirectObject (_ceead );_cbbdf ,_cdfea :=_ceead .(*_aff .PdfObjectStream );if !_cdfea {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ceead );
return nil ,_aff .ErrTypeError ;};_adccf :=_cbbdf .PdfObjectDictionary ;_aegga ,_bgfc :=_aff .DecodeStream (_cbbdf );if _bgfc !=nil {return nil ,_bgfc ;};_eddf ,_cdfea :=_aff .GetNameVal (_adccf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cdfea {_caag ._ffca =_eddf ;
if _eddf =="\u0054\u0079\u0070\u0065\u0031\u0043"{_adg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_afcfad ,_ :=_aff .GetIntVal (_adccf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gaeag ,_ :=_aff .GetIntVal (_adccf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _afcfad > len (_aegga ){_afcfad =len (_aegga );
};if _afcfad +_gaeag > len (_aegga ){_gaeag =len (_aegga )-_afcfad ;};_dbggc :=_aegga [:_afcfad ];var _bdgg []byte ;if _gaeag > 0{_bdgg =_aegga [_afcfad :_afcfad +_gaeag ];};if _afcfad > 0&&_gaeag > 0{_dggce :=_caag .loadFromSegments (_dbggc ,_bdgg );if _dggce !=nil {return nil ,_dggce ;
};};return _caag ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _aff .PdfObject ;ColorSpace _aff .PdfObject ;Pattern _aff .PdfObject ;Shading _aff .PdfObject ;XObject _aff .PdfObject ;Font _aff .PdfObject ;ProcSet _aff .PdfObject ;Properties _aff .PdfObject ;_bdegd *_aff .PdfObjectDictionary ;
_cfdbe *PdfPageResourcesColorspaces ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_agfbc *PdfPage )SetContentStreams (cStreams []string ,encoder _aff .StreamEncoder )error {if len (cStreams )==0{_agfbc .Contents =nil ;return nil ;};if encoder ==nil {encoder =_aff .NewRawEncoder ();};var _dcfa []*_aff .PdfObjectStream ;for _ ,_cfedg :=range cStreams {_acbgc :=&_aff .PdfObjectStream {};
_bddfd :=encoder .MakeStreamDict ();_edddg ,_cfgc :=encoder .EncodeBytes ([]byte (_cfedg ));if _cfgc !=nil {return _cfgc ;};_bddfd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_edddg ))));_acbgc .PdfObjectDictionary =_bddfd ;
_acbgc .Stream =_edddg ;_dcfa =append (_dcfa ,_acbgc );};if len (_dcfa )==1{_agfbc .Contents =_dcfa [0];}else {_gbdde :=_aff .MakeArray ();for _ ,_dcgaa :=range _dcfa {_gbdde .Append (_dcgaa );};_agfbc .Contents =_gbdde ;};return nil ;};func (_cba *PdfReader )newPdfActionNamedFromDict (_gfgf *_aff .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gfgf .Get ("\u004e")},nil ;
};func _aedb (_gaffe *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gaffe }};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gcffg OutlineDest )ToPdfObject ()_aff .PdfObject {if (_gcffg .PageObj ==nil &&_gcffg .Page < 0)||_gcffg .Mode ==""{return _aff .MakeNull ();};_baebf :=_aff .MakeArray ();if _gcffg .PageObj !=nil {_baebf .Append (_gcffg .PageObj );}else {_baebf .Append (_aff .MakeInteger (_gcffg .Page ));
};_baebf .Append (_aff .MakeName (_gcffg .Mode ));switch _gcffg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_baebf .Append (_aff .MakeFloat (_gcffg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_baebf .Append (_aff .MakeFloat (_gcffg .X ));
case "\u0058\u0059\u005a":_baebf .Append (_aff .MakeFloat (_gcffg .X ));_baebf .Append (_aff .MakeFloat (_gcffg .Y ));_baebf .Append (_aff .MakeFloat (_gcffg .Zoom ));default:_baebf .Set (1,_aff .MakeName ("\u0046\u0069\u0074"));};return _baebf ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bdfb *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ParserMetadata gets the parser  metadata.
func (_fdddb *CompliancePdfReader )ParserMetadata ()_aff .ParserMetadata {if _fdddb ._cffae ==(_aff .ParserMetadata {}){_fdddb ._cffae ,_ =_fdddb ._gaece .ParserMetadata ();};return _fdddb ._cffae ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aebda .Lock ();defer _aebda .Unlock ();_aaaab =producer };

// Flags returns the field flags for the field accounting for any inherited flags.
func (_gcgd *PdfField )Flags ()FieldFlag {var _fdeba FieldFlag ;_afad ,_aebb :=_gcgd .inherit (func (_geecd *PdfField )bool {if _geecd .Ff !=nil {_fdeba =FieldFlag (*_geecd .Ff );return true ;};return false ;});if _aebb !=nil {_adg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_aebb );
};if !_afad {_adg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fdeba ;};type modelManager struct{_ceaea map[PdfModel ]_aff .PdfObject ;
_geefd map[_aff .PdfObject ]PdfModel ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_acbag *CompliancePdfReader )error ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _aff .PdfObject ;RichMediaContent _aff .PdfObject ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _eec .Permissions ;Algorithm EncryptionAlgorithm ;};func (_fgeda *PdfReader )buildPageList (_ceffg *_aff .PdfIndirectObject ,_cegef *_aff .PdfIndirectObject ,_ccbbb map[_aff .PdfObject ]struct{})error {if _ceffg ==nil {return nil ;
};if _ ,_fbca :=_ccbbb [_ceffg ];_fbca {_adg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ceffg .ObjectNumber );
return nil ;};_ccbbb [_ceffg ]=struct{}{};_gbff ,_afdgb :=_ceffg .PdfObject .(*_aff .PdfObjectDictionary );if !_afdgb {return _g .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_ecadd ,_afdgb :=(*_gbff ).Get ("\u0054\u0079\u0070\u0065").(*_aff .PdfObjectName );
if !_afdgb {if _gbff .Get ("\u004b\u0069\u0064\u0073")==nil {return _g .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_adg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_ecadd =_aff .MakeName ("\u0050\u0061\u0067e\u0073");_gbff .Set ("\u0054\u0079\u0070\u0065",_ecadd );};_adg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_ecadd ,_ceffg );
if *_ecadd =="\u0050\u0061\u0067\u0065"{_gfceag ,_bggae :=_fgeda .newPdfPageFromDict (_gbff );if _bggae !=nil {return _bggae ;};_gfceag .setContainer (_ceffg );if _cegef !=nil {_gbff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cegef );};_fgeda ._bfgfec =append (_fgeda ._bfgfec ,_ceffg );
_fgeda .PageList =append (_fgeda .PageList ,_gfceag );return nil ;};if *_ecadd !="\u0050\u0061\u0067e\u0073"{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_ecadd );
return _g .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _cegef !=nil {_gbff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cegef );};if !_fgeda ._gfgg {_dbgac :=_fgeda .traverseObjectData (_ceffg );if _dbgac !=nil {return _dbgac ;};};_adeca ,_cffb :=_fgeda ._gaece .Resolve (_gbff .Get ("\u004b\u0069\u0064\u0073"));
if _cffb !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cffb ;};var _facfa *_aff .PdfObjectArray ;
_facfa ,_afdgb =_adeca .(*_aff .PdfObjectArray );if !_afdgb {_eecaa ,_beabb :=_adeca .(*_aff .PdfIndirectObject );if !_beabb {return _g .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_facfa ,_afdgb =_eecaa .PdfObject .(*_aff .PdfObjectArray );if !_afdgb {return _g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_adg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_facfa );
for _feefc ,_bfcgf :=range _facfa .Elements (){_fcfc ,_gbgdd :=_aff .GetIndirect (_bfcgf );if !_gbgdd {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_fcfc );
return _g .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_facfa .Set (_feefc ,_fcfc );_cffb =_fgeda .buildPageList (_fcfc ,_ceffg ,_ccbbb );if _cffb !=nil {return _cffb ;
};};return nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_fcagd *PdfWriter )SetCatalogMetadata (meta _aff .PdfObject )error {if meta ==nil {_fcagd ._cdccb .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bdbdf ,_defd :=_aff .GetStream (meta );if !_defd {return _g .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_fcagd .addObject (_bdbdf );_fcagd ._cdccb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bdbdf );return nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_agfg *Image )Resample (targetBitsPerComponent int64 ){if _agfg .BitsPerComponent ==targetBitsPerComponent {return ;};_faebd :=_agfg .GetSamples ();if targetBitsPerComponent < _agfg .BitsPerComponent {_fdcf :=_agfg .BitsPerComponent -targetBitsPerComponent ;
for _cgbdg :=range _faebd {_faebd [_cgbdg ]>>=uint (_fdcf );};}else if targetBitsPerComponent > _agfg .BitsPerComponent {_dafbe :=targetBitsPerComponent -_agfg .BitsPerComponent ;for _aagge :=range _faebd {_faebd [_aagge ]<<=uint (_dafbe );};};_agfg .BitsPerComponent =targetBitsPerComponent ;
if _agfg .BitsPerComponent < 8{_agfg .resampleLowBits (_faebd );return ;};_bddca :=_gd .BytesPerLine (int (_agfg .Width ),int (_agfg .BitsPerComponent ),_agfg .ColorComponents );_ffdfc :=make ([]byte ,_bddca *int (_agfg .Height ));var (_gbecd ,_adddc ,_defab ,_ebeef int ;
_beecf uint32 ;);for _defab =0;_defab < int (_agfg .Height );_defab ++{_gbecd =_defab *_bddca ;_adddc =(_defab +1)*_bddca -1;_cccaeg :=_aae .ResampleUint32 (_faebd [_gbecd :_adddc ],int (targetBitsPerComponent ),8);for _ebeef ,_beecf =range _cccaeg {_ffdfc [_ebeef +_gbecd ]=byte (_beecf );
};};_agfg .Data =_ffdfc ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dcfcf *PdfField )FullName ()(string ,error ){var _beecc _af .Buffer ;_ffbfc :=[]string {};if _dcfcf .T !=nil {_ffbfc =append (_ffbfc ,_dcfcf .T .Decoded ());};_cdcg :=map[*PdfField ]bool {};_cdcg [_dcfcf ]=true ;_ggbg :=_dcfcf .Parent ;for _ggbg !=nil {if _ ,_bggd :=_cdcg [_ggbg ];
_bggd {return _beecc .String (),_g .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ggbg .T ==nil {return _beecc .String (),_g .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_ffbfc =append (_ffbfc ,_ggbg .T .Decoded ());_cdcg [_ggbg ]=true ;_ggbg =_ggbg .Parent ;};for _dada :=len (_ffbfc )-1;_dada >=0;_dada --{_beecc .WriteString (_ffbfc [_dada ]);if _dada > 0{_beecc .WriteString ("\u002e");};};return _beecc .String (),nil ;
};func _cgdee ()*modelManager {_ddcd :=modelManager {};_ddcd ._ceaea =map[PdfModel ]_aff .PdfObject {};_ddcd ._geefd =map[_aff .PdfObject ]PdfModel {};return &_ddcd ;};func _ffgg (_edbfg *_aff .PdfObjectDictionary ,_dcfbg *fontCommon )(*pdfCIDFontType0 ,error ){if _dcfbg ._fbged !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_adg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dcfbg );
return nil ,_aff .ErrRangeError ;};_bgfg :=_dcbc (_dcfbg );_bdfbg ,_agcd :=_aff .GetDict (_edbfg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_agcd {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dcfbg );
return nil ,ErrRequiredAttributeMissing ;};_bgfg .CIDSystemInfo =_bdfbg ;_bgfg .DW =_edbfg .Get ("\u0044\u0057");_bgfg .W =_edbfg .Get ("\u0057");_bgfg .DW2 =_edbfg .Get ("\u0044\u0057\u0032");_bgfg .W2 =_edbfg .Get ("\u0057\u0032");_bgfg ._fgbc =1000.0;
if _cdaeb ,_gcbfd :=_aff .GetNumberAsFloat (_bgfg .DW );_gcbfd ==nil {_bgfg ._fgbc =_cdaeb ;};_cfbab ,_aggag :=_adffed (_bgfg .W );if _aggag !=nil {return nil ,_aggag ;};if _cfbab ==nil {_cfbab =map[_eee .CharCode ]float64 {};};_bgfg ._egfb =_cfbab ;return _bgfg ,nil ;
};func (_cdcd *PdfAcroForm )fill (_fbga FieldValueProvider ,_faae FieldAppearanceGenerator )error {if _cdcd ==nil {return nil ;};_cacgf ,_ffedb :=_fbga .FieldValues ();if _ffedb !=nil {return _ffedb ;};for _ ,_eedeb :=range _cdcd .AllFields (){_cgbda :=_eedeb .PartialName ();
_gdfg ,_dbcdb :=_cacgf [_cgbda ];if !_dbcdb {if _gefc ,_bcdb :=_eedeb .FullName ();_bcdb ==nil {_gdfg ,_dbcdb =_cacgf [_gefc ];};};if !_dbcdb {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cgbda );
continue ;};if _fbbgd :=_acgfb (_eedeb ,_gdfg );_fbbgd !=nil {return _fbbgd ;};if _faae ==nil {continue ;};for _ ,_cdbc :=range _eedeb .Annotations {_daaa ,_gefaa :=_faae .GenerateAppearanceDict (_cdcd ,_eedeb ,_cdbc );if _gefaa !=nil {return _gefaa ;};
_cdbc .AP =_daaa ;_cdbc .ToPdfObject ();};};return nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_aff .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// GetPage returns the PdfPage model for the specified page number.
func (_gdbg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _gdbg ._gaece .GetCrypter ()!=nil &&!_gdbg ._gaece .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_gdbg ._bfgfec )< pageNumber {return nil ,_g .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_bcca :=pageNumber -1;if _bcca < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_ebfg :=_gdbg .PageList [_bcca ];
return _ebfg ,nil ;};

// ToInteger convert to an integer format.
func (_babd *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_bfae :=_cf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bfae *_babd .R ()),uint32 (_bfae *_babd .G ()),uint32 (_bfae *_babd .B ())};};

// HasFontByName checks if has font resource by name.
func (_abfcc *PdfPage )HasFontByName (name _aff .PdfObjectName )bool {_gfde ,_dcdbg :=_abfcc .Resources .Font .(*_aff .PdfObjectDictionary );if !_dcdbg {return false ;};if _eeadf :=_gfde .Get (name );_eeadf !=nil {return true ;};return false ;};func (_fcabg *PdfWriter )adjustXRefAffectedVersion (_ffcb bool ){if _ffcb &&_fcabg ._bgeecg .Major ==1&&_fcabg ._bgeecg .Minor < 5{_fcabg ._bgeecg .Minor =5;
};};

// A returns the value of the A component of the color.
func (_gebc *PdfColorLab )A ()float64 {return _gebc [1]};

// DecodeArray returns the component range values for the Separation colorspace.
func (_eca *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetCerts returns the signature certificate chain.
func (_aaeb *PdfSignature )GetCerts ()([]*_fb .Certificate ,error ){var _afdbaa []func ()([]*_fb .Certificate ,error );switch _fgdga ,_ :=_aff .GetNameVal (_aaeb .SubFilter );_fgdga {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_afdbaa =append (_afdbaa ,_aaeb .extractChainFromPKCS7 ,_aaeb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_afdbaa =append (_afdbaa ,_aaeb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_afdbaa =append (_afdbaa ,_aaeb .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_fgdga );};for _ ,_fbbbg :=range _afdbaa {_cbfebc ,_egbeg :=_fbbbg ();if _egbeg !=nil {return nil ,_egbeg ;
};if len (_cbfebc )> 0{return _cbfebc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gbecg *PdfOutlineTreeNode )ToPdfObject ()_aff .PdfObject {return _gbecg .GetContext ().ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_dge *PdfAnnotationWatermark )ToPdfObject ()_aff .PdfObject {_dge .PdfAnnotation .ToPdfObject ();_aef :=_dge ._ccfb ;_fdc :=_aef .PdfObject .(*_aff .PdfObjectDictionary );_fdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_fdc .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dge .FixedPrint );return _aef ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_dgcbb :=&PdfFilespec {};_dgcbb ._dfefa =_aff .MakeIndirectObject (_aff .MakeDict ());return _dgcbb ;};type fontCommon struct{_abed string ;_fbged string ;_edebf string ;_ccbfg _aff .PdfObject ;_dcad *_da .CMap ;_ggca *PdfFontDescriptor ;
_acfg int64 ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_eeff *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eeff .AlternateSpace ==nil {return nil ,_g .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _eeff .AlternateSpace .ColorToRGB (color );};func (_cbbf *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _becea []*PdfFieldSignature ;for _ ,_gdgffa :=range _cbbf .AllFields (){switch _dcfe :=_gdgffa .GetContext ().(type ){case *PdfFieldSignature :_eagdd :=_dcfe ;
_becea =append (_becea ,_eagdd );};};return _becea ;};func (_fcbde *PdfWriter )setCatalogVersion (){_fcbde ._cdccb .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_aff .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_fcbde ._bgeecg .Major ,_fcbde ._bgeecg .Minor )));
};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cbdd *PdfColorspaceLab )ToPdfObject ()_aff .PdfObject {_beeef :=_aff .MakeArray ();_beeef .Append (_aff .MakeName ("\u004c\u0061\u0062"));_bcdfc :=_aff .MakeDict ();if _cbdd .WhitePoint !=nil {_fdgac :=_aff .MakeArray (_aff .MakeFloat (_cbdd .WhitePoint [0]),_aff .MakeFloat (_cbdd .WhitePoint [1]),_aff .MakeFloat (_cbdd .WhitePoint [2]));
_bcdfc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fdgac );}else {_adg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cbdd .BlackPoint !=nil {_ecddb :=_aff .MakeArray (_aff .MakeFloat (_cbdd .BlackPoint [0]),_aff .MakeFloat (_cbdd .BlackPoint [1]),_aff .MakeFloat (_cbdd .BlackPoint [2]));_bcdfc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ecddb );
};if _cbdd .Range !=nil {_ecge :=_aff .MakeArray (_aff .MakeFloat (_cbdd .Range [0]),_aff .MakeFloat (_cbdd .Range [1]),_aff .MakeFloat (_cbdd .Range [2]),_aff .MakeFloat (_cbdd .Range [3]));_bcdfc .Set ("\u0052\u0061\u006eg\u0065",_ecge );};_beeef .Append (_bcdfc );
if _cbdd ._bccfg !=nil {_cbdd ._bccfg .PdfObject =_beeef ;return _cbdd ._bccfg ;};return _beeef ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ddgac *PdfPage )Duplicate ()*PdfPage {_abbge :=*_ddgac ;_abbge ._bbdac =_aff .MakeDict ();_abbge ._fage =_aff .MakeIndirectObject (_abbge ._bbdac );_abbge ._bfce =*_abbge ._bbdac ;return &_abbge ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_abfee *PdfInfo )AddCustomInfo (name string ,value string )error {if _abfee ._cgbc ==nil {_abfee ._cgbc =_aff .MakeDict ();};if _ ,_acaa :=_abcgc [name ];_acaa {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_abfee ._cgbc .SetIfNotNil (*_aff .MakeName (name ),_aff .MakeString (value ));return nil ;};

// SetName sets the `Name` field of the signature.
func (_egggg *PdfSignature )SetName (name string ){_egggg .Name =_aff .MakeString (name )};func (_ffccb *PdfPage )setContainer (_gcgbe *_aff .PdfIndirectObject ){_gcgbe .PdfObject =_ffccb ._bbdac ;_ffccb ._fage =_gcgbe ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _aff .PdfObject )(*PdfOutputIntent ,error ){_egbb :=&PdfOutputIntent {};if _eggfcd :=_egbb .ParsePdfObject (object );_eggfcd !=nil {return nil ,_eggfcd ;};return _egbb ,nil ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _aff .PdfObject ;Mac _aff .PdfObject ;Unix _aff .PdfObject ;NewWindow _aff .PdfObject ;};func _efecb (_cegfa *_gd .ImageBase )(_ccbba Image ){_ccbba .Width =int64 (_cegfa .Width );_ccbba .Height =int64 (_cegfa .Height );
_ccbba .BitsPerComponent =int64 (_cegfa .BitsPerComponent );_ccbba .ColorComponents =_cegfa .ColorComponents ;_ccbba .Data =_cegfa .Data ;_ccbba ._edgef =_cegfa .Decode ;_ccbba ._becb =_cegfa .Alpha ;return _ccbba ;};func _ecgcg ()string {_aebda .Lock ();
defer _aebda .Unlock ();return _cacc };func (_gbegg *PdfWriter )writeObjectsInStreams (_fbgad map[_aff .PdfObject ]bool )error {for _ ,_efdab :=range _gbegg ._babcd {if _gefea :=_fbgad [_efdab ];_gefea {continue ;};_eegge :=int64 (0);switch _bbbca :=_efdab .(type ){case *_aff .PdfIndirectObject :_eegge =_bbbca .ObjectNumber ;
case *_aff .PdfObjectStream :_eegge =_bbbca .ObjectNumber ;case *_aff .PdfObjectStreams :_eegge =_bbbca .ObjectNumber ;default:_adg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_efdab );
return ErrTypeCheck ;};if _gbegg ._fcgf !=nil &&_efdab !=_gbegg ._fdedd {_feeg :=_gbegg ._fcgf .Encrypt (_efdab ,_eegge ,0);if _feeg !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_feeg );
return _feeg ;};};_gbegg .writeObject (int (_eegge ),_efdab );};return nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_addb :=NewPdfAnnotation ();_efaa :=&PdfAnnotationPrinterMark {};_efaa .PdfAnnotation =_addb ;_addb .SetContext (_efaa );return _efaa ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_fgagga *XObjectImage )SetFilter (encoder _aff .StreamEncoder )error {_abaa :=_fgagga .Stream ;_ageac ,_fdeeff :=_fgagga .Filter .DecodeBytes (_abaa );if _fdeeff !=nil {return _fdeeff ;};_fgagga .Filter =encoder ;encoder .UpdateParams (_fgagga .getParamsDict ());
_abaa ,_fdeeff =encoder .EncodeBytes (_ageac );if _fdeeff !=nil {return _fdeeff ;};_fgagga .Stream =_abaa ;return nil ;};func (_face *PdfReader )loadAnnotations (_cbdba _aff .PdfObject )([]*PdfAnnotation ,error ){_agebc ,_dbaaed :=_aff .GetArray (_cbdba );
if !_dbaaed {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _befecb []*PdfAnnotation ;for _ ,_gbgd :=range _agebc .Elements (){_gbgd =_aff .ResolveReference (_gbgd );
if _ ,_ffdeg :=_gbgd .(*_aff .PdfObjectNull );_ffdeg {continue ;};_afdd ,_fdfc :=_gbgd .(*_aff .PdfObjectDictionary );_dadef ,_cbffd :=_gbgd .(*_aff .PdfIndirectObject );if _fdfc {_dadef =&_aff .PdfIndirectObject {};_dadef .PdfObject =_afdd ;}else {if !_cbffd {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_edcedg ,_cagce :=_face .newPdfAnnotationFromIndirectObject (_dadef );if _cagce !=nil {return nil ,_cagce ;};switch _cdcc :=_edcedg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ffbbce :=range _face .AcroForm .AllFields (){if _ffbbce ._dfbfd ==_cdcc .Parent {_cdcc ._afae =_ffbbce ;
break ;};};};if _edcedg !=nil {_befecb =append (_befecb ,_edcedg );};};return _befecb ,nil ;};func (_geef *PdfReader )newPdfAnnotationPolygonFromDict (_cdgeg *_aff .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_bba :=PdfAnnotationPolygon {};_cec ,_gde :=_geef .newPdfAnnotationMarkupFromDict (_cdgeg );
if _gde !=nil {return nil ,_gde ;};_bba .PdfAnnotationMarkup =_cec ;_bba .Vertices =_cdgeg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bba .LE =_cdgeg .Get ("\u004c\u0045");_bba .BS =_cdgeg .Get ("\u0042\u0053");_bba .IC =_cdgeg .Get ("\u0049\u0043");
_bba .BE =_cdgeg .Get ("\u0042\u0045");_bba .IT =_cdgeg .Get ("\u0049\u0054");_bba .Measure =_cdgeg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bba ,nil ;};func (_dca *PdfReader )newPdfActionSoundFromDict (_bde *_aff .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bde .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bde .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bde .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bde .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bde .Get ("\u004d\u0069\u0078")},nil ;
};func _eead (_cagc []byte )[]byte {const _cbeeg =52845;const _dfcf =22719;_bfebb :=55665;for _ ,_affcf :=range _cagc [:4]{_bfebb =(int (_affcf )+_bfebb )*_cbeeg +_dfcf ;};_acdb :=make ([]byte ,len (_cagc )-4);for _dabc ,_cabb :=range _cagc [4:]{_acdb [_dabc ]=byte (int (_cabb )^_bfebb >>8);
_bfebb =(int (_cabb )+_bfebb )*_cbeeg +_dfcf ;};return _acdb ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gadba FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gadba .Mask ()&^fl .Mask ())};func (_adfg *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _adfg ._ggca };

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dfgdg *PdfFontDescriptor )ToPdfObject ()_aff .PdfObject {_dcefc :=_aff .MakeDict ();if _dfgdg ._cade ==nil {_dfgdg ._cade =&_aff .PdfIndirectObject {};};_dfgdg ._cade .PdfObject =_dcefc ;_dcefc .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dfgdg .FontName !=nil {_dcefc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfgdg .FontName );};if _dfgdg .FontFamily !=nil {_dcefc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dfgdg .FontFamily );};if _dfgdg .FontStretch !=nil {_dcefc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dfgdg .FontStretch );
};if _dfgdg .FontWeight !=nil {_dcefc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dfgdg .FontWeight );};if _dfgdg .Flags !=nil {_dcefc .Set ("\u0046\u006c\u0061g\u0073",_dfgdg .Flags );};if _dfgdg .FontBBox !=nil {_dcefc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dfgdg .FontBBox );
};if _dfgdg .ItalicAngle !=nil {_dcefc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dfgdg .ItalicAngle );};if _dfgdg .Ascent !=nil {_dcefc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dfgdg .Ascent );};if _dfgdg .Descent !=nil {_dcefc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dfgdg .Descent );
};if _dfgdg .Leading !=nil {_dcefc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dfgdg .Leading );};if _dfgdg .CapHeight !=nil {_dcefc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dfgdg .CapHeight );};if _dfgdg .XHeight !=nil {_dcefc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dfgdg .XHeight );
};if _dfgdg .StemV !=nil {_dcefc .Set ("\u0053\u0074\u0065m\u0056",_dfgdg .StemV );};if _dfgdg .StemH !=nil {_dcefc .Set ("\u0053\u0074\u0065m\u0048",_dfgdg .StemH );};if _dfgdg .AvgWidth !=nil {_dcefc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dfgdg .AvgWidth );
};if _dfgdg .MaxWidth !=nil {_dcefc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dfgdg .MaxWidth );};if _dfgdg .MissingWidth !=nil {_dcefc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dfgdg .MissingWidth );};
if _dfgdg .FontFile !=nil {_dcefc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dfgdg .FontFile );};if _dfgdg .FontFile2 !=nil {_dcefc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dfgdg .FontFile2 );};if _dfgdg .FontFile3 !=nil {_dcefc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dfgdg .FontFile3 );
};if _dfgdg .CharSet !=nil {_dcefc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dfgdg .CharSet );};if _dfgdg .Style !=nil {_dcefc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfgdg .FontName );};if _dfgdg .Lang !=nil {_dcefc .Set ("\u004c\u0061\u006e\u0067",_dfgdg .Lang );
};if _dfgdg .FD !=nil {_dcefc .Set ("\u0046\u0044",_dfgdg .FD );};if _dfgdg .CIDSet !=nil {_dcefc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dfgdg .CIDSet );};return _dfgdg ._cade ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gecd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_abce pdfFontSimple )GetCharMetrics (code _eee .CharCode )(_bcd .CharMetrics ,bool ){if _edfdb ,_dggfc :=_abce ._ecgd [code ];_dggfc {return _bcd .CharMetrics {Wx :_edfdb },true ;};if _bcd .IsStdFont (_bcd .StdFontName (_abce ._abed )){return _bcd .CharMetrics {Wx :250},true ;
};return _bcd .CharMetrics {},false ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _aff .PdfObject ;};func _abegfg (_dbgda *_aff .PdfObjectDictionary )(*PdfShadingType4 ,error ){_afdac :=PdfShadingType4 {};_agdga :=_dbgda .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _agdga ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebgdd ,_decec :=_agdga .(*_aff .PdfObjectInteger );if !_decec {_adg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agdga );
return nil ,_aff .ErrTypeError ;};_afdac .BitsPerCoordinate =_ebgdd ;_agdga =_dbgda .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _agdga ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ebgdd ,_decec =_agdga .(*_aff .PdfObjectInteger );if !_decec {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_agdga );
return nil ,_aff .ErrTypeError ;};_afdac .BitsPerComponent =_ebgdd ;_agdga =_dbgda .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _agdga ==nil {_adg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebgdd ,_decec =_agdga .(*_aff .PdfObjectInteger );if !_decec {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_agdga );
return nil ,_aff .ErrTypeError ;};_afdac .BitsPerComponent =_ebgdd ;_agdga =_dbgda .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _agdga ==nil {_adg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gabbg ,_decec :=_agdga .(*_aff .PdfObjectArray );if !_decec {_adg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agdga );
return nil ,_aff .ErrTypeError ;};_afdac .Decode =_gabbg ;_agdga =_dbgda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _agdga ==nil {_adg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_afdac .Function =[]PdfFunction {};if _agbg ,_beac :=_agdga .(*_aff .PdfObjectArray );_beac {for _ ,_acgac :=range _agbg .Elements (){_dgbb ,_faedb :=_fdfeg (_acgac );if _faedb !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_faedb );
return nil ,_faedb ;};_afdac .Function =append (_afdac .Function ,_dgbb );};}else {_fccca ,_dgcdf :=_fdfeg (_agdga );if _dgcdf !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgcdf );
return nil ,_dgcdf ;};_afdac .Function =append (_afdac .Function ,_fccca );};return &_afdac ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecbcfg *PdfShadingType1 )ToPdfObject ()_aff .PdfObject {_ecbcfg .PdfShading .ToPdfObject ();_caaeg ,_cbcc :=_ecbcfg .getShadingDict ();if _cbcc !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecbcfg .Domain !=nil {_caaeg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ecbcfg .Domain );};if _ecbcfg .Matrix !=nil {_caaeg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ecbcfg .Matrix );};if _ecbcfg .Function !=nil {if len (_ecbcfg .Function )==1{_caaeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecbcfg .Function [0].ToPdfObject ());
}else {_eagf :=_aff .MakeArray ();for _ ,_fcacc :=range _ecbcfg .Function {_eagf .Append (_fcacc .ToPdfObject ());};_caaeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eagf );};};return _ecbcfg ._bdacg ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cfcfg []byte )(_fdddc int ,_dfdfg error );};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_efefa *PdfPage )AppendContentStream (contentStr string )error {_cdca ,_cbdbb :=_efefa .GetContentStreams ();if _cbdbb !=nil {return _cbdbb ;};if len (_cdca )==0{_cdca =[]string {contentStr };return _efefa .SetContentStreams (_cdca ,_aff .NewFlateEncoder ());
};var _dcdbe _af .Buffer ;_dcdbe .WriteString (_cdca [len (_cdca )-1]);_dcdbe .WriteString ("\u000a");_dcdbe .WriteString (contentStr );_cdca [len (_cdca )-1]=_dcdbe .String ();return _efefa .SetContentStreams (_cdca ,_aff .NewFlateEncoder ());};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_efa :=NewPdfAnnotation ();_fff :=&PdfAnnotationText {};_fff .PdfAnnotation =_efa ;_fff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efa .SetContext (_fff );return _fff ;};func (_gfc *PdfReader )newPdfActionGotoFromDict (_gea *_aff .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gea .Get ("\u0044")},nil ;
};

// GetNumComponents returns the number of color components (3 for RGB).
func (_bbfa *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ImageToRGB convert an indexed image to RGB.
func (_acdf *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_acdf .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_gcafb :=_gd .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._becb ,img ._edgef );_deb :=_aae .NewReader (img .getBase ());_cceb :=_aae .NewWriter (_gcafb );var (_fabdb uint32 ;_gaaec int ;_gabdf error ;);for {_fabdb ,_gabdf =_deb .ReadSample ();
if _gabdf ==_ega .EOF {break ;}else if _gabdf !=nil {return img ,_gabdf ;};_gaaec =int (_fabdb );_adg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gaaec ,N ,len (_acdf ._ecfb ));
if (_gaaec +1)*N > len (_acdf ._ecfb ){_gaaec =len (_acdf ._ecfb )/N -1;_adg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gaaec );if _gaaec < 0{_adg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _afcc :=_gaaec *N ;_afcc < (_gaaec +1)*N ;_afcc ++{if _gabdf =_cceb .WriteSample (uint32 (_acdf ._ecfb [_afcc ]));_gabdf !=nil {return img ,_gabdf ;};};};return _acdf .Base .ImageToRGB (_efecb (&_gcafb ));};

// SetLocation sets the `Location` field of the signature.
func (_eega *PdfSignature )SetLocation (location string ){_eega .Location =_aff .MakeString (location )};func (_gadg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// IsCID returns true if the underlying font is CID.
func (_geecgg *PdfFont )IsCID ()bool {return _geecgg .baseFields ().isCIDFont ()};const (_egde =0x00001;_edbg =0x00002;_cbda =0x00004;_fbabe =0x00008;_gffbb =0x00020;_degcc =0x00040;_ecbde =0x10000;_gfdfg =0x20000;_dedg =0x40000;);func (_agbfg PdfFont )actualFont ()pdfFont {if _agbfg ._gebd ==nil {_adg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agbfg );
};return _agbfg ._gebd ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bbgcg *PdfReader )GetOutlines ()(*Outline ,error ){if _bbgcg ==nil {return nil ,_g .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_faeff :=_bbgcg .GetOutlineTree ();if _faeff ==nil {return nil ,_g .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _edeadc func (_dbced *PdfOutlineTreeNode ,_cgge *[]*OutlineItem );_edeadc =func (_abdcb *PdfOutlineTreeNode ,_egebbg *[]*OutlineItem ){if _abdcb ==nil {return ;};if _abdcb ._gecd ==nil {_adg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ecgfb *OutlineItem ;if _eafgf ,_gbada :=_abdcb ._gecd .(*PdfOutlineItem );_gbada {_agab :=_eafgf .Dest ;if (_agab ==nil ||_aff .IsNullObject (_agab ))&&_eafgf .A !=nil {if _acafd ,_gfcgf :=_aff .GetDict (_eafgf .A );_gfcgf {if _dbedd ,_ccebb :=_aff .GetArray (_acafd .Get ("\u0044"));
_ccebb {_agab =_dbedd ;}else {_afde ,_ebabgd :=_aff .GetString (_acafd .Get ("\u0044"));if !_ebabgd {return ;};_egace ,_ebabgd :=_bbgcg ._dcadd .Get ("\u004e\u0061\u006de\u0073").(*_aff .PdfObjectReference );if !_ebabgd {return ;};_afafg ,_gbecc :=_bbgcg ._gaece .LookupByReference (*_egace );
if _gbecc !=nil {_adg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_gbecc .Error ());
return ;};_acbf ,_ebabgd :=_afafg .(*_aff .PdfIndirectObject );if !_ebabgd {return ;};_aabad :=map[_aff .PdfObject ]struct{}{};_gbecc =_bbgcg .buildNameNodes (_acbf ,_aabad );if _gbecc !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_gbecc .Error ());
return ;};for _eeca :=range _aabad {_cbga ,_befge :=_aff .GetDict (_eeca );if !_befge {continue ;};_fbafa ,_befge :=_aff .GetArray (_cbga .Get ("\u004e\u0061\u006de\u0073"));if !_befge {continue ;};for _ffccg ,_aacf :=range _fbafa .Elements (){switch _aacf .(type ){case *_aff .PdfObjectString :if _aacf .String ()==_afde .String (){if _bfafg :=_fbafa .Get (_ffccg +1);
_bfafg !=nil {if _gaged ,_cgedg :=_aff .GetDict (_bfafg );_cgedg {_agab =_gaged .Get ("\u0044");break ;};};};};};};};};};var _gaebe OutlineDest ;if _agab !=nil &&!_aff .IsNullObject (_agab ){if _fedc ,_fdada :=_dfede (_agab ,_bbgcg );_fdada ==nil {_gaebe =*_fedc ;
}else {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_agab ,_fdada );
};};_ecgfb =NewOutlineItem (_eafgf .Title .Decoded (),_gaebe );*_egebbg =append (*_egebbg ,_ecgfb );if _eafgf .Next !=nil {_edeadc (_eafgf .Next ,_egebbg );};};if _abdcb .First !=nil {if _ecgfb !=nil {_egebbg =&_ecgfb .Entries ;};_edeadc (_abdcb .First ,_egebbg );
};};_facg :=NewOutline ();_edeadc (_faeff ,&_facg .Entries );return _facg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cedc *PdfAnnotationFileAttachment )ToPdfObject ()_aff .PdfObject {_cedc .PdfAnnotation .ToPdfObject ();_dfbec :=_cedc ._ccfb ;_feca :=_dfbec .PdfObject .(*_aff .PdfObjectDictionary );_cedc .PdfAnnotationMarkup .appendToPdfDictionary (_feca );_feca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_feca .SetIfNotNil ("\u0046\u0053",_cedc .FS );_feca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cedc .Name );return _dfbec ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aff .PdfObject ;};func _dcge (_bbbdb *_aff .PdfIndirectObject )(*PdfOutline ,error ){_daea ,_cccga :=_bbbdb .PdfObject .(*_aff .PdfObjectDictionary );if !_cccga {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bbefg :=NewPdfOutline ();if _bfbbd :=_daea .Get ("\u0054\u0079\u0070\u0065");_bfbbd !=nil {_ecdad ,_bbfgd :=_bfbbd .(*_aff .PdfObjectName );if _bbfgd {if *_ecdad !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ecdad );
};};};if _bcea :=_daea .Get ("\u0043\u006f\u0075n\u0074");_bcea !=nil {_dbfgg ,_cfecf :=_aff .GetNumberAsInt64 (_bcea );if _cfecf !=nil {return nil ,_cfecf ;};_bbefg .Count =&_dbfgg ;};return _bbefg ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_bgeb *pdfFontType0 )ToPdfObject ()_aff .PdfObject {if _bgeb ._aaegb ==nil {_bgeb ._aaegb =&_aff .PdfIndirectObject {};};_cddg :=_bgeb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bgeb ._aaegb .PdfObject =_cddg ;if _bgeb .Encoding !=nil {_cddg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bgeb .Encoding );
}else if _bgeb ._faggb !=nil {_cddg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bgeb ._faggb .ToPdfObject ());};if _bgeb .DescendantFont !=nil {_cddg .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_aff .MakeArray (_bgeb .DescendantFont .ToPdfObject ()));
};return _bgeb ._aaegb ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_aff .PdfIndirectObject ;SV *_aff .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_gafcf *PdfPageResources )ToPdfObject ()_aff .PdfObject {_ffdgd :=_gafcf ._bdegd ;_ffdgd .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gafcf .ExtGState );if _gafcf ._cfdbe !=nil {_gafcf .ColorSpace =_gafcf ._cfdbe .ToPdfObject ();
};_ffdgd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gafcf .ColorSpace );_ffdgd .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_gafcf .Pattern );_ffdgd .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gafcf .Shading );
_ffdgd .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_gafcf .XObject );_ffdgd .SetIfNotNil ("\u0046\u006f\u006e\u0074",_gafcf .Font );_ffdgd .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_gafcf .ProcSet );_ffdgd .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_gafcf .Properties );
return _ffdgd ;};func _ffcgg (_gecaae *_aff .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fbdee :=PdfShadingType3 {};_dafe :=_gecaae .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dafe ==nil {_adg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bcbe ,_caaae :=_dafe .(*_aff .PdfObjectArray );if !_caaae {_adg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dafe );
return nil ,_aff .ErrTypeError ;};if _bcbe .Len ()!=6{_adg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bcbe .Len ());return nil ,ErrInvalidAttribute ;
};_fbdee .Coords =_bcbe ;if _daffa :=_gecaae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_daffa !=nil {_daffa =_aff .TraceToDirectObject (_daffa );_edgdd ,_agggc :=_daffa .(*_aff .PdfObjectArray );if !_agggc {_adg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daffa );
return nil ,_aff .ErrTypeError ;};_fbdee .Domain =_edgdd ;};_dafe =_gecaae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dafe ==nil {_adg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fbdee .Function =[]PdfFunction {};if _bcaagg ,_ddfcf :=_dafe .(*_aff .PdfObjectArray );_ddfcf {for _ ,_efgc :=range _bcaagg .Elements (){_aeacc ,_degdd :=_fdfeg (_efgc );if _degdd !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_degdd );
return nil ,_degdd ;};_fbdee .Function =append (_fbdee .Function ,_aeacc );};}else {_cgcgc ,_begbb :=_fdfeg (_dafe );if _begbb !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_begbb );
return nil ,_begbb ;};_fbdee .Function =append (_fbdee .Function ,_cgcgc );};if _dfecb :=_gecaae .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dfecb !=nil {_dfecb =_aff .TraceToDirectObject (_dfecb );_fggbe ,_fefgc :=_dfecb .(*_aff .PdfObjectArray );if !_fefgc {_adg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfecb );
return nil ,_aff .ErrTypeError ;};if _fggbe .Len ()!=2{_adg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fggbe .Len ());return nil ,ErrInvalidAttribute ;
};_fbdee .Extend =_fggbe ;};return &_fbdee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aaeg *PdfAnnotationUnderline )ToPdfObject ()_aff .PdfObject {_aaeg .PdfAnnotation .ToPdfObject ();_ebea :=_aaeg ._ccfb ;_fdfd :=_ebea .PdfObject .(*_aff .PdfObjectDictionary );_aaeg .PdfAnnotationMarkup .appendToPdfDictionary (_fdfd );_fdfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_fdfd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aaeg .QuadPoints );return _ebea ;};func (_bggf *fontFile )parseASCIIPart (_eabb []byte )error {if len (_eabb )< 2||string (_eabb [:2])!="\u0025\u0021"{return _g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_affb ,_edccb ,_cdbgd :=_bfggb (_eabb );if _cdbgd !=nil {return _cdbgd ;};_geaaa :=_fcage (_affb );_bggf ._gdag =_geaaa ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _bggf ._gdag ==""{_adg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _edccb !=""{_aaaf ,_gagb :=_abegb (_edccb );if _gagb !=nil {return _gagb ;};_dbaaa ,_gagb :=_eee .NewCustomSimpleTextEncoder (_aaaf ,nil );if _gagb !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gagb );
return nil ;};_bggf ._bgbca =_dbaaa ;};return nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_accfeb *PdfPageResources )HasColorspaceByName (keyName _aff .PdfObjectName )bool {_abagd ,_bbcgb :=_accfeb .GetColorspaces ();if _bbcgb !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bbcgb );
return false ;};if _abagd ==nil {return false ;};_ ,_fdcc :=_abagd .Colorspaces [string (keyName )];return _fdcc ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_cbffdd *PdfReader )GetCatalogMarkInfo ()(_aff .PdfObject ,bool ){if _cbffdd ._dcadd ==nil {return nil ,false ;};_edde :=_cbffdd ._dcadd .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _edde ,_edde !=nil ;};

// Subtype returns the font's "Subtype" field.
func (_fdbf *PdfFont )Subtype ()string {_gaea :=_fdbf .baseFields ()._fbged ;if _adfba ,_dbfg :=_fdbf ._gebd .(*pdfFontType0 );_dbfg {_gaea =_gaea +"\u003a"+_adfba .DescendantFont .Subtype ();};return _gaea ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_adcgd *PdfWriter )SetNameDictionary (names _aff .PdfObject )error {if names ==nil {return nil ;};_adg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_adcgd ._cdccb .Set ("\u004e\u0061\u006de\u0073",names );return _adcgd .addObjects (names );};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ccadd *PdfAcroForm ,_gcbf *PdfField ,_fedfb *PdfAnnotationWidget )(*_aff .PdfObjectDictionary ,error );};

// AddFont adds a font dictionary to the Font resources.
func (_geecdf *PdfPage )AddFont (name _aff .PdfObjectName ,font _aff .PdfObject )error {if _geecdf .Resources ==nil {_geecdf .Resources =NewPdfPageResources ();};if _geecdf .Resources .Font ==nil {_geecdf .Resources .Font =_aff .MakeDict ();};_gbcgd ,_dcgff :=_aff .TraceToDirectObject (_geecdf .Resources .Font ).(*_aff .PdfObjectDictionary );
if !_dcgff {_adg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_aff .TraceToDirectObject (_geecdf .Resources .Font ));
return _g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbcgd .Set (name ,font );return nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ecef *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_g .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_eage ,_gebf :=_gd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._becb ,img ._edgef );if _gebf !=nil {return img ,_gebf ;};_dfdd ,_gebf :=_gd .GrayConverter .Convert (_eage );if _gebf !=nil {return img ,_gebf ;
};return _efecb (_dfdd .Base ()),nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ebfdf *PdfPageResourcesColorspaces )Set (key _aff .PdfObjectName ,val PdfColorspace ){if _ ,_dbbed :=_ebfdf .Colorspaces [string (key )];!_dbbed {_ebfdf .Names =append (_ebfdf .Names ,string (key ));};_ebfdf .Colorspaces [string (key )]=val ;};var ImageHandling ImageHandler =DefaultImageHandler {};


// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ebdfd *PdfWriter )AddPage (page *PdfPage )error {const _edeae ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_aefbgd (page );_ecefca :=page .ToPdfObject ();_adg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_adg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ecefca );_cgaeb ,_gcgeb :=_aff .GetIndirect (_ecefca );if !_gcgeb {return _g .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_adg .Log .Trace ("\u0025\u0073",_cgaeb );_adg .Log .Trace ("\u0025\u0073",_cgaeb .PdfObject );_dfdfd ,_gcgeb :=_aff .GetDict (_cgaeb .PdfObject );if !_gcgeb {return _g .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_deged ,_gcgeb :=_aff .GetName (_dfdfd .Get ("\u0054\u0079\u0070\u0065"));if !_gcgeb {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dfdfd .Get ("\u0054\u0079\u0070\u0065"));
};if _deged .String ()!="\u0050\u0061\u0067\u0065"{return _g .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_dfeea :=[]_aff .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ccgae ,_fefa :=_aff .GetIndirect (_dfdfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_adg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dfdfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fefa );
for _fefa {_adg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccgae );_dbcbb ,_bfdbb :=_aff .GetDict (_ccgae .PdfObject );if !_bfdbb {return _g .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_eadfee :=range _dfeea {_adg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eadfee );if _dfdfd .Get (_eadfee )!=nil {_adg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _acefbd :=_dbcbb .Get (_eadfee );_acefbd !=nil {_adg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eadfee );_dfdfd .Set (_eadfee ,_acefbd );};};_ccgae ,_fefa =_aff .GetIndirect (_dbcbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_adg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbcbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_adg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dfdfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebdfd ._edgeg );_cgaeb .PdfObject =_dfdfd ;_ceggf ,_gcgeb :=_aff .GetDict (_ebdfd ._edgeg .PdfObject );if !_gcgeb {return _g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dfdbb ,_gcgeb :=_aff .GetArray (_ceggf .Get ("\u004b\u0069\u0064\u0073"));if !_gcgeb {return _g .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dfdbb .Append (_cgaeb );_ebdfd ._gbbce [_dfdfd ]=struct{}{};_gaefa ,_gcgeb :=_aff .GetInt (_ceggf .Get ("\u0043\u006f\u0075n\u0074"));if !_gcgeb {return _g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gaefa =*_gaefa +1;if page ._dbbf ==nil {_fgdcg :=_gff .Track (_ebdfd ._cgdb ,_edeae );if _fgdcg !=nil {return _fgdcg ;};}else {_efecd :=_gff .Track (page ._dbbf ._fafag ,_edeae );if _efecd !=nil {return _efecd ;};};_ebdfd .addObject (_cgaeb );_bfdcf :=_ebdfd .addObjects (_dfdfd );
if _bfdcf !=nil {return _bfdcf ;};return nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_adegg *PdfFont )CharcodesToStrings (charcodes []_eee .CharCode )([]string ,int ,int ){_degb :=_adegg .baseFields ();_aggg :=make ([]string ,0,len (charcodes ));_cfec :=0;_gded :=_adegg .Encoder ();_ceed :=_degb ._dcad !=nil &&_adegg .IsSimple ()&&_adegg .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ba .Contains (_degb ._dcad .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_ceed &&_gded !=nil {switch _cfcfb :=_gded .(type ){case _eee .SimpleEncoder :_faddb :=_cfcfb .BaseName ();if _ ,_cdgd :=_fgdgb [_faddb ];_cdgd {for _ ,_bdba :=range charcodes {if _fbgd ,_eedf :=_gded .CharcodeToRune (_bdba );_eedf {_aggg =append (_aggg ,string (_fbgd ));
}else {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bdba ,charcodes ,_degb .isCIDFont (),_adegg ,_gded );
_cfec ++;_aggg =append (_aggg ,_da .MissingCodeString );};};return _aggg ,len (_aggg ),_cfec ;};};};for _ ,_cdbfa :=range charcodes {if _degb ._dcad !=nil {if _eceab ,_edgc :=_degb ._dcad .CharcodeToUnicode (_da .CharCode (_cdbfa ));_edgc {_aggg =append (_aggg ,_eceab );
continue ;};};if _gded !=nil {if _cdbg ,_edeeb :=_gded .CharcodeToRune (_cdbfa );_edeeb {_aggg =append (_aggg ,string (_cdbg ));continue ;};};_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cdbfa ,charcodes ,_degb .isCIDFont (),_adegg ,_gded );
_cfec ++;_aggg =append (_aggg ,_da .MissingCodeString );};if _cfec !=0{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cfec ,_adegg );
};return _aggg ,len (_aggg ),_cfec ;};func _ccfeb (_bfdf *XObjectForm )(*PdfRectangle ,bool ,error ){if _fgee ,_ecddbc :=_bfdf .BBox .(*_aff .PdfObjectArray );_ecddbc {_efgf ,_cadb :=NewPdfRectangle (*_fgee );if _cadb !=nil {return nil ,false ,_cadb ;};
if _ceage ,_dbedc :=_bfdf .Matrix .(*_aff .PdfObjectArray );_dbedc {_cfef ,_gcedbc :=_ceage .ToFloat64Array ();if _gcedbc !=nil {return nil ,false ,_gcedbc ;};_geegg :=_eb .IdentityMatrix ();if len (_cfef )==6{_geegg =_eb .NewMatrix (_cfef [0],_cfef [1],_cfef [2],_cfef [3],_cfef [4],_cfef [5]);
};_efgf .Transform (_geegg );return _efgf ,true ,nil ;};return _efgf ,false ,nil ;};return nil ,false ,_g .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_cdae *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_ebbbf *PdfWriter )flushWriter ()error {if _ebbbf ._acag ==nil {_ebbbf ._acag =_ebbbf ._ggee .Flush ();};return _ebbbf ._acag ;};func _efdc (_gcaff *_aff .PdfObjectDictionary )*VRI {_agegb ,_ :=_aff .GetString (_gcaff .Get ("\u0054\u0055"));
_eedee ,_ :=_aff .GetString (_gcaff .Get ("\u0054\u0053"));return &VRI {Cert :_cbdga (_gcaff .Get ("\u0043\u0065\u0072\u0074")),OCSP :_cbdga (_gcaff .Get ("\u004f\u0043\u0053\u0050")),CRL :_cbdga (_gcaff .Get ("\u0043\u0052\u004c")),TU :_agegb ,TS :_eedee };
};

// Width returns the width of `rect`.
func (_aaaef *PdfRectangle )Width ()float64 {return _cf .Abs (_aaaef .Urx -_aaaef .Llx )};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _aff .PdfObject ;Flags _aff .PdfObject ;};func _egcdd (_ffdab []*_aff .PdfObjectStream )*_aff .PdfObjectArray {if len (_ffdab )==0{return nil ;};_bdgec :=make ([]_aff .PdfObject ,0,len (_ffdab ));
for _ ,_aacab :=range _ffdab {_bdgec =append (_bdgec ,_aacab );};return _aff .MakeArray (_bdgec ...);};

// ToPdfObject returns a stream object.
func (_fbagc *XObjectImage )ToPdfObject ()_aff .PdfObject {_ffffb :=_fbagc ._fccgd ;_bgdec :=_ffffb .PdfObjectDictionary ;if _fbagc .Filter !=nil {_bgdec =_fbagc .Filter .MakeStreamDict ();_ffffb .PdfObjectDictionary =_bgdec ;};_bgdec .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bgdec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0049\u006d\u0061g\u0065"));_bgdec .Set ("\u0057\u0069\u0064t\u0068",_aff .MakeInteger (*(_fbagc .Width )));_bgdec .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aff .MakeInteger (*(_fbagc .Height )));
if _fbagc .BitsPerComponent !=nil {_bgdec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aff .MakeInteger (*(_fbagc .BitsPerComponent )));};if _fbagc .ColorSpace !=nil {_bgdec .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fbagc .ColorSpace .ToPdfObject ());
};_bgdec .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fbagc .Intent );_bgdec .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fbagc .ImageMask );_bgdec .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fbagc .Mask );_bffdb :=_bgdec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _fbagc .Decode ==nil &&_bffdb {_bgdec .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _fbagc .Decode !=nil {_bgdec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbagc .Decode );};_bgdec .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fbagc .Interpolate );
_bgdec .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fbagc .Alternatives );_bgdec .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fbagc .SMask );_bgdec .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fbagc .SMaskInData );
_bgdec .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fbagc .Matte );_bgdec .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbagc .Name );_bgdec .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fbagc .StructParent );_bgdec .SetIfNotNil ("\u0049\u0044",_fbagc .ID );
_bgdec .SetIfNotNil ("\u004f\u0050\u0049",_fbagc .OPI );_bgdec .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fbagc .Metadata );_bgdec .SetIfNotNil ("\u004f\u0043",_fbagc .OC );_bgdec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aff .MakeInteger (int64 (len (_fbagc .Stream ))));
_ffffb .Stream =_fbagc .Stream ;return _ffffb ;};func (_edba *PdfReader )newPdfAnnotationProjectionFromDict (_gefg *_aff .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_caa :=&PdfAnnotationProjection {};_daa ,_bebb :=_edba .newPdfAnnotationMarkupFromDict (_gefg );
if _bebb !=nil {return nil ,_bebb ;};_caa .PdfAnnotationMarkup =_daa ;return _caa ,nil ;};

// String returns a string that describes `base`.
func (_gdgbf fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gdgbf .coreString ());};

// ToPdfObject implements interface PdfModel.
func (_ceea *PdfAnnotationStamp )ToPdfObject ()_aff .PdfObject {_ceea .PdfAnnotation .ToPdfObject ();_efec :=_ceea ._ccfb ;_fbaf :=_efec .PdfObject .(*_aff .PdfObjectDictionary );_ceea .PdfAnnotationMarkup .appendToPdfDictionary (_fbaf );_fbaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0053\u0074\u0061m\u0070"));
_fbaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ceea .Name );return _efec ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_aff .PdfObjectInteger ;BitsPerComponent *_aff .PdfObjectInteger ;BitsPerFlag *_aff .PdfObjectInteger ;Decode *_aff .PdfObjectArray ;Function []PdfFunction ;};func (_bfab *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bfab ._gaece .GetCrypter ()!=nil &&!_bfab ._gaece .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dbfcf :=_bfab ._dcadd ;_gaba :=_dbfcf .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _gaba ==nil {return nil ,nil ;};_adg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_bfcdg :=_aff .ResolveReference (_gaba );
_adg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_bfcdg );if _dcfeg :=_aff .IsNullObject (_bfcdg );_dcfeg {_adg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_beag ,_edbbe :=_bfcdg .(*_aff .PdfIndirectObject );if !_edbbe {if _ ,_bcbfc :=_aff .GetDict (_bfcdg );!_bcbfc {_adg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_adg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_beag =_aff .MakeIndirectObject (_bfcdg );};_aebee ,_edbbe :=_beag .PdfObject .(*_aff .PdfObjectDictionary );if !_edbbe {return nil ,_g .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_adg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_aebee );_edfbb ,_ ,_cfgcb :=_bfab .buildOutlineTree (_beag ,nil ,nil ,nil );if _cfgcb !=nil {return nil ,_cfgcb ;};_adg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_edfbb );
return _edfbb ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_fbba *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fbba .AlternateSpace ==nil {return nil ,_g .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fbba .AlternateSpace .ColorToRGB (color );};func (_caab fontCommon )isCIDFont ()bool {if _caab ._fbged ==""{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_caab );
};_dafdea :=false ;switch _caab ._fbged {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dafdea =true ;};_adg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_dafdea ,_caab );
return _dafdea ;};func (_bdec *PdfReader )newPdfActionTransFromDict (_dfaa *_aff .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dfaa .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// B returns the value of the B component of the color.
func (_fdfb *PdfColorLab )B ()float64 {return _fdfb [2]};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_geaf *PdfAppender )Write (w _ega .Writer )error {if _geaf ._gdgbd {return _g .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_dcgg :=NewPdfWriter ();_fged ,_cgcba :=_aff .GetDict (_dcgg ._edgeg );if !_cgcba {return _g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cdcee ,_cgcba :=_fged .Get ("\u004b\u0069\u0064\u0073").(*_aff .PdfObjectArray );if !_cgcba {return _g .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fega ,_cgcba :=_fged .Get ("\u0043\u006f\u0075n\u0074").(*_aff .PdfObjectInteger );if !_cgcba {return _g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dab :=_geaf ._dafgd ._gaece ;_fegab :=_dab .GetTrailer ();if _fegab ==nil {return _g .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_becf ,_cgcba :=_aff .GetIndirect (_fegab .Get ("\u0052\u006f\u006f\u0074"));
if !_cgcba {return _g .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_abfc ,_cgcba :=_aff .GetDict (_becf );if !_cgcba {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_becf ,*_fegab );
return _g .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_efc :=range _abfc .Keys (){if _dcgg ._cdccb .Get (_efc )==nil {_deec :=_abfc .Get (_efc );_dcgg ._cdccb .Set (_efc ,_deec );};};if _geaf ._bgac !=nil {if _geaf ._bgac ._abcga {if _cffd :=_aff .TraceToDirectObject (_geaf ._bgac .ToPdfObject ());
!_aff .IsNullObject (_cffd ){_dcgg ._cdccb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cffd );_geaf .updateObjectsDeep (_cffd ,nil );}else {_adg .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_dcgg ._cdccb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_geaf ._bgac .ToPdfObject ());_geaf .updateObjectsDeep (_geaf ._bgac .ToPdfObject (),nil );};};if _geaf ._fdbb !=nil {_geaf .updateObjectsDeep (_geaf ._fdbb .ToPdfObject (),nil );
_dcgg ._cdccb .Set ("\u0044\u0053\u0053",_geaf ._fdbb .GetContainingPdfObject ());};if _geaf ._dgcg !=nil {_dcgg ._cdccb .Set ("\u0050\u0065\u0072m\u0073",_geaf ._dgcg .ToPdfObject ());_geaf .updateObjectsDeep (_geaf ._dgcg .ToPdfObject (),nil );};if _dcgg ._bgeecg .Major < 2{_dcgg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_dcgg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _baace ,_cedb :=_aff .GetDict (_fegab .Get ("\u0049\u006e\u0066\u006f"));_cedb {if _geade ,_abab :=_aff .GetDict (_dcgg ._bacec );_abab {for _ ,_aefg :=range _baace .Keys (){if _geade .Get (_aefg )==nil {_geade .Set (_aefg ,_baace .Get (_aefg ));
};};};};if _geaf ._fabd !=nil {_dcgg ._bacec =_aff .MakeIndirectObject (_geaf ._fabd .ToPdfObject ());};_geaf .addNewObject (_dcgg ._bacec );_geaf .addNewObject (_dcgg ._adefd );_ffge :=false ;if len (_geaf ._dafgd .PageList )!=len (_geaf ._bbgg ){_ffge =true ;
}else {for _eggf :=range _geaf ._dafgd .PageList {switch {case _geaf ._bbgg [_eggf ]==_geaf ._dafgd .PageList [_eggf ]:case _geaf ._bbgg [_eggf ]==_geaf .Reader .PageList [_eggf ]:default:_ffge =true ;};if _ffge {break ;};};};if _ffge {_geaf .updateObjectsDeep (_dcgg ._edgeg ,nil );
}else {_geaf ._abcb [_dcgg ._edgeg ]=struct{}{};};_dcgg ._edgeg .ObjectNumber =_geaf .Reader ._efcfb .ObjectNumber ;_geaf ._fffa [_dcgg ._edgeg ]=_geaf .Reader ._efcfb .ObjectNumber ;_fbce :=[]_aff .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_aaff :=range _geaf ._bbgg {_gdbeg :=_aaff .ToPdfObject ();*_fega =*_fega +1;if _aebe ,_dde :=_gdbeg .(*_aff .PdfIndirectObject );_dde &&_aebe .GetParser ()==_geaf ._dafgd ._gaece {_cdcee .Append (&_aebe .PdfObjectReference );continue ;};if _fabf ,_fdaf :=_aff .GetDict (_gdbeg );
_fdaf {_ccg ,_aeea :=_fabf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aff .PdfIndirectObject );for _aeea {_adg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccg );_ffaf ,_egb :=_ccg .PdfObject .(*_aff .PdfObjectDictionary );
if !_egb {return _g .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bgab :=range _fbce {_adg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bgab );if _bdb :=_fabf .Get (_bgab );
_bdb !=nil {_adg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_aaff ._bfce .Keys ())> 0&&!_ffge {_edbf :=_aaff ._bfce ;if _gfcb :=_edbf .Get (_bgab );_gfcb !=nil {if _bdb !=_gfcb {_adg .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_bgab ,_gfcb );
_fabf .Set (_bgab ,_gfcb );};};};continue ;};if _aeag :=_ffaf .Get (_bgab );_aeag !=nil {_adg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bgab );_fabf .Set (_bgab ,_aeag );};};
_ccg ,_aeea =_ffaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aff .PdfIndirectObject );_adg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ffaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _ffge {_fabf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcgg ._edgeg );
};};_geaf .updateObjectsDeep (_gdbeg ,nil );_cdcee .Append (_gdbeg );};if _ ,_aaedb :=_geaf ._dbb .Seek (0,_ega .SeekStart );_aaedb !=nil {return _aaedb ;};_acg :=make (map[SignatureHandler ]_ega .Writer );_edeb :=_aff .MakeArray ();for _ ,_cggd :=range _geaf ._aggc {if _efce ,_ecdf :=_aff .GetIndirect (_cggd );
_ecdf {if _aaga ,_defgd :=_efce .PdfObject .(*pdfSignDictionary );_defgd {_fdfe :=*_aaga ._efde ;var _cebd error ;_acg [_fdfe ],_cebd =_fdfe .NewDigest (_aaga ._afgeg );if _cebd !=nil {return _cebd ;};_edeb .Append (_aff .MakeInteger (0xfffff),_aff .MakeInteger (0xfffff));
};};};if _edeb .Len ()> 0{_edeb .Append (_aff .MakeInteger (0xfffff),_aff .MakeInteger (0xfffff));};for _ ,_gcdd :=range _geaf ._aggc {if _cdac ,_deg :=_aff .GetIndirect (_gcdd );_deg {if _cbd ,_cagf :=_cdac .PdfObject .(*pdfSignDictionary );_cagf {_cbd .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_edeb );
};};};_fdbg :=len (_acg )> 0;var _ddcb _ega .Reader =_geaf ._dbb ;if _fdbg {_cegb :=make ([]_ega .Writer ,0,len (_acg ));for _ ,_ddga :=range _acg {_cegb =append (_cegb ,_ddga );};_ddcb =_ega .TeeReader (_geaf ._dbb ,_ega .MultiWriter (_cegb ...));};_ffdc ,_dggf :=_ega .Copy (w ,_ddcb );
if _dggf !=nil {return _dggf ;};if len (_geaf ._aggc )==0{return nil ;};_dcgg ._bfage =_ffdc ;_dcgg .ObjNumOffset =_geaf ._bfafd ;_dcgg ._ccbe =true ;_dcgg ._gfaab =_geaf ._gaec ;_dcgg ._gecec =_geaf ._cadg ;_dcgg ._abced =_geaf ._beec ;_dcgg ._bgeecg =_geaf ._dafgd .PdfVersion ();
_dcgg ._becc =_geaf ._fffa ;_dcgg ._fcgf =_geaf ._dga .GetCrypter ();_dcgg ._fdedd =_geaf ._dga .GetEncryptObj ();_cbba :=_geaf ._dga .GetXrefType ();if _cbba !=nil {_aedd :=*_cbba ==_aff .XrefTypeObjectStream ;_dcgg ._deggb =&_aedd ;};_dcgg ._bgadg =map[_aff .PdfObject ]struct{}{};
_dcgg ._babcd =[]_aff .PdfObject {};for _ ,_gdd :=range _geaf ._aggc {if _ ,_fcafa :=_geaf ._abcb [_gdd ];_fcafa {continue ;};_dcgg .addObject (_gdd );};_ccbd :=w ;if _fdbg {_ccbd =_af .NewBuffer (nil );};if _geaf ._geff !=""&&_dcgg ._fcgf ==nil {_dcgg .Encrypt ([]byte (_geaf ._geff ),[]byte (_geaf ._geff ),_geaf ._dcgbg );
};if _bggb :=_fegab .Get ("\u0049\u0044");_bggb !=nil {if _caec ,_dfea :=_aff .GetArray (_bggb );_dfea {_dcgg ._dfdcg =_caec ;};};if _afee :=_dcgg .Write (_ccbd );_afee !=nil {return _afee ;};if _fdbg {_cfaf :=_ccbd .(*_af .Buffer ).Bytes ();_abbg :=_aff .MakeArray ();
var _eabe []*pdfSignDictionary ;var _bege int64 ;for _ ,_geee :=range _dcgg ._babcd {if _bffa ,_bedg :=_aff .GetIndirect (_geee );_bedg {if _cagg ,_accf :=_bffa .PdfObject .(*pdfSignDictionary );_accf {_eabe =append (_eabe ,_cagg );_ggeb :=_cagg ._fgfd +int64 (_cagg ._aeage );
_abbg .Append (_aff .MakeInteger (_bege ),_aff .MakeInteger (_ggeb -_bege ));_bege =_cagg ._fgfd +int64 (_cagg ._gebef );};};};_abbg .Append (_aff .MakeInteger (_bege ),_aff .MakeInteger (_ffdc +int64 (len (_cfaf ))-_bege ));_gbgb :=[]byte (_abbg .WriteString ());
for _ ,_bgbb :=range _eabe {_dbeg :=int (_bgbb ._fgfd -_ffdc );for _geeg :=_bgbb ._bedebd ;_geeg < _bgbb ._ebceg ;_geeg ++{_cfaf [_dbeg +_geeg ]=' ';};_bbbged :=_cfaf [_dbeg +_bgbb ._bedebd :_dbeg +_bgbb ._ebceg ];copy (_bbbged ,_gbgb );};var _cgae int ;
for _ ,_abgfa :=range _eabe {_eacgg :=int (_abgfa ._fgfd -_ffdc );_gebe :=_cfaf [_cgae :_eacgg +_abgfa ._aeage ];_ggfbe :=*_abgfa ._efde ;_acg [_ggfbe ].Write (_gebe );_cgae =_eacgg +_abgfa ._gebef ;};for _ ,_fbdd :=range _eabe {_gdfe :=_cfaf [_cgae :];
_ebdb :=*_fbdd ._efde ;_acg [_ebdb ].Write (_gdfe );};for _ ,_dddcg :=range _eabe {_fbgb :=int (_dddcg ._fgfd -_ffdc );_bdege :=*_dddcg ._efde ;_cgfaf :=_acg [_bdege ];if _adfb :=_bdege .Sign (_dddcg ._afgeg ,_cgfaf );_adfb !=nil {return _adfb ;};_dddcg ._afgeg .ByteRange =_abbg ;
_acga :=[]byte (_dddcg ._afgeg .Contents .WriteString ());for _acfb :=_dddcg ._bedebd ;_acfb < _dddcg ._ebceg ;_acfb ++{_cfaf [_fbgb +_acfb ]=' ';};for _fbbdf :=_dddcg ._aeage ;_fbbdf < _dddcg ._gebef ;_fbbdf ++{_cfaf [_fbgb +_fbbdf ]=' ';};_ccbg :=_cfaf [_fbgb +_dddcg ._bedebd :_fbgb +_dddcg ._ebceg ];
copy (_ccbg ,_gbgb );_ccbg =_cfaf [_fbgb +_dddcg ._aeage :_fbgb +_dddcg ._gebef ];copy (_ccbg ,_acga );};_fggb :=_af .NewBuffer (_cfaf );_ ,_dggf =_ega .Copy (w ,_fggb );if _dggf !=nil {return _dggf ;};};_geaf ._gdgbd =true ;return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_adbbaa *Image )SetAlpha (alpha []byte ){_adbbaa ._becb =alpha };

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_afaa *PdfField )SetContext (ctx PdfModel ){_afaa ._gaecf =ctx };

// GetContainingPdfObject implements interface PdfModel.
func (_abgfaf *PdfSignatureReference )GetContainingPdfObject ()_aff .PdfObject {return _abgfaf ._fdebg };

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cffae _aff .ParserMetadata ;};func (_deee *PdfReader )newPdfActionRenditionFromDict (_gfgd *_aff .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gfgd .Get ("\u0052"),AN :_gfgd .Get ("\u0041\u004e"),OP :_gfgd .Get ("\u004f\u0050"),JS :_gfgd .Get ("\u004a\u0053")},nil ;
};func _cfafa (_bcec *_aff .PdfObjectDictionary )(*PdfFieldButton ,error ){_gabb :=&PdfFieldButton {};_gabb .PdfField =NewPdfField ();_gabb .PdfField .SetContext (_gabb );_gabb .Opt ,_ =_aff .GetArray (_bcec .Get ("\u004f\u0070\u0074"));_egcg :=NewPdfAnnotationWidget ();
_egcg .A ,_ =_aff .GetDict (_bcec .Get ("\u0041"));_egcg .AP ,_ =_aff .GetDict (_bcec .Get ("\u0041\u0050"));_egcg .SetContext (_gabb );_gabb .PdfField .Annotations =append (_gabb .PdfField .Annotations ,_egcg );return _gabb ,nil ;};func (_aac *PdfReader )newPdfActionLaunchFromDict (_age *_aff .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gffa ,_bfdg :=_dfc (_age .Get ("\u0046"));
if _bfdg !=nil {return nil ,_bfdg ;};return &PdfActionLaunch {Win :_age .Get ("\u0057\u0069\u006e"),Mac :_age .Get ("\u004d\u0061\u0063"),Unix :_age .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_age .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gffa },nil ;
};

// SetContext set the sub annotation (context).
func (_bfga *PdfShading )SetContext (ctx PdfModel ){_bfga ._fcbfb =ctx };

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fgebb *PdfOutlineTreeNode )GetContainingPdfObject ()_aff .PdfObject {return _fgebb .GetContext ().GetContainingPdfObject ();};

// String returns the name of the colorspace (DeviceN).
func (_cged *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func (_ggaab *PdfWriter )setDocumentIDs (_beecb ,_dbcdeb string ){_ggaab ._dfdcg =_aff .MakeArray (_aff .MakeHexString (_beecb ),_aff .MakeHexString (_dbcdeb ));
};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_abef *PdfFieldSignature )ToPdfObject ()_aff .PdfObject {if _abef .PdfAnnotationWidget !=nil {_abef .PdfAnnotationWidget .ToPdfObject ();};_abef .PdfField .ToPdfObject ();_agga :=_abef ._dfbfd ;_cdec :=_agga .PdfObject .(*_aff .PdfObjectDictionary );
_cdec .SetIfNotNil ("\u0046\u0054",_aff .MakeName ("\u0053\u0069\u0067"));_cdec .SetIfNotNil ("\u004c\u006f\u0063\u006b",_abef .Lock );_cdec .SetIfNotNil ("\u0053\u0056",_abef .SV );if _abef .V !=nil {_cdec .SetIfNotNil ("\u0056",_abef .V .ToPdfObject ());
};return _agga ;};

// ToPdfObject implements interface PdfModel.
func (_cc *PdfActionImportData )ToPdfObject ()_aff .PdfObject {_cc .PdfAction .ToPdfObject ();_bfdb :=_cc ._df ;_gcee :=_bfdb .PdfObject .(*_aff .PdfObjectDictionary );_gcee .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeImportData )));if _cc .F !=nil {_gcee .Set ("\u0046",_cc .F .ToPdfObject ());
};return _bfdb ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fcefa *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _g .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fcefa .S =subtype ;return nil ;};func (_gbcfb *PdfWriter )updateObjectNumbers (){_fdeed :=_gbcfb .ObjNumOffset ;_dcbca :=0;for _ ,_dface :=range _gbcfb ._babcd {_bafgf :=int64 (_dcbca +1+_fdeed );_fccae :=true ;if _gbcfb ._ccbe {if _deefb ,_badcd :=_gbcfb ._becc [_dface ];
_badcd {_bafgf =_deefb ;_fccae =false ;};};switch _cedda :=_dface .(type ){case *_aff .PdfIndirectObject :_cedda .ObjectNumber =_bafgf ;_cedda .GenerationNumber =0;case *_aff .PdfObjectStream :_cedda .ObjectNumber =_bafgf ;_cedda .GenerationNumber =0;case *_aff .PdfObjectStreams :_cedda .ObjectNumber =_bafgf ;
_cedda .GenerationNumber =0;default:_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cedda );continue ;
};if _fccae {_dcbca ++;};};_fcgc :=func (_abbfa _aff .PdfObject )int64 {switch _fadad :=_abbfa .(type ){case *_aff .PdfIndirectObject :return _fadad .ObjectNumber ;case *_aff .PdfObjectStream :return _fadad .ObjectNumber ;case *_aff .PdfObjectStreams :return _fadad .ObjectNumber ;
};return 0;};_fg .SliceStable (_gbcfb ._babcd ,func (_bdded ,_dfdgg int )bool {return _fcgc (_gbcfb ._babcd [_bdded ])< _fcgc (_gbcfb ._babcd [_dfdgg ])});};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ddcg *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_dggc *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gdc :=NewPdfAction ();_ea :=&PdfActionLaunch {};_ea .PdfAction =_gdc ;_gdc .SetContext (_ea );return _ea ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gfbeg *XObjectImage )ToImage ()(*Image ,error ){_fdadf :=&Image {};if _gfbeg .Height ==nil {return nil ,_g .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fdadf .Height =*_gfbeg .Height ;if _gfbeg .Width ==nil {return nil ,_g .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fdadf .Width =*_gfbeg .Width ;if _gfbeg .BitsPerComponent ==nil {switch _gfbeg .Filter .(type ){case *_aff .CCITTFaxEncoder ,*_aff .JBIG2Encoder :_fdadf .BitsPerComponent =1;
case *_aff .LZWEncoder ,*_aff .RunLengthEncoder :_fdadf .BitsPerComponent =8;default:return nil ,_g .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fdadf .BitsPerComponent =*_gfbeg .BitsPerComponent ;};_fdadf .ColorComponents =_gfbeg .ColorSpace .GetNumComponents ();_gfbeg ._fccgd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aff .MakeInteger (int64 (_fdadf .ColorComponents )));
_cdddf ,_deceb :=_aff .DecodeStream (_gfbeg ._fccgd );if _deceb !=nil {return nil ,_deceb ;};_fdadf .Data =_cdddf ;if _gfbeg .Decode !=nil {_eccfc ,_cgegb :=_gfbeg .Decode .(*_aff .PdfObjectArray );if !_cgegb {_adg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_g .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_dadgb ,_acbb :=_eccfc .ToFloat64Array ();if _acbb !=nil {return nil ,_acbb ;};switch _gfbeg .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_ebege :=_gfbeg .ColorSpace .DecodeArray ();
if _ebege [0]==_dadgb [0]&&_ebege [1]==_dadgb [1]&&_ebege [2]==_dadgb [2]&&_ebege [3]==_dadgb [3]{_fdadf ._edgef =_dadgb ;};default:_fdadf ._edgef =_dadgb ;};};return _fdadf ,nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_afaee *PdfAnnotationPrinterMark )ToPdfObject ()_aff .PdfObject {_afaee .PdfAnnotation .ToPdfObject ();_feda :=_afaee ._ccfb ;_fgfa :=_feda .PdfObject .(*_aff .PdfObjectDictionary );_fgfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_fgfa .SetIfNotNil ("\u004d\u004e",_afaee .MN );return _feda ;};func (_geeac *PdfWriter )checkLicense ()error {_gfgfa :=_gff .GetLicenseKey ();if (_gfgfa ==nil ||!_gfgfa .IsLicensed ())&&!_cafgd {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _g .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func _fgagf (_cdadc _aff .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cgdff :=&PdfPageResourcesColorspaces {};
if _eggfcda ,_bbbabf :=_cdadc .(*_aff .PdfIndirectObject );_bbbabf {_cgdff ._abedg =_eggfcda ;_cdadc =_eggfcda .PdfObject ;};_eggd ,_abag :=_aff .GetDict (_cdadc );if !_abag {return nil ,_g .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgdff .Names =[]string {};_cgdff .Colorspaces =map[string ]PdfColorspace {};for _ ,_dcab :=range _eggd .Keys (){_fgaec :=_eggd .Get (_dcab );_cgdff .Names =append (_cgdff .Names ,string (_dcab ));_abgbe ,_cadba :=NewPdfColorspaceFromPdfObject (_fgaec );
if _cadba !=nil {return nil ,_cadba ;};_cgdff .Colorspaces [string (_dcab )]=_abgbe ;};return _cgdff ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_dfad :_aff .MakeIndirectObject (_aff .MakeDict ()),VRI :map[string ]*VRI {}};};func _bdagg (_dfdde *_aff .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebeaf :=&PdfTilingPattern {};_bcgfd :=_dfdde .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _bcgfd ==nil {_adg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbad ,_efggd :=_bcgfd .(*_aff .PdfObjectInteger );if !_efggd {_adg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bcgfd );
return nil ,_aff .ErrTypeError ;};_ebeaf .PaintType =_gbad ;_bcgfd =_dfdde .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bcgfd ==nil {_adg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbfdb ,_efggd :=_bcgfd .(*_aff .PdfObjectInteger );if !_efggd {_adg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcgfd );
return nil ,_aff .ErrTypeError ;};_ebeaf .TilingType =_bbfdb ;_bcgfd =_dfdde .Get ("\u0042\u0042\u006f\u0078");if _bcgfd ==nil {_adg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bcgfd =_aff .TraceToDirectObject (_bcgfd );_acdg ,_efggd :=_bcgfd .(*_aff .PdfObjectArray );if !_efggd {_adg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcgfd );
return nil ,_aff .ErrTypeError ;};_gdfab ,_ffcge :=NewPdfRectangle (*_acdg );if _ffcge !=nil {_adg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ffcge );return nil ,_ffcge ;};_ebeaf .BBox =_gdfab ;_bcgfd =_dfdde .Get ("\u0058\u0053\u0074e\u0070");
if _bcgfd ==nil {_adg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccagea ,_ffcge :=_aff .GetNumberAsFloat (_bcgfd );if _ffcge !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ccagea );
return nil ,_ffcge ;};_ebeaf .XStep =_aff .MakeFloat (_ccagea );_bcgfd =_dfdde .Get ("\u0059\u0053\u0074e\u0070");if _bcgfd ==nil {_adg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gaeff ,_ffcge :=_aff .GetNumberAsFloat (_bcgfd );if _ffcge !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gaeff );
return nil ,_ffcge ;};_ebeaf .YStep =_aff .MakeFloat (_gaeff );_bcgfd =_dfdde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bcgfd ==nil {_adg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfdde ,_efggd =_aff .TraceToDirectObject (_bcgfd ).(*_aff .PdfObjectDictionary );if !_efggd {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bcgfd );
};_fagfa ,_ffcge :=NewPdfPageResourcesFromDict (_dfdde );if _ffcge !=nil {return nil ,_ffcge ;};_ebeaf .Resources =_fagfa ;if _bcbf :=_dfdde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bcbf !=nil {_gfgddd ,_bbage :=_bcbf .(*_aff .PdfObjectArray );if !_bbage {_adg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcbf );
return nil ,_aff .ErrTypeError ;};_ebeaf .Matrix =_gfgddd ;};return _ebeaf ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_cdfg *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _cdfg ._bbgb !=nil {return _cdfg ._bbgb ,nil ;};if _cdfg .Annots ==nil {_cdfg ._bbgb =[]*PdfAnnotation {};return nil ,nil ;};if _cdfg ._dbbf ==nil {_cdfg ._bbgb =[]*PdfAnnotation {};return nil ,nil ;
};_dgcbeb ,_gceeb :=_cdfg ._dbbf .loadAnnotations (_cdfg .Annots );if _gceeb !=nil {return nil ,_gceeb ;};if _dgcbeb ==nil {_cdfg ._bbgb =[]*PdfAnnotation {};};_cdfg ._bbgb =_dgcbeb ;return _cdfg ._bbgb ,nil ;};func (_eecbg *PdfWriter )copyObject (_fagff _aff .PdfObject ,_befbg map[_aff .PdfObject ]_aff .PdfObject ,_ggdfg map[_aff .PdfObject ]struct{},_fafaf bool )_aff .PdfObject {_bbcgfg :=!_eecbg ._ccbe &&_ggdfg !=nil ;
if _cegfde ,_fbabeg :=_befbg [_fagff ];_fbabeg {if _bbcgfg &&!_fafaf {delete (_ggdfg ,_fagff );};return _cegfde ;};if _fagff ==nil {_faddf :=_aff .MakeNull ();return _faddf ;};_gagbcb :=_fagff ;switch _gbgbb :=_fagff .(type ){case *_aff .PdfObjectArray :_efae :=_aff .MakeArray ();
_gagbcb =_efae ;_befbg [_fagff ]=_gagbcb ;for _ ,_dacd :=range _gbgbb .Elements (){_efae .Append (_eecbg .copyObject (_dacd ,_befbg ,_ggdfg ,_fafaf ));};case *_aff .PdfObjectStreams :_cedef :=&_aff .PdfObjectStreams {PdfObjectReference :_gbgbb .PdfObjectReference };
_gagbcb =_cedef ;_befbg [_fagff ]=_gagbcb ;for _ ,_afbed :=range _gbgbb .Elements (){_cedef .Append (_eecbg .copyObject (_afbed ,_befbg ,_ggdfg ,_fafaf ));};case *_aff .PdfObjectStream :_aebae :=&_aff .PdfObjectStream {Stream :_gbgbb .Stream ,PdfObjectReference :_gbgbb .PdfObjectReference };
_gagbcb =_aebae ;_befbg [_fagff ]=_gagbcb ;_aebae .PdfObjectDictionary =_eecbg .copyObject (_gbgbb .PdfObjectDictionary ,_befbg ,_ggdfg ,_fafaf ).(*_aff .PdfObjectDictionary );case *_aff .PdfObjectDictionary :var _caaee bool ;if _bbcgfg &&!_fafaf {if _dfcbe ,_ :=_aff .GetNameVal (_gbgbb .Get ("\u0054\u0079\u0070\u0065"));
_dfcbe =="\u0050\u0061\u0067\u0065"{_ ,_cecc :=_eecbg ._gbbce [_gbgbb ];_fafaf =!_cecc ;_caaee =_fafaf ;};};_fddgc :=_aff .MakeDict ();_gagbcb =_fddgc ;_befbg [_fagff ]=_gagbcb ;for _ ,_ecec :=range _gbgbb .Keys (){_fddgc .Set (_ecec ,_eecbg .copyObject (_gbgbb .Get (_ecec ),_befbg ,_ggdfg ,_fafaf ));
};if _caaee {_gagbcb =_aff .MakeNull ();_fafaf =false ;};case *_aff .PdfIndirectObject :_cccca :=&_aff .PdfIndirectObject {PdfObjectReference :_gbgbb .PdfObjectReference };_gagbcb =_cccca ;_befbg [_fagff ]=_gagbcb ;_cccca .PdfObject =_eecbg .copyObject (_gbgbb .PdfObject ,_befbg ,_ggdfg ,_fafaf );
case *_aff .PdfObjectString :_eccc :=*_gbgbb ;_gagbcb =&_eccc ;_befbg [_fagff ]=_gagbcb ;case *_aff .PdfObjectName :_bdbbg :=*_gbgbb ;_gagbcb =&_bdbbg ;_befbg [_fagff ]=_gagbcb ;case *_aff .PdfObjectNull :_gagbcb =_aff .MakeNull ();_befbg [_fagff ]=_gagbcb ;
case *_aff .PdfObjectInteger :_dgfgc :=*_gbgbb ;_gagbcb =&_dgfgc ;_befbg [_fagff ]=_gagbcb ;case *_aff .PdfObjectReference :_cfabe :=*_gbgbb ;_gagbcb =&_cfabe ;_befbg [_fagff ]=_gagbcb ;case *_aff .PdfObjectFloat :_befce :=*_gbgbb ;_gagbcb =&_befce ;_befbg [_fagff ]=_gagbcb ;
case *_aff .PdfObjectBool :_dadbd :=*_gbgbb ;_gagbcb =&_dadbd ;_befbg [_fagff ]=_gagbcb ;case *pdfSignDictionary :_dcaea :=&pdfSignDictionary {PdfObjectDictionary :_aff .MakeDict (),_efde :_gbgbb ._efde ,_afgeg :_gbgbb ._afgeg };_gagbcb =_dcaea ;_befbg [_fagff ]=_gagbcb ;
for _ ,_caabc :=range _gbgbb .Keys (){_dcaea .Set (_caabc ,_eecbg .copyObject (_gbgbb .Get (_caabc ),_befbg ,_ggdfg ,_fafaf ));};default:_adg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_fagff );
};if _bbcgfg &&_fafaf {_ggdfg [_fagff ]=struct{}{};};return _gagbcb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_adgad *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _adgad .Alternate ==nil {if _adgad .N ==1{_bgcfa :=NewPdfColorspaceDeviceGray ();return _bgcfa .ColorFromFloats (vals );}else if _adgad .N ==3{_ecbd :=NewPdfColorspaceDeviceRGB ();
return _ecbd .ColorFromFloats (vals );}else if _adgad .N ==4{_fgagd :=NewPdfColorspaceDeviceCMYK ();return _fgagd .ColorFromFloats (vals );}else {return nil ,_g .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _adgad .Alternate .ColorFromFloats (vals );};

// ToInteger convert to an integer format.
func (_egda *PdfColorCalGray )ToInteger (bits int )uint32 {_afdc :=_cf .Pow (2,float64 (bits ))-1;return uint32 (_afdc *_egda .Val ());};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_bfeff :=PdfColorLab {l ,a ,b };return &_bfeff };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cdceeb :=PdfWriter {};_cdceeb ._bgadg =map[_aff .PdfObject ]struct{}{};_cdceeb ._babcd =[]_aff .PdfObject {};_cdceeb ._gbfdc =map[_aff .PdfObject ][]*_aff .PdfObjectDictionary {};_cdceeb ._cgdcb =map[_aff .PdfObject ]struct{}{};
_cdceeb ._bgeecg .Major =1;_cdceeb ._bgeecg .Minor =3;_cedce :=_aff .MakeDict ();_cgfdd :=[]struct{_fdcee _aff .PdfObjectName ;_adcea string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bedc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bfdfd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_baccc ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_ecgcg ()},{"\u0054\u0069\u0074l\u0065",_bgabd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gbddg ()}};
for _ ,_bbcac :=range _cgfdd {if _bbcac ._adcea !=""{_cedce .Set (_bbcac ._fdcee ,_aff .MakeString (_bbcac ._adcea ));};};if _cceda :=_cfdg ();!_cceda .IsZero (){if _gaabg ,_gbbg :=NewPdfDateFromTime (_cceda );_gbbg ==nil {_cedce .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gaabg .ToPdfObject ());
};};if _cgfdcb :=_cgfdc ();!_cgfdcb .IsZero (){if _feba ,_dcaddg :=NewPdfDateFromTime (_cgfdcb );_dcaddg ==nil {_cedce .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_feba .ToPdfObject ());};};_dfaff :=_aff .PdfIndirectObject {};_dfaff .PdfObject =_cedce ;
_cdceeb ._bacec =&_dfaff ;_cdceeb .addObject (&_dfaff );_gbfde :=_aff .PdfIndirectObject {};_fdefb :=_aff .MakeDict ();_fdefb .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_gbfde .PdfObject =_fdefb ;_cdceeb ._adefd =&_gbfde ;
_cdceeb .addObject (_cdceeb ._adefd );_gabe ,_bgbe :=_ecaeb ("\u0077");if _bgbe !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgbe );};_cdceeb ._cgdb =_gabe ;_fgcdg :=_aff .PdfIndirectObject {};_cbaab :=_aff .MakeDict ();_cbaab .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0050\u0061\u0067e\u0073"));
_dgad :=_aff .PdfObjectArray {};_cbaab .Set ("\u004b\u0069\u0064\u0073",&_dgad );_cbaab .Set ("\u0043\u006f\u0075n\u0074",_aff .MakeInteger (0));_fgcdg .PdfObject =_cbaab ;_cdceeb ._edgeg =&_fgcdg ;_cdceeb ._gbbce =map[_aff .PdfObject ]struct{}{};_cdceeb .addObject (_cdceeb ._edgeg );
_fdefb .Set ("\u0050\u0061\u0067e\u0073",&_fgcdg );_cdceeb ._cdccb =_fdefb ;_adg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_gbfde );return _cdceeb ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ega .ReadSeeker )(*PdfFont ,error ){_ecab ,_fagdf :=_ad .ReadAll (r );if _fagdf !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fagdf );
return nil ,_fagdf ;};_dadcb ,_fagdf :=_bcd .TtfParse (_af .NewReader (_ecab ));if _fagdf !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_fagdf );
return nil ,_fagdf ;};_fcef :=&pdfCIDFontType2 {fontCommon :fontCommon {_fbged :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_aff .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dadcb .Widths )<=0{return nil ,_g .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bgage :=1000.0/float64 (_dadcb .UnitsPerEm );_ddgag :=_bgage *float64 (_dadcb .Widths [0]);_cgdc :=make (map[rune ]int );_afbc :=make (map[_bcd .GID ]int );_ecfd :=_bcd .GID (len (_dadcb .Widths ));for _bbdf ,_faga :=range _dadcb .Chars {if _faga > _ecfd -1{continue ;
};_ggde :=int (_bgage *float64 (_dadcb .Widths [_faga ]));_cgdc [_bbdf ]=_ggde ;_afbc [_faga ]=_ggde ;};_fcef ._aedcf =_cgdc ;_fcef .DW =_aff .MakeInteger (int64 (_ddgag ));_aefbd :=_gccbb (_afbc ,uint16 (_ecfd ));_fcef .W =_aff .MakeIndirectObject (_aefbd );
_gdbeb :=_aff .MakeDict ();_gdbeb .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_aff .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gdbeb .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_aff .MakeString ("\u0041\u0064\u006fb\u0065"));
_gdbeb .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_aff .MakeInteger (0));_fcef .CIDSystemInfo =_gdbeb ;_cgaccc :=&PdfFontDescriptor {FontName :_aff .MakeName (_dadcb .PostScriptName ),Ascent :_aff .MakeFloat (_bgage *float64 (_dadcb .TypoAscender )),Descent :_aff .MakeFloat (_bgage *float64 (_dadcb .TypoDescender )),CapHeight :_aff .MakeFloat (_bgage *float64 (_dadcb .CapHeight )),FontBBox :_aff .MakeArrayFromFloats ([]float64 {_bgage *float64 (_dadcb .Xmin ),_bgage *float64 (_dadcb .Ymin ),_bgage *float64 (_dadcb .Xmax ),_bgage *float64 (_dadcb .Ymax )}),ItalicAngle :_aff .MakeFloat (_dadcb .ItalicAngle ),MissingWidth :_aff .MakeFloat (_ddgag )};
_bbbaf ,_fagdf :=_aff .MakeStream (_ecab ,_aff .NewFlateEncoder ());if _fagdf !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fagdf );
return nil ,_fagdf ;};_bbbaf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aff .MakeInteger (int64 (len (_ecab ))));_cgaccc .FontFile2 =_bbbaf ;if _dadcb .Bold {_cgaccc .StemV =_aff .MakeInteger (120);}else {_cgaccc .StemV =_aff .MakeInteger (70);
};_cgaa :=_cbda ;if _dadcb .IsFixedPitch {_cgaa |=_egde ;};if _dadcb .ItalicAngle !=0{_cgaa |=_degcc ;};_cgaccc .Flags =_aff .MakeInteger (int64 (_cgaa ));_fcef ._abed =_dadcb .PostScriptName ;_fcef ._ggca =_cgaccc ;_cced :=pdfFontType0 {fontCommon :fontCommon {_fbged :"\u0054\u0079\u0070e\u0030",_abed :_dadcb .PostScriptName },DescendantFont :&PdfFont {_gebd :_fcef },Encoding :_aff .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_faggb :_dadcb .NewEncoder ()};
if len (_dadcb .Chars )> 0{_cbbd :=make (map[_da .CharCode ]rune ,len (_dadcb .Chars ));for _abdfc ,_geeggd :=range _dadcb .Chars {_gcfgg :=_da .CharCode (_geeggd );if _aagdd ,_cfgag :=_cbbd [_gcfgg ];!_cfgag ||(_cfgag &&_aagdd > _abdfc ){_cbbd [_gcfgg ]=_abdfc ;
};};_cced ._dcad =_da .NewToUnicodeCMap (_cbbd );};_bbfeb :=PdfFont {_gebd :&_cced };return &_bbfeb ,nil ;};func (_gdgf *PdfReader )newPdfAnnotationInkFromDict (_gffda *_aff .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fef :=PdfAnnotationInk {};_gcg ,_fdbd :=_gdgf .newPdfAnnotationMarkupFromDict (_gffda );
if _fdbd !=nil {return nil ,_fdbd ;};_fef .PdfAnnotationMarkup =_gcg ;_fef .InkList =_gffda .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fef .BS =_gffda .Get ("\u0042\u0053");return &_fef ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_adfd *PdfWriter )GetOptimizer ()Optimizer {return _adfd ._bgbg };const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// Add appends a top level outline item to the outline.
func (_eaad *Outline )Add (item *OutlineItem ){_eaad .Entries =append (_eaad .Entries ,item )};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gdef *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_gegg ,_cbag :=color .(*PdfColorDeviceCMYK );if !_cbag {_adg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbfd :=_gegg .C ();_afce :=_gegg .M ();_bdac :=_gegg .Y ();_adea :=_gegg .K ();_gbfd =_gbfd *(1-_adea )+_adea ;_afce =_afce *(1-_adea )+_adea ;
_bdac =_bdac *(1-_adea )+_adea ;_gccb :=1-_gbfd ;_eggff :=1-_afce ;_ccba :=1-_bdac ;return NewPdfColorDeviceRGB (_gccb ,_eggff ,_ccba ),nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_eeag *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_cece :=_aae .NewReader (img .getBase ());_cea :=_gd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fccc :=_aae .NewWriter (_cea );
_cgdd :=_cf .Pow (2,float64 (img .BitsPerComponent ))-1;_bfad :=make ([]uint32 ,3);var (_bddg error ;_dbcge ,_gaeb ,_bafga ,_gged ,_dbca ,_egca float64 ;);for {_bddg =_cece .ReadSamples (_bfad );if _bddg ==_ega .EOF {break ;}else if _bddg !=nil {return img ,_bddg ;
};_dbcge =float64 (_bfad [0])/_cgdd ;_gaeb =float64 (_bfad [1])/_cgdd ;_bafga =float64 (_bfad [2])/_cgdd ;_gged =_eeag .Matrix [0]*_cf .Pow (_dbcge ,_eeag .Gamma [0])+_eeag .Matrix [3]*_cf .Pow (_gaeb ,_eeag .Gamma [1])+_eeag .Matrix [6]*_cf .Pow (_bafga ,_eeag .Gamma [2]);
_dbca =_eeag .Matrix [1]*_cf .Pow (_dbcge ,_eeag .Gamma [0])+_eeag .Matrix [4]*_cf .Pow (_gaeb ,_eeag .Gamma [1])+_eeag .Matrix [7]*_cf .Pow (_bafga ,_eeag .Gamma [2]);_egca =_eeag .Matrix [2]*_cf .Pow (_dbcge ,_eeag .Gamma [0])+_eeag .Matrix [5]*_cf .Pow (_gaeb ,_eeag .Gamma [1])+_eeag .Matrix [8]*_cf .Pow (_bafga ,_eeag .Gamma [2]);
_dbcge =3.240479*_gged +-1.537150*_dbca +-0.498535*_egca ;_gaeb =-0.969256*_gged +1.875992*_dbca +0.041556*_egca ;_bafga =0.055648*_gged +-0.204043*_dbca +1.057311*_egca ;_dbcge =_cf .Min (_cf .Max (_dbcge ,0),1.0);_gaeb =_cf .Min (_cf .Max (_gaeb ,0),1.0);
_bafga =_cf .Min (_cf .Max (_bafga ,0),1.0);_bfad [0]=uint32 (_dbcge *_cgdd );_bfad [1]=uint32 (_gaeb *_cgdd );_bfad [2]=uint32 (_bafga *_cgdd );if _bddg =_fccc .WriteSamples (_bfad );_bddg !=nil {return img ,_bddg ;};};return _efecb (&_cea ),nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bcafa *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bcafa ._cfdbe =colorspace ;};

// String returns a human readable description of `fontfile`.
func (_ddcgd *fontFile )String ()string {_efeb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _ddcgd ._bgbca !=nil {_efeb =_ddcgd ._bgbca .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_ddcgd ._gdag ,_efeb );
};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// A returns the value of the A component of the color.
func (_dggg *PdfColorCalRGB )A ()float64 {return _dggg [0]};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _f .Time )(PdfDate ,error ){_gcbfg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_facc ,_ :=_eed .ParseInt (_gcbfg [1:3],10,32);_fabee ,_ :=_eed .ParseInt (_gcbfg [4:6],10,32);return PdfDate {_ababa :int64 (timeObj .Year ()),_acdbf :int64 (timeObj .Month ()),_afcd :int64 (timeObj .Day ()),_bfcbd :int64 (timeObj .Hour ()),_ggdbf :int64 (timeObj .Minute ()),_bdcc :int64 (timeObj .Second ()),_acbgca :_gcbfg [0],_cdbec :_facc ,_geecde :_fabee },nil ;
};func (_afebc *PdfWriter )addObject (_cffff _aff .PdfObject )bool {_ccgdf :=_afebc .hasObject (_cffff );if !_ccgdf {_egfdc :=_aff .ResolveReferencesDeep (_cffff ,_afebc ._cgdcb );if _egfdc !=nil {_adg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_egfdc );
};_afebc ._babcd =append (_afebc ._babcd ,_cffff );_afebc ._bgadg [_cffff ]=struct{}{};return true ;};return false ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _aff .PdfObject ;T _aff .PdfObject ;Operation _aff .PdfObject ;};func (_eadee *PdfReader )flattenFieldsWithOpts (_edfb bool ,_fdaa FieldAppearanceGenerator ,_abfab *FieldFlattenOpts )error {if _abfab ==nil {_abfab =&FieldFlattenOpts {};
};var _afbe bool ;_febb :=map[*PdfAnnotation ]bool {};{var _feaac []*PdfField ;_fdeeb :=_eadee .AcroForm ;if _fdeeb !=nil {if _abfab .FilterFunc !=nil {_feaac =_fdeeb .filteredFields (_abfab .FilterFunc ,true );_afbe =_fdeeb .Fields !=nil &&len (*_fdeeb .Fields )> 0;
}else {_feaac =_fdeeb .AllFields ();};};for _ ,_fgde :=range _feaac {if len (_fgde .Annotations )< 1{_adg .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_fgde .PartialName ());
for _bddb ,_agcef :=range _fgde .Kids {for _ ,_gfac :=range _agcef .Annotations {_febb [_gfac .PdfAnnotation ]=_fgde .V !=nil ;if _agcef .V ==nil {_agcef .V =_fgde .V ;};if _agcef .T ==nil {_agcef .T =_aff .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_fgde .PartialName (),_bddb ));
};if _fdaa !=nil {_ceag ,_dedac :=_fdaa .GenerateAppearanceDict (_fdeeb ,_agcef ,_gfac );if _dedac !=nil {return _dedac ;};_gfac .AP =_ceag ;};};};};for _ ,_bdaee :=range _fgde .Annotations {_febb [_bdaee .PdfAnnotation ]=_fgde .V !=nil ;if _fdaa !=nil {_afabfe ,_cdcfg :=_fdaa .GenerateAppearanceDict (_fdeeb ,_fgde ,_bdaee );
if _cdcfg !=nil {return _cdcfg ;};_bdaee .AP =_afabfe ;};};};};if _edfb {for _ ,_ggda :=range _eadee .PageList {_gdeea ,_dfgce :=_ggda .GetAnnotations ();if _dfgce !=nil {return _dfgce ;};for _ ,_gabbe :=range _gdeea {_febb [_gabbe ]=true ;};};};for _ ,_fcfef :=range _eadee .PageList {_effa :=_fcfef .flattenFieldsWithOpts (_fdaa ,_abfab ,_febb );
if _effa !=nil {return _effa ;};};if !_afbe {_eadee .AcroForm =nil ;};return nil ;};func (_cfcf *PdfReader )newPdfActionImportDataFromDict (_bea *_aff .PdfObjectDictionary )(*PdfActionImportData ,error ){_ccf ,_gbd :=_dfc (_bea .Get ("\u0046"));if _gbd !=nil {return nil ,_gbd ;
};return &PdfActionImportData {F :_ccf },nil ;};func (_dgdd *PdfReader )loadDSS ()(*DSS ,error ){if _dgdd ._gaece .GetCrypter ()!=nil &&!_dgdd ._gaece .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dfgde :=_dgdd ._dcadd .Get ("\u0044\u0053\u0053");if _dfgde ==nil {return nil ,nil ;};_agbfe ,_ :=_aff .GetIndirect (_dfgde );_dfgde =_aff .TraceToDirectObject (_dfgde );switch _ecdbg :=_dfgde .(type ){case *_aff .PdfObjectNull :return nil ,nil ;case *_aff .PdfObjectDictionary :return _dggcf (_agbfe ,_ecdbg );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_dfgde );};func (_gedc *LTV )buildCertChain (_bbefd ,_eabdd []*_fb .Certificate )([]*_fb .Certificate ,map[string ]*_fb .Certificate ,error ){_afdba :=map[string ]*_fb .Certificate {};
for _ ,_dgbdg :=range _bbefd {_afdba [_dgbdg .Subject .CommonName ]=_dgbdg ;};_accda :=_bbefd ;for _ ,_gdaad :=range _eabdd {_fgbge :=_gdaad .Subject .CommonName ;if _ ,_fbebd :=_afdba [_fgbge ];_fbebd {continue ;};_afdba [_fgbge ]=_gdaad ;_accda =append (_accda ,_gdaad );
};if len (_accda )==0{return nil ,nil ,ErrSignNoCertificates ;};var _bgcea error ;for _gede :=_accda [0];_gede !=nil &&!_gedc .CertClient .IsCA (_gede );{_edbe ,_ecaff :=_afdba [_gede .Issuer .CommonName ];if !_ecaff {if _edbe ,_bgcea =_gedc .CertClient .GetIssuer (_gede );
_bgcea !=nil {_adg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_bgcea );
break ;};_afdba [_gede .Issuer .CommonName ]=_edbe ;_accda =append (_accda ,_edbe );};_gede =_edbe ;};return _accda ,_afdba ,nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_egfd *DSS )ToPdfObject ()_aff .PdfObject {_gegcd :=_egfd ._dfad .PdfObject .(*_aff .PdfObjectDictionary );_gegcd .Clear ();_ggfg :=_aff .MakeDict ();for _fegc ,_fbcc :=range _egfd .VRI {_ggfg .Set (*_aff .MakeName (_fegc ),_fbcc .ToPdfObject ());
};_gegcd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_egcdd (_egfd .Certs ));_gegcd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_egcdd (_egfd .OCSPs ));_gegcd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_egcdd (_egfd .CRLs ));_gegcd .Set ("\u0056\u0052\u0049",_ggfg );
return _egfd ._dfad ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dbbg *PdfPage )GetContentStreamObjs ()[]_aff .PdfObject {if _dbbg .Contents ==nil {return nil ;};_befg :=_aff .TraceToDirectObject (_dbbg .Contents );if _bbgad ,_gfbc :=_befg .(*_aff .PdfObjectArray );_gfbc {return _bbgad .Elements ();};return []_aff .PdfObject {_befg };
};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_afgc *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_feab ,_baaf :=color .(*PdfColorPattern );if !_baaf {_adg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _feab .Color ==nil {return color ,nil ;};if _afgc .UnderlyingCS ==nil {return nil ,_g .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _afgc .UnderlyingCS .ColorToRGB (_feab .Color );
};

// GetContainingPdfObject implements interface PdfModel.
func (_eebbf *Permissions )GetContainingPdfObject ()_aff .PdfObject {return _eebbf ._cbdgg };

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_aff .PdfObject ;GetContainingPdfObject ()_aff .PdfObject ;};func _gbddg ()string {_aebda .Lock ();defer _aebda .Unlock ();return _bbbade };func (_bdceg *LTV )getCRLs (_fdbba []*_fb .Certificate )([][]byte ,error ){_cggc :=make ([][]byte ,0,len (_fdbba ));
for _ ,_gacbea :=range _fdbba {for _ ,_ecac :=range _gacbea .CRLDistributionPoints {if _bdceg .CertClient .IsCA (_gacbea ){continue ;};_gdca ,_fdac :=_bdceg .CRLClient .MakeRequest (_ecac ,_gacbea );if _fdac !=nil {_adg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fdac );
continue ;};_cggc =append (_cggc ,_gdca );};};return _cggc ,nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_egfbd *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gffdcdb :=_egfbd .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gffdcdb )> 0;_ggffg :=_aff .NewFlateEncoder ();_dgfee :=_aff .MakeArray ();if wrapContents {_befc ,_egaage :=_aff .MakeStream ([]byte ("\u0071\u000a"),_ggffg );
if _egaage !=nil {return _egaage ;};_dgfee .Append (_befc );};_dgfee .Append (_gffdcdb ...);if wrapContents {_gfebf ,_gabdc :=_aff .MakeStream ([]byte ("\u000a\u0051\u000a"),_ggffg );if _gabdc !=nil {return _gabdc ;};_dgfee .Append (_gfebf );};_cbcb ,_dgea :=_aff .MakeStream (cs ,_ggffg );
if _dgea !=nil {return _dgea ;};_dgfee .Append (_cbcb );_egfbd .Contents =_dgfee ;return nil ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_cedgee *PdfReader )GetCatalogStructTreeRoot ()(_aff .PdfObject ,bool ){if _cedgee ._dcadd ==nil {return nil ,false ;};_efba :=_cedgee ._dcadd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _efba ,_efba !=nil ;
};

// SetFillImage attach a model.Image to push button.
func (_edcea *PdfFieldButton )SetFillImage (image *Image ){if _edcea .IsPush (){_edcea ._agbe =image ;};};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fede *PdfWriter )SetPageLabels (pageLabels _aff .PdfObject )error {if pageLabels ==nil {return nil ;};_adg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fede ._cdccb .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fede .addObjects (pageLabels );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_bfgd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_aebaed *PdfWriter )optimizeDocument ()error {if _aebaed ._afgef ==nil {return nil ;};_afbg ,_abgag :=_aff .GetDict (_aebaed ._bacec );if !_abgag {return _g .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eaggeg :=_bb .Document {ID :[2]string {_aebaed ._bacb ,_aebaed ._aceag },Version :_aebaed ._bgeecg ,Objects :_aebaed ._babcd ,Info :_afbg ,Crypt :_aebaed ._fcgf ,UseHashBasedID :_aebaed ._bdef };if _cdgbca :=_aebaed ._afgef .ApplyStandard (&_eaggeg );
_cdgbca !=nil {return _cdgbca ;};_aebaed ._bacb ,_aebaed ._aceag =_eaggeg .ID [0],_eaggeg .ID [1];_aebaed ._bgeecg =_eaggeg .Version ;_aebaed ._babcd =_eaggeg .Objects ;_aebaed ._bacec .PdfObject =_eaggeg .Info ;_aebaed ._bdef =_eaggeg .UseHashBasedID ;
_aebaed ._fcgf =_eaggeg .Crypt ;_eegba :=make (map[_aff .PdfObject ]struct{},len (_aebaed ._babcd ));for _ ,_ddbaa :=range _aebaed ._babcd {_eegba [_ddbaa ]=struct{}{};};_aebaed ._bgadg =_eegba ;return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_decbb pdfFontType0 )GetCharMetrics (code _eee .CharCode )(_bcd .CharMetrics ,bool ){if _decbb .DescendantFont ==nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_decbb );
return _bcd .CharMetrics {},false ;};return _decbb .DescendantFont .GetCharMetrics (code );};

// ToPdfObject converts date to a PDF string object.
func (_fbdeb *PdfDate )ToPdfObject ()_aff .PdfObject {_geegb :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fbdeb ._ababa ,_fbdeb ._acdbf ,_fbdeb ._afcd ,_fbdeb ._bfcbd ,_fbdeb ._ggdbf ,_fbdeb ._bdcc ,_fbdeb ._acbgca ,_fbdeb ._cdbec ,_fbdeb ._geecde );
return _aff .MakeString (_geegb );};func (_efbdd *PdfReader )lookupPageByObject (_fcdgc _aff .PdfObject )(*PdfPage ,error ){return nil ,_g .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};var (_eedcf =_bd .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_ggge =_bd .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_ebaad =_bd .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_gcef ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fdbfce ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_dedeb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_fbbd *PdfReader )loadAction (_ace _aff .PdfObject )(*PdfAction ,error ){if _deac ,_baf :=_aff .GetIndirect (_ace );_baf {_ggcd ,_bdg :=_fbbd .newPdfActionFromIndirectObject (_deac );if _bdg !=nil {return nil ,_bdg ;};return _ggcd ,nil ;}else if !_aff .IsNullObject (_ace ){return nil ,_g .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_bcaf *PdfReader )newPdfAnnotationWidgetFromDict (_ffcg *_aff .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ddaf :=PdfAnnotationWidget {};_ddaf .H =_ffcg .Get ("\u0048");_ddaf .MK =_ffcg .Get ("\u004d\u004b");_ddaf .A =_ffcg .Get ("\u0041");
_ddaf .AA =_ffcg .Get ("\u0041\u0041");_ddaf .BS =_ffcg .Get ("\u0042\u0053");_ddaf .Parent =_ffcg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ddaf ,nil ;};func _dcaee (_gffdcd *PdfField ,_dbcgg _aff .PdfObject ){for _ ,_bbebc :=range _gffdcd .Annotations {_bbebc .AS =_dbcgg ;
_bbebc .ToPdfObject ();};};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bdgfb *PdfPageResources )GetContainingPdfObject ()_aff .PdfObject {return _bdgfb ._bdegd };var _eaed =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// SetVersion sets the PDF version of the output file.
func (_fadbf *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fadbf ._bgeecg .Major =majorVersion ;_fadbf ._bgeecg .Minor =minorVersion ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_caabe *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _caabe ._abbe .(*PdfShadingPattern );};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_gfcdg *_bb .Document )error ;};

// ToPdfObject implements interface PdfModel.
func (_bfacd *PdfSignatureReference )ToPdfObject ()_aff .PdfObject {_debeg :=_aff .MakeDict ();_debeg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bfacd .Type );_debeg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_bfacd .TransformMethod );
_debeg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_bfacd .TransformParams );_debeg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_bfacd .Data );_debeg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_bfacd .DigestMethod );
return _debeg ;};

// SetDate sets the `M` field of the signature.
func (_dccgc *PdfSignature )SetDate (date _f .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dccgc .M =_aff .MakeString (date .Format (format ));
};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_acbg :=NewPdfAnnotation ();_bcg :=&PdfAnnotationHighlight {};_bcg .PdfAnnotation =_acbg ;_bcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acbg .SetContext (_bcg );return _bcg ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_abeecb *PdfFieldText )ToPdfObject ()_aff .PdfObject {_abeecb .PdfField .ToPdfObject ();_ccdbg :=_abeecb ._dfbfd ;_geadf :=_ccdbg .PdfObject .(*_aff .PdfObjectDictionary );_geadf .Set ("\u0046\u0054",_aff .MakeName ("\u0054\u0078"));if _abeecb .DA !=nil {_geadf .Set ("\u0044\u0041",_abeecb .DA );
};if _abeecb .Q !=nil {_geadf .Set ("\u0051",_abeecb .Q );};if _abeecb .DS !=nil {_geadf .Set ("\u0044\u0053",_abeecb .DS );};if _abeecb .RV !=nil {_geadf .Set ("\u0052\u0056",_abeecb .RV );};if _abeecb .MaxLen !=nil {_geadf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_abeecb .MaxLen );
};return _ccdbg ;};

// ToPdfObject returns the PDF representation of the function.
func (_aaedad *PdfFunctionType2 )ToPdfObject ()_aff .PdfObject {_fbdb :=_aff .MakeDict ();_fbdb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aff .MakeInteger (2));_cfbgg :=&_aff .PdfObjectArray {};for _ ,_bagb :=range _aaedad .Domain {_cfbgg .Append (_aff .MakeFloat (_bagb ));
};_fbdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfbgg );if _aaedad .Range !=nil {_dffac :=&_aff .PdfObjectArray {};for _ ,_gecb :=range _aaedad .Range {_dffac .Append (_aff .MakeFloat (_gecb ));};_fbdb .Set ("\u0052\u0061\u006eg\u0065",_dffac );};
if _aaedad .C0 !=nil {_ddbfa :=&_aff .PdfObjectArray {};for _ ,_dcde :=range _aaedad .C0 {_ddbfa .Append (_aff .MakeFloat (_dcde ));};_fbdb .Set ("\u0043\u0030",_ddbfa );};if _aaedad .C1 !=nil {_dagf :=&_aff .PdfObjectArray {};for _ ,_eegc :=range _aaedad .C1 {_dagf .Append (_aff .MakeFloat (_eegc ));
};_fbdb .Set ("\u0043\u0031",_dagf );};_fbdb .Set ("\u004e",_aff .MakeFloat (_aaedad .N ));if _aaedad ._ceeae !=nil {_aaedad ._ceeae .PdfObject =_fbdb ;return _aaedad ._ceeae ;};return _fbdb ;};

// C returns the value of the C component of the color.
func (_abdg *PdfColorCalRGB )C ()float64 {return _abdg [2]};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_gece *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_aff .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_aff .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// SetAction sets the PDF action for the annotation link.
func (_aaf *PdfAnnotationLink )SetAction (action *PdfAction ){_aaf ._dea =action ;if action ==nil {_aaf .A =nil ;};};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aff .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ae *PdfActionMovie )ToPdfObject ()_aff .PdfObject {_ae .PdfAction .ToPdfObject ();_afe :=_ae ._df ;_edc :=_afe .PdfObject .(*_aff .PdfObjectDictionary );_edc .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeMovie )));_edc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ae .Annotation );
_edc .SetIfNotNil ("\u0054",_ae .T );_edc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ae .Operation );return _afe ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_agagd *PdfPageResources )GetShadingByName (keyName _aff .PdfObjectName )(*PdfShading ,bool ){if _agagd .Shading ==nil {return nil ,false ;};_gbgac ,_abbcg :=_aff .TraceToDirectObject (_agagd .Shading ).(*_aff .PdfObjectDictionary );if !_abbcg {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agagd .Shading );
return nil ,false ;};if _gedga :=_gbgac .Get (keyName );_gedga !=nil {_adfgc ,_bfaef :=_dbdf (_gedga );if _bfaef !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_bfaef );
return nil ,false ;};return _adfgc ,true ;};return nil ,false ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// AddOutlineTree adds outlines to a PDF file.
func (_dedda *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_dedda ._dccbd =outlineTree };func (_eabaa *PdfWriter )writeObjects (){_adg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_eabaa ._babcd ));
_eabaa ._abebd =make (map[int ]crossReference );_eabaa ._abebd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _eabaa ._gfaab .ObjectMap !=nil {for _gcaedc ,_aafeb :=range _eabaa ._gfaab .ObjectMap {if _gcaedc ==0{continue ;};if _aafeb .XType ==_aff .XrefTypeObjectStream {_bagd :=crossReference {Type :2,ObjectNumber :_aafeb .OsObjNumber ,Index :_aafeb .OsObjIndex };
_eabaa ._abebd [_gcaedc ]=_bagd ;};if _aafeb .XType ==_aff .XrefTypeTableEntry {_dfbg :=crossReference {Type :1,ObjectNumber :_aafeb .ObjectNumber ,Offset :_aafeb .Offset };_eabaa ._abebd [_gcaedc ]=_dfbg ;};};};};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_eadfe *Image )GetSamples ()[]uint32 {_gcgga :=_aae .ResampleBytes (_eadfe .Data ,int (_eadfe .BitsPerComponent ));if _eadfe .BitsPerComponent < 8{_gcgga =_eadfe .samplesTrimPadding (_gcgga );};_abfabg :=int (_eadfe .Width )*int (_eadfe .Height )*_eadfe .ColorComponents ;
if len (_gcgga )< _abfabg {_adg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_gcgga ),_abfabg );
return _gcgga ;}else if len (_gcgga )> _abfabg {_adg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_gcgga ),_abfabg );
_gcgga =_gcgga [:_abfabg ];};return _gcgga ;};var _ pdfFont =(*pdfFontSimple )(nil );

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_babdb *PdfPage )GetPageAsIndirectObject ()*_aff .PdfIndirectObject {return _babdb ._fage };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aebda .Lock ();defer _aebda .Unlock ();_gddfe =creator };

// GetContainingPdfObject implements interface PdfModel.
func (_eff *PdfAction )GetContainingPdfObject ()_aff .PdfObject {return _eff ._df };func (_gceea *PdfWriter )writeTrailer (_caaf int ){_gceea .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _cedaa :=0;_cedaa <=_caaf ;{for ;_cedaa <=_caaf ;_cedaa ++{_fbabf ,_dbdda :=_gceea ._abebd [_cedaa ];
if _dbdda &&(!_gceea ._ccbe ||_gceea ._ccbe &&(_fbabf .Type ==1&&_fbabf .Offset >=_gceea ._abced ||_fbabf .Type ==0)){break ;};};var _cfgabf int ;for _cfgabf =_cedaa +1;_cfgabf <=_caaf ;_cfgabf ++{_afdbae ,_ffae :=_gceea ._abebd [_cfgabf ];if _ffae &&(!_gceea ._ccbe ||_gceea ._ccbe &&(_afdbae .Type ==1&&_afdbae .Offset > _gceea ._abced )){continue ;
};break ;};_gebba :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cedaa ,_cfgabf -_cedaa );_gceea .writeString (_gebba );for _ffab :=_cedaa ;_ffab < _cfgabf ;_ffab ++{_ccbeg :=_gceea ._abebd [_ffab ];switch _ccbeg .Type {case 0:_gebba =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_gceea .writeString (_gebba );case 1:_gebba =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_ccbeg .Offset ,0);_gceea .writeString (_gebba );};};_cedaa =_cfgabf +1;};_gggag :=_aff .MakeDict ();_gggag .Set ("\u0049\u006e\u0066\u006f",_gceea ._bacec );
_gggag .Set ("\u0052\u006f\u006f\u0074",_gceea ._adefd );_gggag .Set ("\u0053\u0069\u007a\u0065",_aff .MakeInteger (int64 (_caaf +1)));if _gceea ._ccbe &&_gceea ._gecec > 0{_gggag .Set ("\u0050\u0072\u0065\u0076",_aff .MakeInteger (_gceea ._gecec ));};
if _gceea ._fcgf !=nil {_gggag .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gceea ._fdedd );};if _gceea ._dfdcg ==nil &&_gceea ._bacb !=""&&_gceea ._aceag !=""{_gceea ._dfdcg =_aff .MakeArray (_aff .MakeHexString (_gceea ._bacb ),_aff .MakeHexString (_gceea ._aceag ));
};if _gceea ._dfdcg !=nil {_gggag .Set ("\u0049\u0044",_gceea ._dfdcg );_adg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gceea ._dfdcg );};_gceea .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gceea .writeString (_gggag .WriteString ());
_gceea .writeString ("\u000a");};var ErrColorOutOfRange =_g .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_cggfa []_aff .PdfObject )([]_aff .PdfObject ,error );};

// ToPdfObject implements interface PdfModel.
func (_bebbg *PdfAnnotationSound )ToPdfObject ()_aff .PdfObject {_bebbg .PdfAnnotation .ToPdfObject ();_faca :=_bebbg ._ccfb ;_afag :=_faca .PdfObject .(*_aff .PdfObjectDictionary );_bebbg .PdfAnnotationMarkup .appendToPdfDictionary (_afag );_afag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0053\u006f\u0075n\u0064"));
_afag .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bebbg .Sound );_afag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bebbg .Name );return _faca ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_fcecf :=&PdfOutline {_ecbb :_aff .MakeIndirectObject (_aff .MakeDict ())};_fcecf ._gecd =_fcecf ;return _fcecf ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_gbeg *PdfReader )newPdfActionHideFromDict (_aade *_aff .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_aade .Get ("\u0054"),H :_aade .Get ("\u0048")},nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_efbbf *PdfPageResources )SetXObjectImageByName (keyName _aff .PdfObjectName ,ximg *XObjectImage )error {_fedcb :=ximg .ToPdfObject ().(*_aff .PdfObjectStream );_degce :=_efbbf .SetXObjectByName (keyName ,_fedcb );return _degce ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aebda .Lock ();defer _aebda .Unlock ();_bbbade =keywords };

// GetOCProperties returns the optional content properties PdfObject.
func (_dagfc *PdfReader )GetOCProperties ()(_aff .PdfObject ,error ){_dbad :=_dagfc ._dcadd ;_eefgd :=_dbad .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_eefgd =_aff .ResolveReference (_eefgd );if !_dagfc ._gfgg {_cffbd :=_dagfc .traverseObjectData (_eefgd );
if _cffbd !=nil {return nil ,_cffbd ;};};return _eefgd ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gfg PdfModel ;Type _aff .PdfObject ;S _aff .PdfObject ;Next _aff .PdfObject ;_df *_aff .PdfIndirectObject ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dbda *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dbda .Alternate ==nil {_adg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dbda .N ==1{_adg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ggdf :=NewPdfColorspaceDeviceGray ();return _ggdf .ImageToRGB (img );}else if _dbda .N ==3{_adg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _dbda .N ==4{_adg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ebdd :=NewPdfColorspaceDeviceCMYK ();return _ebdd .ImageToRGB (img );}else {return img ,_g .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_adg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dbda );
_gbfa ,_fgca :=_dbda .Alternate .ImageToRGB (img );_adg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_adg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_gbfa );
return _gbfa ,_fgca ;};func _ggggfe (_adeeb _aff .PdfObject )(*_aff .PdfObjectDictionary ,*fontCommon ,error ){_ffeba :=&fontCommon {};if _feace ,_cccg :=_adeeb .(*_aff .PdfIndirectObject );_cccg {_ffeba ._acfg =_feace .ObjectNumber ;};_eaf ,_dcaag :=_aff .GetDict (_adeeb );
if !_dcaag {_adg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_adeeb );
return nil ,nil ,ErrFontNotSupported ;};_baec ,_dcaag :=_aff .GetNameVal (_eaf .Get ("\u0054\u0079\u0070\u0065"));if !_dcaag {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _baec !="\u0046\u006f\u006e\u0074"{_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_baec ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_aff .ErrTypeError ;};_fbgee ,_dcaag :=_aff .GetNameVal (_eaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dcaag {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ffeba ._fbged =_fbgee ;_dacf ,_dcaag :=_aff .GetNameVal (_eaf .Get ("\u004e\u0061\u006d\u0065"));if _dcaag {_ffeba ._edebf =_dacf ;};_badbe :=_eaf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _badbe !=nil {_ffeba ._ccbfg =_aff .TraceToDirectObject (_badbe );
_dgfb ,_cecdd :=_dgdfe (_ffeba ._ccbfg ,_ffeba );if _cecdd !=nil {return _eaf ,_ffeba ,_cecdd ;};_ffeba ._dcad =_dgfb ;}else if _fbgee =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fbgee =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bbfee ,_gefa :=_da .NewCIDSystemInfo (_eaf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _gefa !=nil {return _eaf ,_ffeba ,_gefa ;};_cdbfb :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bbfee .Registry ,_bbfee .Ordering );if _da .IsPredefinedCMap (_cdbfb ){_ffeba ._dcad ,_gefa =_da .LoadPredefinedCMap (_cdbfb );
if _gefa !=nil {_adg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cdbfb ,_gefa );
};};};_ffgba :=_eaf .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _ffgba !=nil {_cccbf ,_gdcdec :=_cgaeg (_ffgba );if _gdcdec !=nil {_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdcdec );
return _eaf ,_ffeba ,_gdcdec ;};_ffeba ._ggca =_cccbf ;};if _fbgee !="\u0054\u0079\u0070e\u0033"{_eagg ,_afaag :=_aff .GetNameVal (_eaf .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_afaag {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _eaf ,_ffeba ,ErrRequiredAttributeMissing ;};_ffeba ._abed =_eagg ;};return _eaf ,_ffeba ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_adgc *PdfAppender )UpdateObject (obj _aff .PdfObject ){_adgc .replaceObject (obj ,obj );if _ ,_bgdf :=_adgc ._deeb [obj ];!_bgdf {_adgc ._aggc =append (_adgc ._aggc ,obj );_adgc ._deeb [obj ]=struct{}{};};};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gaee :=map[rune ]int {};for _ ,_agdg :=range text {_gaee [_agdg ]++;};return _gaee ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_aff .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_aff .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_aff .PdfObjectBool ;_fcbfb PdfModel ;_bdacg _aff .PdfObject ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";
ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";
ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";
ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";
ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bfbf *pdfCIDFontType2 )ToPdfObject ()_aff .PdfObject {if _bfbf ._eaacd ==nil {_bfbf ._eaacd =&_aff .PdfIndirectObject {};};_acgaf :=_bfbf .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_bfbf ._eaacd .PdfObject =_acgaf ;if _bfbf .CIDSystemInfo !=nil {_acgaf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bfbf .CIDSystemInfo );};if _bfbf .DW !=nil {_acgaf .Set ("\u0044\u0057",_bfbf .DW );};if _bfbf .DW2 !=nil {_acgaf .Set ("\u0044\u0057\u0032",_bfbf .DW2 );
};if _bfbf .W !=nil {_acgaf .Set ("\u0057",_bfbf .W );};if _bfbf .W2 !=nil {_acgaf .Set ("\u0057\u0032",_bfbf .W2 );};if _bfbf .CIDToGIDMap !=nil {_acgaf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bfbf .CIDToGIDMap );};return _bfbf ._eaacd ;
};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bbbf :=NewPdfAction ();_dfgc :=&PdfActionJavaScript {};_dfgc .PdfAction =_bbbf ;_bbbf .SetContext (_dfgc );return _dfgc ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gf .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_aff .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_aff .MakeInteger (int64 (permission )),V :_aff .MakeName ("\u0031\u002e\u0032")};
};func (_daee *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_cbace *PdfShading )GetContext ()PdfModel {return _cbace ._fcbfb };

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bf .PSProgram ;_gdbae *_bf .PSExecutor ;_addecb []byte ;_edgbg *_aff .PdfObjectStream ;};func _baef (_bbaf _aff .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_cbabc :=NewPdfColorspaceSpecialSeparation ();
if _begc ,_gbfc :=_bbaf .(*_aff .PdfIndirectObject );_gbfc {_cbabc ._dede =_begc ;};_bbaf =_aff .TraceToDirectObject (_bbaf );_bdgf ,_fgfac :=_bbaf .(*_aff .PdfObjectArray );if !_fgfac {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _bdgf .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_bbaf =_bdgf .Get (0);
_dgee ,_fgfac :=_bbaf .(*_aff .PdfObjectName );if !_fgfac {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dgee !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_bbaf =_bdgf .Get (1);_dgee ,_fgfac =_bbaf .(*_aff .PdfObjectName );if !_fgfac {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_cbabc .ColorantName =_dgee ;_bbaf =_bdgf .Get (2);_bgeg ,_cfcga :=NewPdfColorspaceFromPdfObject (_bbaf );if _cfcga !=nil {return nil ,_cfcga ;};_cbabc .AlternateSpace =_bgeg ;_bbafa ,_cfcga :=_fdfeg (_bdgf .Get (3));if _cfcga !=nil {return nil ,_cfcga ;
};_cbabc .TintTransform =_bbafa ;return _cbabc ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ffadb *PdfPattern )SetContext (ctx PdfModel ){_ffadb ._abbe =ctx };

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_aff .PdfObjectInteger ;BitsPerComponent *_aff .PdfObjectInteger ;BitsPerFlag *_aff .PdfObjectInteger ;Decode *_aff .PdfObjectArray ;Function []PdfFunction ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_aff .PdfObjectArray ;_agbe *Image ;};func (_eecff fontCommon )fontFlags ()int {if _eecff ._ggca ==nil {return 0;};return _eecff ._ggca ._cdbb ;};func (_ebgaf *PdfReader )newPdfAnnotationRedactFromDict (_dbaf *_aff .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fcda :=PdfAnnotationRedact {};
_dddg ,_edd :=_ebgaf .newPdfAnnotationMarkupFromDict (_dbaf );if _edd !=nil {return nil ,_edd ;};_fcda .PdfAnnotationMarkup =_dddg ;_fcda .QuadPoints =_dbaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fcda .IC =_dbaf .Get ("\u0049\u0043");
_fcda .RO =_dbaf .Get ("\u0052\u004f");_fcda .OverlayText =_dbaf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_fcda .Repeat =_dbaf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fcda .DA =_dbaf .Get ("\u0044\u0041");_fcda .Q =_dbaf .Get ("\u0051");
return &_fcda ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fbbff *PdfFieldButton )ToPdfObject ()_aff .PdfObject {_fbbff .PdfField .ToPdfObject ();_egcfd :=_fbbff ._dfbfd ;_bfgf :=_egcfd .PdfObject .(*_aff .PdfObjectDictionary );_bfgf .Set ("\u0046\u0054",_aff .MakeName ("\u0042\u0074\u006e"));if _fbbff .Opt !=nil {_bfgf .Set ("\u004f\u0070\u0074",_fbbff .Opt );
};return _egcfd ;};func _bgabd ()string {_aebda .Lock ();defer _aebda .Unlock ();return _eddc };

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_aff .PdfObjectBool ;SigFlags *_aff .PdfObjectInteger ;CO *_aff .PdfObjectArray ;DR *PdfPageResources ;DA *_aff .PdfObjectString ;Q *_aff .PdfObjectInteger ;XFA _aff .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _aff .PdfObject ;_fbcde *_aff .PdfIndirectObject ;_abcga bool ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ceb :=NewPdfAction ();_gc :=&PdfActionRendition {};_gc .PdfAction =_ceb ;_ceb .SetContext (_gc );return _gc ;};func _eaec (_dbaef *_aff .PdfObjectDictionary ){_aedf ,_gdbf :=_aff .GetArray (_dbaef .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_feeb ,_cegab :=_aff .GetIntVal (_dbaef .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_fcfbd ,_gaff :=_aff .GetIntVal (_dbaef .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _gdbf &&_cegab &&_gaff {_gaebg :=_aedf .Len ();if _gaebg !=_fcfbd -_feeb +1{_adg .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_gaebg ,_fcfbd );
_fbcf :=_aff .PdfObjectInteger (_feeb +_gaebg -1);_dbaef .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_fbcf );};};};

// ToPdfObject implements interface PdfModel.
func (_acf *PdfActionSubmitForm )ToPdfObject ()_aff .PdfObject {_acf .PdfAction .ToPdfObject ();_ge :=_acf ._df ;_abg :=_ge .PdfObject .(*_aff .PdfObjectDictionary );_abg .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeSubmitForm )));if _acf .F !=nil {_abg .Set ("\u0046",_acf .F .ToPdfObject ());
};_abg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_acf .Fields );_abg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_acf .Flags );return _ge ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_decag :=&XObjectImage {};_bffde :=&_aff .PdfObjectStream {};_bffde .PdfObjectDictionary =_aff .MakeDict ();_decag ._fccgd =_bffde ;return _decag ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_cgc :=NewPdfAnnotation ();_afg :=&PdfAnnotation3D {};_afg .PdfAnnotation =_cgc ;_cgc .SetContext (_afg );return _afg ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ColorToRGB converts an Indexed color to an RGB color.
func (_fggff *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fggff .Base ==nil {return nil ,_g .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fggff .Base .ColorToRGB (color );};func (_gbbdc *PdfReader )loadPerms ()(*Permissions ,error ){if _gbbcd :=_gbbdc ._dcadd .Get ("\u0050\u0065\u0072m\u0073");_gbbcd !=nil {if _eadbb ,_dfge :=_aff .GetDict (_gbbcd );_dfge {_eecb :=_eadbb .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _eecb ==nil {return nil ,nil ;};if _cebga ,_gffca :=_aff .GetIndirect (_eecb );_gffca {_fgedgd ,_afgfc :=_gbbdc .newPdfSignatureFromIndirect (_cebga );if _afgfc !=nil {return nil ,_afgfc ;};return NewPermissions (_fgedgd ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};func (_bdeg *PdfReader )newPdfAnnotationMarkupFromDict (_gdga *_aff .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_adf :=&PdfAnnotationMarkup {};
if _bdf :=_gdga .Get ("\u0054");_bdf !=nil {_adf .T =_bdf ;};if _ggce :=_gdga .Get ("\u0050\u006f\u0070u\u0070");_ggce !=nil {_gbda ,_cfb :=_ggce .(*_aff .PdfIndirectObject );if !_cfb {if _ ,_dfbe :=_ggce .(*_aff .PdfObjectNull );!_dfbe {return nil ,_g .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_cfaa ,_cee :=_bdeg .newPdfAnnotationFromIndirectObject (_gbda );if _cee !=nil {return nil ,_cee ;};if _cfaa !=nil {_fgad ,_aee :=_cfaa ._eefa .(*PdfAnnotationPopup );if !_aee {return nil ,_g .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_adf .Popup =_fgad ;};};};if _fgc :=_gdga .Get ("\u0043\u0041");_fgc !=nil {_adf .CA =_fgc ;};if _fcbg :=_gdga .Get ("\u0052\u0043");_fcbg !=nil {_adf .RC =_fcbg ;};if _adbb :=_gdga .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_adbb !=nil {_adf .CreationDate =_adbb ;};if _aegb :=_gdga .Get ("\u0049\u0052\u0054");_aegb !=nil {_adf .IRT =_aegb ;};if _aega :=_gdga .Get ("\u0053\u0075\u0062\u006a");_aega !=nil {_adf .Subj =_aega ;};if _fcfd :=_gdga .Get ("\u0052\u0054");_fcfd !=nil {_adf .RT =_fcfd ;
};if _edead :=_gdga .Get ("\u0049\u0054");_edead !=nil {_adf .IT =_edead ;};if _cda :=_gdga .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cda !=nil {_adf .ExData =_cda ;};return _adf ,nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_deaeb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ebef :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_dgac ,_fadg :=_deaeb .GetNumPages ();if _fadg !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fadg );
return nil ,_fadg ;};for _dffbd :=1;_dffbd <=_dgac ;_dffbd ++{_cgfcc ,_eeadd :=_deaeb .GetPage (_dffbd );if _eeadd !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeadd );return nil ,_eeadd ;};if opts .PageProcessCallback !=nil {_eeadd =opts .PageProcessCallback (_dffbd ,_cgfcc );
if _eeadd !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeadd );return nil ,_eeadd ;};}else if opts .PageCallback !=nil {opts .PageCallback (_dffbd ,_cgfcc );};_eeadd =_ebef .AddPage (_cgfcc );if _eeadd !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeadd );
return nil ,_eeadd ;};};_ebef ._bgeecg =_deaeb .PdfVersion ();if !opts .SkipInfo {_dagac ,_ffbdd :=_deaeb .GetPdfInfo ();if _ffbdd !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffbdd );}else {_ebef ._bacec .PdfObject =_dagac .ToPdfObject ();
};};if !opts .SkipMetadata {if _gaffb :=_deaeb ._dcadd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gaffb !=nil {if _fcdb :=_ebef .SetCatalogMetadata (_gaffb );_fcdb !=nil {return nil ,_fcdb ;};};};if !opts .SkipAcroForm {_bfgfcg :=_ebef .SetForms (_deaeb .AcroForm );
if _bfgfcg !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfgfcg );return nil ,_bfgfcg ;};};if !opts .SkipOutlines {_ebef .AddOutlineTree (_deaeb .GetOutlineTree ());};if !opts .SkipOCProperties {_abfdc ,_ggdcf :=_deaeb .GetOCProperties ();
if _ggdcf !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggdcf );}else {_ggdcf =_ebef .SetOCProperties (_abfdc );if _ggdcf !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggdcf );};};};if !opts .SkipPageLabels {_aeadd ,_eagcg :=_deaeb .GetPageLabels ();
if _eagcg !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eagcg );}else {_eagcg =_ebef .SetPageLabels (_aeadd );if _eagcg !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eagcg );};};};if !opts .SkipNamedDests {_egbce ,_fbgec :=_deaeb .GetNamedDestinations ();
if _fbgec !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgec );}else {_fbgec =_ebef .SetNamedDestinations (_egbce );if _fbgec !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgec );};};};if !opts .SkipNameDictionary {_gcgdb ,_eaadd :=_deaeb .GetNameDictionary ();
if _eaadd !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eaadd );}else {_eaadd =_ebef .SetNameDictionary (_gcgdb );if _eaadd !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eaadd );};};};if !opts .SkipRotation &&_deaeb .Rotate !=nil {if _edddc :=_ebef .SetRotation (*_deaeb .Rotate );
_edddc !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edddc );};};return &_ebef ,nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_daaba *PdfPage )ToPdfObject ()_aff .PdfObject {_beeec :=_daaba ._fage ;_daaba .GetPageDict ();return _beeec ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_abegc :=&XObjectForm {};_adcgc :=&_aff .PdfObjectStream {};_adcgc .PdfObjectDictionary =_aff .MakeDict ();_abegc ._fddef =_adcgc ;return _abegc ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_gfeg *PdfAnnotationLink )ToPdfObject ()_aff .PdfObject {_gfeg .PdfAnnotation .ToPdfObject ();_fgg :=_gfeg ._ccfb ;_fceb :=_fgg .PdfObject .(*_aff .PdfObjectDictionary );_fceb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u004c\u0069\u006e\u006b"));
if _gfeg ._dea !=nil &&_gfeg ._dea ._gfg !=nil {_fceb .Set ("\u0041",_gfeg ._dea ._gfg .ToPdfObject ());}else if _gfeg .A !=nil {_fceb .Set ("\u0041",_gfeg .A );};_fceb .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gfeg .Dest );_fceb .SetIfNotNil ("\u0048",_gfeg .H );
_fceb .SetIfNotNil ("\u0050\u0041",_gfeg .PA );_fceb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gfeg .QuadPoints );_fceb .SetIfNotNil ("\u0042\u0053",_gfeg .BS );return _fgg ;};func (_gbg *PdfAnnotationMarkup )appendToPdfDictionary (_caaa *_aff .PdfObjectDictionary ){_caaa .SetIfNotNil ("\u0054",_gbg .T );
if _gbg .Popup !=nil {_caaa .Set ("\u0050\u006f\u0070u\u0070",_gbg .Popup .ToPdfObject ());};_caaa .SetIfNotNil ("\u0043\u0041",_gbg .CA );_caaa .SetIfNotNil ("\u0052\u0043",_gbg .RC );_caaa .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gbg .CreationDate );
_caaa .SetIfNotNil ("\u0049\u0052\u0054",_gbg .IRT );_caaa .SetIfNotNil ("\u0053\u0075\u0062\u006a",_gbg .Subj );_caaa .SetIfNotNil ("\u0052\u0054",_gbg .RT );_caaa .SetIfNotNil ("\u0049\u0054",_gbg .IT );_caaa .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_gbg .ExData );
};func _gcbd (_dgaee *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_dgaee }};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ab :=NewPdfAction ();_bce :=&PdfActionGoToE {};_bce .PdfAction =_ab ;_ab .SetContext (_bce );return _bce ;};

// GetPerms returns the Permissions dictionary
func (_fccb *PdfReader )GetPerms ()*Permissions {return _fccb ._cdea };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bagbe *PdfPage )AddContentStreamByString (contentStr string )error {_ffbbf ,_dbfd :=_aff .MakeStream ([]byte (contentStr ),_aff .NewFlateEncoder ());if _dbfd !=nil {return _dbfd ;};if _bagbe .Contents ==nil {_bagbe .Contents =_ffbbf ;}else {_eccge :=_aff .TraceToDirectObject (_bagbe .Contents );
_cbbed ,_abge :=_eccge .(*_aff .PdfObjectArray );if !_abge {_cbbed =_aff .MakeArray (_eccge );};_cbbed .Append (_ffbbf );_bagbe .Contents =_cbbed ;};return nil ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_fdebg *_aff .PdfObjectDictionary ;Type *_aff .PdfObjectName ;TransformMethod *_aff .PdfObjectName ;TransformParams _aff .PdfObject ;Data _aff .PdfObject ;DigestMethod *_aff .PdfObjectName ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _aff .PdfObject ;AN _aff .PdfObject ;OP _aff .PdfObject ;JS _aff .PdfObject ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_aff .PdfObjectArray ;ExtGState _aff .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_caeb *PdfAnnotationMovie )ToPdfObject ()_aff .PdfObject {_caeb .PdfAnnotation .ToPdfObject ();_fedf :=_caeb ._ccfb ;_fcdc :=_fedf .PdfObject .(*_aff .PdfObjectDictionary );_fcdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u004d\u006f\u0076i\u0065"));
_fcdc .SetIfNotNil ("\u0054",_caeb .T );_fcdc .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_caeb .Movie );_fcdc .SetIfNotNil ("\u0041",_caeb .A );return _fedf ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cdfe ,_dcca :=_dggca (basefont );if _dcca !=nil {return nil ,_dcca ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cdfe ._fdgc =_eee .NewWinAnsiEncoder ();};return &PdfFont {_gebd :&_cdfe },nil ;
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _aabee ()string {_gdbd :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _fddg _af .Buffer ;for _ffgbd :=0;_ffgbd < 6;_ffgbd ++{_fddg .WriteRune (rune (_gdbd [_ffe .Intn (len (_gdbd ))]));};return _fddg .String ();};func (_dgcdd *PdfFont )baseFields ()*fontCommon {if _dgcdd ._gebd ==nil {_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _dgcdd ._gebd .baseFields ();};

// Items returns all children outline items.
func (_adec *OutlineItem )Items ()[]*OutlineItem {return _adec .Entries };

// ParsePdfObject parses input pdf object into given output intent.
func (_eaagga *PdfOutputIntent )ParsePdfObject (object _aff .PdfObject )error {_acbgb ,_daec :=_aff .GetDict (object );if !_daec {_adg .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _g .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_eaagga ._gebea =_acbgb ;_eaagga .Type ,_ =_acbgb .GetString ("\u0054\u0079\u0070\u0065");_adefc ,_daec :=_acbgb .GetString ("\u0053");if _daec {switch _adefc {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_eaagga .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_eaagga .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_eaagga .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_eaagga .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_eaagga .S =PdfOutputIntentTypeX ;
};};_eaagga .OutputCondition ,_ =_acbgb .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_eaagga .OutputConditionIdentifier ,_ =_acbgb .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_eaagga .RegistryName ,_ =_acbgb .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_eaagga .Info ,_ =_acbgb .GetString ("\u0049\u006e\u0066\u006f");if _abgb ,_gdceec :=_aff .GetStream (_acbgb .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_gdceec {_eaagga .ColorComponents ,_ =_aff .GetIntVal (_abgb .Get ("\u004e"));_gggbb ,_badab :=_aff .DecodeStream (_abgb );if _badab !=nil {return _badab ;};_eaagga .DestOutputProfile =_gggbb ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgg *PdfAnnotationSquiggly )ToPdfObject ()_aff .PdfObject {_cgg .PdfAnnotation .ToPdfObject ();_gad :=_cgg ._ccfb ;_bddc :=_gad .PdfObject .(*_aff .PdfObjectDictionary );_cgg .PdfAnnotationMarkup .appendToPdfDictionary (_bddc );_bddc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bddc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgg .QuadPoints );return _gad ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _aff .PdfObject )(_aff .PdfObjectName ,error ){var _geg *_aff .PdfObjectName ;var _fggc *_aff .PdfObjectArray ;if _fbfbe ,_bbdee :=obj .(*_aff .PdfIndirectObject );_bbdee {if _adde ,_gebb :=_fbfbe .PdfObject .(*_aff .PdfObjectArray );
_gebb {_fggc =_adde ;}else if _cefg ,_fbeee :=_fbfbe .PdfObject .(*_aff .PdfObjectName );_fbeee {_geg =_cefg ;};}else if _bbda ,_dfgda :=obj .(*_aff .PdfObjectArray );_dfgda {_fggc =_bbda ;}else if _fdae ,_bcfc :=obj .(*_aff .PdfObjectName );_bcfc {_geg =_fdae ;
};if _geg !=nil {switch *_geg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_geg ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_geg ,nil ;
};};if _fggc !=nil &&_fggc .Len ()> 0{if _gada ,_fbgfb :=_fggc .Get (0).(*_aff .PdfObjectName );_fbgfb {switch *_gada {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fggc .Len ()==1{return *_gada ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gada ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gada ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gada ,nil ;};};};return "",nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_aff .PdfObjectString ;Q *_aff .PdfObjectInteger ;DS *_aff .PdfObjectString ;RV _aff .PdfObject ;MaxLen *_aff .PdfObjectInteger ;};func (_dfgba *pdfCIDFontType2 )baseFields ()*fontCommon {return &_dfgba .fontCommon };


// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_cbdgg *_aff .PdfObjectDictionary ;};func _ccfa (_afbfd *_aff .PdfObjectDictionary )(*PdfShadingType5 ,error ){_addf :=PdfShadingType5 {};_egegc :=_afbfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _egegc ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcdgd ,_bcef :=_egegc .(*_aff .PdfObjectInteger );if !_bcef {_adg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egegc );
return nil ,_aff .ErrTypeError ;};_addf .BitsPerCoordinate =_dcdgd ;_egegc =_afbfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _egegc ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcdgd ,_bcef =_egegc .(*_aff .PdfObjectInteger );if !_bcef {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_egegc );
return nil ,_aff .ErrTypeError ;};_addf .BitsPerComponent =_dcdgd ;_egegc =_afbfd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _egegc ==nil {_adg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_dcdgd ,_bcef =_egegc .(*_aff .PdfObjectInteger );if !_bcef {_adg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_egegc );
return nil ,_aff .ErrTypeError ;};_addf .VerticesPerRow =_dcdgd ;_egegc =_afbfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _egegc ==nil {_adg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efbbe ,_bcef :=_egegc .(*_aff .PdfObjectArray );if !_bcef {_adg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egegc );
return nil ,_aff .ErrTypeError ;};_addf .Decode =_efbbe ;if _ebfcf :=_afbfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebfcf !=nil {_addf .Function =[]PdfFunction {};if _ecdgf ,_bfgcd :=_ebfcf .(*_aff .PdfObjectArray );_bfgcd {for _ ,_aagcg :=range _ecdgf .Elements (){_afbcd ,_eccgf :=_fdfeg (_aagcg );
if _eccgf !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eccgf );return nil ,_eccgf ;};_addf .Function =append (_addf .Function ,_afbcd );
};}else {_fffgc ,_ceda :=_fdfeg (_ebfcf );if _ceda !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ceda );return nil ,_ceda ;
};_addf .Function =append (_addf .Function ,_fffgc );};};return &_addf ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_bcd .StdFontName ;

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_aff .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _aff .PdfObject ;A _aff .PdfObject ;SE _aff .PdfObject ;C _aff .PdfObject ;F _aff .PdfObject ;
_dcee *_aff .PdfIndirectObject ;};func _agfed (_dgefd *_aff .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dafbf :=&PdfShadingPattern {};_fdgaca :=_dgefd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _fdgaca ==nil {_adg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_baab ,_adecf :=_dbdf (_fdgaca );if _adecf !=nil {_adg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_adecf );return nil ,_adecf ;
};_dafbf .Shading =_baab ;if _bfade :=_dgefd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bfade !=nil {_cggde ,_dcfee :=_bfade .(*_aff .PdfObjectArray );if !_dcfee {_adg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfade );
return nil ,_aff .ErrTypeError ;};_dafbf .Matrix =_cggde ;};if _bffag :=_dgefd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bffag !=nil {_dafbf .ExtGState =_bffag ;};return _dafbf ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_gedb *PdfTransformParamsDocMDP )WriteString ()string {return _gedb .ToPdfObject ().WriteString ()};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dbb _ega .ReadSeeker ;_dga *_aff .PdfParser ;_dafgd *PdfReader ;Reader *PdfReader ;_bbgg []*PdfPage ;_bgac *PdfAcroForm ;_fdbb *DSS ;_dgcg *Permissions ;_gaec _aff .XrefTable ;_cadg int64 ;_bfafd int ;_aggc []_aff .PdfObject ;_deeb map[_aff .PdfObject ]struct{};
_fffa map[_aff .PdfObject ]int64 ;_abcb map[_aff .PdfObject ]struct{};_fdab map[_aff .PdfObject ]struct{};_beec int64 ;_gdgbd bool ;_geff string ;_dcgbg *EncryptOptions ;_fabd *PdfInfo ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aebda .Lock ();defer _aebda .Unlock ();_cacc =subject };func _bbdgf (_dacc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cgbd ,_bdbd :=_aff .GetDict (_dacc .AP );if !_bdbd {return nil ,nil ,_g .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _cgbd ==nil {return nil ,nil ,nil ;};_dfggb ,_bdbd :=_aff .GetArray (_dacc .Rect );if !_bdbd ||_dfggb .Len ()!=4{return nil ,nil ,_g .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_edee ,_fffc :=NewPdfRectangle (*_dfggb );
if _fffc !=nil {return nil ,nil ,_fffc ;};_gdaa :=_aff .TraceToDirectObject (_cgbd .Get ("\u004e"));switch _gagg :=_gdaa .(type ){case *_aff .PdfObjectStream :_ffcc :=_gagg ;_feff ,_edcgg :=NewXObjectFormFromStream (_ffcc );return _feff ,_edee ,_edcgg ;
case *_aff .PdfObjectDictionary :_ddgaf :=_gagg ;_gdeff ,_bdacf :=_aff .GetName (_dacc .AS );if !_bdacf {return nil ,nil ,nil ;};if _ddgaf .Get (*_gdeff )==nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_eaagg ,_bdacf :=_aff .GetStream (_ddgaf .Get (*_gdeff ));if !_bdacf {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gdeff );
return nil ,nil ,_g .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_gfgbd ,_bgfe :=NewXObjectFormFromStream (_eaagg );return _gfgbd ,_edee ,_bgfe ;};_adg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_gdaa );
return nil ,nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aff .PdfObject ;};func (_gccbd *PdfWriter )seekByName (_faefff _aff .PdfObject ,_gceg []string ,_daggd string )([]_aff .PdfObject ,error ){_adg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_faefff );
var _cadec []_aff .PdfObject ;if _aggcf ,_gaffg :=_faefff .(*_aff .PdfIndirectObject );_gaffg {return _gccbd .seekByName (_aggcf .PdfObject ,_gceg ,_daggd );};if _cebgf ,_cgdcc :=_faefff .(*_aff .PdfObjectStream );_cgdcc {return _gccbd .seekByName (_cebgf .PdfObjectDictionary ,_gceg ,_daggd );
};if _fagba ,_aefee :=_faefff .(*_aff .PdfObjectDictionary );_aefee {_adg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bebaa :=range _fagba .Keys (){_gdagf :=_fagba .Get (_bebaa );if string (_bebaa )==_daggd {_cadec =append (_cadec ,_gdagf );};for _ ,_fefgd :=range _gceg {if string (_bebaa )==_fefgd {_adg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_fefgd );
_abged ,_cdcff :=_gccbd .seekByName (_gdagf ,_gceg ,_daggd );if _cdcff !=nil {return _cadec ,_cdcff ;};_cadec =append (_cadec ,_abged ...);break ;};};};return _cadec ,nil ;};return _cadec ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_cfg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_beaa :=range pages {_beaa =_beaa .Duplicate ();_aefbgd (_beaa );_cfg ._bbgg =append (_cfg ._bbgg ,_beaa );};};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_gffdc *PdfReader )newPdfFieldFromIndirectObject (_fcbba *_aff .PdfIndirectObject ,_fgfb *PdfField )(*PdfField ,error ){if _gbeb ,_aaggb :=_gffdc ._cfadc .GetModelFromPrimitive (_fcbba ).(*PdfField );_aaggb {return _gbeb ,nil ;
};_bdgeb ,_edae :=_aff .GetDict (_fcbba );if !_edae {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgffe :=NewPdfField ();_bgffe ._dfbfd =_fcbba ;_bgffe ._dfbfd .PdfObject =_bdgeb ;if _bbfb ,_fced :=_aff .GetName (_bdgeb .Get ("\u0046\u0054"));_fced {_bgffe .FT =_bbfb ;};if _fgfb !=nil {_bgffe .Parent =_fgfb ;};_bgffe .T ,_ =_bdgeb .Get ("\u0054").(*_aff .PdfObjectString );
_bgffe .TU ,_ =_bdgeb .Get ("\u0054\u0055").(*_aff .PdfObjectString );_bgffe .TM ,_ =_bdgeb .Get ("\u0054\u004d").(*_aff .PdfObjectString );_bgffe .Ff ,_ =_bdgeb .Get ("\u0046\u0066").(*_aff .PdfObjectInteger );_bgffe .V =_bdgeb .Get ("\u0056");_bgffe .DV =_bdgeb .Get ("\u0044\u0056");
_bgffe .AA =_bdgeb .Get ("\u0041\u0041");if DA :=_bdgeb .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_aff .GetString (DA );_bgffe .VariableText =&VariableText {DA :DA };Q ,_ :=_bdgeb .Get ("\u0051").(*_aff .PdfObjectInteger );DS ,_ :=_bdgeb .Get ("\u0044\u0053").(*_aff .PdfObjectString );
RV :=_bdgeb .Get ("\u0052\u0056");_bgffe .VariableText .Q =Q ;_bgffe .VariableText .DS =DS ;_bgffe .VariableText .RV =RV ;};_fgade :=_bgffe .FT ;if _fgade ==nil &&_fgfb !=nil {_fgade =_fgfb .FT ;};if _fgade !=nil {switch *_fgade {case "\u0054\u0078":_dfbdg ,_adbbd :=_fefef (_bdgeb );
if _adbbd !=nil {return nil ,_adbbd ;};_dfbdg .PdfField =_bgffe ;_bgffe ._gaecf =_dfbdg ;case "\u0043\u0068":_ecefc ,_decf :=_eceg (_bdgeb );if _decf !=nil {return nil ,_decf ;};_ecefc .PdfField =_bgffe ;_bgffe ._gaecf =_ecefc ;case "\u0042\u0074\u006e":_fdad ,_degc :=_cfafa (_bdgeb );
if _degc !=nil {return nil ,_degc ;};_fdad .PdfField =_bgffe ;_bgffe ._gaecf =_fdad ;case "\u0053\u0069\u0067":_adee ,_agagf :=_gffdc .newPdfFieldSignatureFromDict (_bdgeb );if _agagf !=nil {return nil ,_agagf ;};_adee .PdfField =_bgffe ;_bgffe ._gaecf =_adee ;
default:_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_bgffe .FT );return nil ,_g .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bgga ,_bcff :=_aff .GetName (_bdgeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bcff {if *_bgga =="\u0057\u0069\u0064\u0067\u0065\u0074"{_eeecf ,_fgcaf :=_gffdc .newPdfAnnotationFromIndirectObject (_fcbba );if _fgcaf !=nil {return nil ,_fgcaf ;
};_ddca ,_eegg :=_eeecf .GetContext ().(*PdfAnnotationWidget );if !_eegg {return nil ,_g .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_ddca ._afae =_bgffe ;_ddca .Parent =_bgffe ._dfbfd ;
_bgffe .Annotations =append (_bgffe .Annotations ,_ddca );return _bgffe ,nil ;};};_ccdf :=true ;if _dffa ,_cedf :=_aff .GetArray (_bdgeb .Get ("\u004b\u0069\u0064\u0073"));_cedf {_cbcdd :=make ([]*_aff .PdfIndirectObject ,0,_dffa .Len ());for _ ,_dbbe :=range _dffa .Elements (){_cbaf ,_dgffc :=_aff .GetIndirect (_dbbe );
if !_dgffc {_fdfg ,_cded :=_aff .GetStream (_dbbe );if _cded &&_fdfg .PdfObjectDictionary !=nil {_bfcb ,_bdbc :=_aff .GetNameVal (_fdfg .Get ("\u0054\u0079\u0070\u0065"));if _bdbc &&_bfcb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_adg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_g .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_ggeag ,_dafde :=_aff .GetDict (_cbaf );
if !_dafde {return nil ,ErrTypeCheck ;};if _ccdf {_ccdf =!_dadc (_ggeag );};_cbcdd =append (_cbcdd ,_cbaf );};for _ ,_ccaf :=range _cbcdd {if _ccdf {_cgeg ,_fbcg :=_gffdc .newPdfAnnotationFromIndirectObject (_ccaf );if _fbcg !=nil {_adg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fbcg );
return nil ,_fbcg ;};_bdde ,_aaccb :=_cgeg ._eefa .(*PdfAnnotationWidget );if !_aaccb {return nil ,ErrTypeCheck ;};_bdde ._afae =_bgffe ;_bgffe .Annotations =append (_bgffe .Annotations ,_bdde );}else {_ddbae ,_bcdg :=_gffdc .newPdfFieldFromIndirectObject (_ccaf ,_bgffe );
if _bcdg !=nil {_adg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_bcdg );return nil ,_bcdg ;};_bgffe .Kids =append (_bgffe .Kids ,_ddbae );
};};};return _bgffe ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_aaba *PdfColorspaceLab )DecodeArray ()[]float64 {_aadfb :=[]float64 {0,100};if _aaba .Range !=nil &&len (_aaba .Range )==4{_aadfb =append (_aadfb ,_aaba .Range ...);}else {_aadfb =append (_aadfb ,-100,100,-100,100);};return _aadfb ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_feadb :=&PdfPageResources {};_feadb ._bdegd =_aff .MakeDict ();return _feadb ;};func (_dfbb *PdfReader )newPdfAnnotationFreeTextFromDict (_fbebg *_aff .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_efaf :=PdfAnnotationFreeText {};
_gef ,_cbe :=_dfbb .newPdfAnnotationMarkupFromDict (_fbebg );if _cbe !=nil {return nil ,_cbe ;};_efaf .PdfAnnotationMarkup =_gef ;_efaf .DA =_fbebg .Get ("\u0044\u0041");_efaf .Q =_fbebg .Get ("\u0051");_efaf .RC =_fbebg .Get ("\u0052\u0043");_efaf .DS =_fbebg .Get ("\u0044\u0053");
_efaf .CL =_fbebg .Get ("\u0043\u004c");_efaf .IT =_fbebg .Get ("\u0049\u0054");_efaf .BE =_fbebg .Get ("\u0042\u0045");_efaf .RD =_fbebg .Get ("\u0052\u0044");_efaf .BS =_fbebg .Get ("\u0042\u0053");_efaf .LE =_fbebg .Get ("\u004c\u0045");return &_efaf ,nil ;
};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ddcba :map[_aff .PdfObject ]struct{}{},_cfadc :_cgdee (),_gaece :_aff .NewParserFromString (txt )};};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ede :=NewPdfAction ();_ca :=&PdfActionGoToR {};_ca .PdfAction =_ede ;_ede .SetContext (_ca );return _ca ;};func (_cebg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cebg ._ggca };

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_feggf *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _edeca []*PdfField ;_bbdca :=map[*_aff .PdfIndirectObject ]struct{}{};for _ ,_gaeeb :=range _feggf .PageList {_fcagg ,_fedce :=_gaeeb .GetAnnotations ();if _fedce !=nil {return _fedce ;
};for _ ,_dcdea :=range _fcagg {var _abcbg *PdfField ;switch _aagae :=_dcdea .GetContext ().(type ){case *PdfAnnotationWidget :if _aagae ._afae !=nil {_abcbg =_aagae ._afae ;break ;};if _fegbe ,_baebfg :=_aff .GetIndirect (_aagae .Parent );_baebfg {_abcbg ,_fedce =_feggf .newPdfFieldFromIndirectObject (_fegbe ,nil );
if _fedce ==nil {break ;};_adg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fegbe ,_fedce );
};if _aagae ._ccfb !=nil {_abcbg ,_fedce =_feggf .newPdfFieldFromIndirectObject (_aagae ._ccfb ,nil );if _fedce ==nil {break ;};_adg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aagae ._ccfb ,_fedce );
};};if _abcbg ==nil {continue ;};if _ ,_feffa :=_bbdca [_abcbg ._dfbfd ];_feffa {continue ;};_bbdca [_abcbg ._dfbfd ]=struct{}{};_edeca =append (_edeca ,_abcbg );};};if len (_edeca )==0{return nil ;};if _feggf .AcroForm ==nil {_feggf .AcroForm =NewPdfAcroForm ();
};_feggf .AcroForm .Fields =&_edeca ;return nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_gga :=NewPdfAnnotation ();_gba :=&PdfAnnotationUnderline {};_gba .PdfAnnotation =_gga ;_gba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gga .SetContext (_gba );return _gba ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_fgbe :=NewPdfAnnotation ();_gcdg :=&PdfAnnotationSquiggly {};_gcdg .PdfAnnotation =_fgbe ;_gcdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgbe .SetContext (_gcdg );return _gcdg ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ccd *_aff .PdfIndirectObject ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gbfg :=&PdfColorspaceLab {};_gbfg .BlackPoint =[]float64 {0.0,0.0,0.0};_gbfg .Range =[]float64 {-100,100,-100,100};return _gbfg ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _aff .PdfObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_bfdacc *OutlineItem )Insert (index uint ,item *OutlineItem ){_fggffc :=uint (len (_bfdacc .Entries ));if index > _fggffc {index =_fggffc ;};_bfdacc .Entries =append (_bfdacc .Entries [:index ],append ([]*OutlineItem {item },_bfdacc .Entries [index :]...)...);
};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _aff .PdfObjectArray )(*PdfRectangle ,error ){_eeadfg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _abfdd error ;_eeadfg .Llx ,_abfdd =_aff .GetNumberAsFloat (arr .Get (0));if _abfdd !=nil {return nil ,_abfdd ;};_eeadfg .Lly ,_abfdd =_aff .GetNumberAsFloat (arr .Get (1));if _abfdd !=nil {return nil ,_abfdd ;};_eeadfg .Urx ,_abfdd =_aff .GetNumberAsFloat (arr .Get (2));
if _abfdd !=nil {return nil ,_abfdd ;};_eeadfg .Ury ,_abfdd =_aff .GetNumberAsFloat (arr .Get (3));if _abfdd !=nil {return nil ,_abfdd ;};return &_eeadfg ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_aff .PdfObjectArray ;Domain *_aff .PdfObjectArray ;Function []PdfFunction ;Extend *_aff .PdfObjectArray ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_ccge *_aff .PdfObjectDictionary ;_caef *_aff .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fdbc *PdfSignature )ToPdfObject ()_aff .PdfObject {_agabd :=_fdbc ._gagbc ;var _ceef *_aff .PdfObjectDictionary ;if _dccdeb ,_abdcf :=_agabd .PdfObject .(*pdfSignDictionary );_abdcf {_ceef =_dccdeb .PdfObjectDictionary ;}else {_ceef =_agabd .PdfObject .(*_aff .PdfObjectDictionary );
};_ceef .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fdbc .Type );_ceef .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fdbc .Filter );_ceef .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fdbc .SubFilter );_ceef .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fdbc .ByteRange );
_ceef .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fdbc .Contents );_ceef .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fdbc .Cert );_ceef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdbc .Name );_ceef .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fdbc .Reason );
_ceef .SetIfNotNil ("\u004d",_fdbc .M );_ceef .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fdbc .Reference );_ceef .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fdbc .Changes );_ceef .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fdbc .ContactInfo );
return _agabd ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _aff .PdfObject ;};func (_aefc *PdfWriter )writeString (_cdffc string ){if _aefc ._acag !=nil {return ;};_fffaf ,_fecc :=_aefc ._ggee .WriteString (_cdffc );_aefc ._cagac +=int64 (_fffaf );_aefc ._acag =_fecc ;};
func (_fagd *PdfPage )flattenFieldsWithOpts (_gcfe FieldAppearanceGenerator ,_bbbgeg *FieldFlattenOpts ,_aacd map[*PdfAnnotation ]bool )error {var _cebeb []*PdfAnnotation ;if _gcfe !=nil {if _ffgbg :=_gcfe .WrapContentStream (_fagd );_ffgbg !=nil {return _ffgbg ;
};};_dbaed ,_begbg :=_fagd .GetAnnotations ();if _begbg !=nil {return _begbg ;};for _ ,_fcdd :=range _dbaed {_gfcec ,_bgge :=_aacd [_fcdd ];if !_bgge &&_bbbgeg .AnnotFilterFunc !=nil {if _ ,_bfca :=_fcdd .GetContext ().(*PdfAnnotationWidget );!_bfca {_bgge =_bbbgeg .AnnotFilterFunc (_fcdd );
};};if !_bgge {_cebeb =append (_cebeb ,_fcdd );continue ;};switch _fcdd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_ffgea ,_gffbd ,_facfb :=_bbdgf (_fcdd );if _facfb !=nil {if !_gfcec {_adg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_facfb );
continue ;};if _ffgea ==nil {continue ;};_ecaa :=_fagd .Resources .GenerateXObjectName ();_fagd .Resources .SetXObjectFormByName (_ecaa ,_ffgea );_ggef ,_adbbdf ,_facfb :=_ccfeb (_ffgea );if _facfb !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_facfb );
}else {_ebeg :=_eb .IdentityMatrix ();_ebeg =_ebeg .Translate (-_ggef .Llx ,-_ggef .Lly );if _adbbdf {_gcgb :=0.0;if _ggef .Width ()> 0{_gcgb =_gffbd .Width ()/_ggef .Width ();};_cegf :=0.0;if _ggef .Height ()> 0{_cegf =_gffbd .Height ()/_ggef .Height ();
};_ebeg =_ebeg .Scale (_gcgb ,_cegf );};_gffbd .Transform (_ebeg );};_fcaa :=_cf .Min (_gffbd .Llx ,_gffbd .Urx );_efcd :=_cf .Min (_gffbd .Lly ,_gffbd .Ury );var _edbc []string ;_edbc =append (_edbc ,"\u0071");_edbc =append (_edbc ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_fcaa ,_efcd ));
_edbc =append (_edbc ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ecaa .String ()));_edbc =append (_edbc ,"\u0051");_caba :=_ba .Join (_edbc ,"\u000a");_facfb =_fagd .AppendContentStream (_caba );if _facfb !=nil {return _facfb ;};if _ffgea .Resources !=nil {_fcdf ,_eeffb :=_aff .GetDict (_ffgea .Resources .Font );
if _eeffb {for _ ,_ecgg :=range _fcdf .Keys (){if !_fagd .Resources .HasFontByName (_ecgg ){_fagd .Resources .SetFontByName (_ecgg ,_fcdf .Get (_ecgg ));};};};};};if len (_cebeb )> 0{_fagd ._bbgb =_cebeb ;}else {_fagd ._bbgb =[]*PdfAnnotation {};};return nil ;
};func (_bgbcb *PdfWriter )mapObjectStreams (_cefgg bool )(map[_aff .PdfObject ]bool ,bool ){_fdaaa :=make (map[_aff .PdfObject ]bool );for _ ,_ccda :=range _bgbcb ._babcd {if _cageb ,_deebe :=_ccda .(*_aff .PdfObjectStreams );_deebe {_cefgg =true ;for _ ,_bbddf :=range _cageb .Elements (){_fdaaa [_bbddf ]=true ;
if _bbdff ,_dabed :=_bbddf .(*_aff .PdfIndirectObject );_dabed {_fdaaa [_bbdff .PdfObject ]=true ;};};};};return _fdaaa ,_cefgg ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bfef :=NewPdfAction ();_cdb :=&PdfActionNamed {};_cdb .PdfAction =_bfef ;_bfef .SetContext (_cdb );return _cdb ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ecfbg *PdfFont )GetCharMetrics (code _eee .CharCode )(CharMetrics ,bool ){var _ddgaa _bcd .CharMetrics ;switch _fdfbf :=_ecfbg ._gebd .(type ){case *pdfFontSimple :if _eedd ,_efca :=_fdfbf .GetCharMetrics (code );_efca {return _eedd ,_efca ;};case *pdfFontType0 :if _dbbbc ,_cgde :=_fdfbf .GetCharMetrics (code );
_cgde {return _dbbbc ,_cgde ;};case *pdfCIDFontType0 :if _abbgb ,_ffbc :=_fdfbf .GetCharMetrics (code );_ffbc {return _abbgb ,_ffbc ;};case *pdfCIDFontType2 :if _dccb ,_ccbff :=_fdfbf .GetCharMetrics (code );_ccbff {return _dccb ,_ccbff ;};case *pdfFontType3 :if _debf ,_gbga :=_fdfbf .GetCharMetrics (code );
_gbga {return _debf ,_gbga ;};default:_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ecfbg ._gebd );
return _ddgaa ,false ;};if _effg ,_cbcea :=_ecfbg .GetFontDescriptor ();_cbcea ==nil &&_effg !=nil {return _bcd .CharMetrics {Wx :_effg ._eace },true ;};_adg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ecfbg );
return _ddgaa ,false ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _aff .StreamEncoder ;FormType _aff .PdfObject ;BBox _aff .PdfObject ;Matrix _aff .PdfObject ;Resources *PdfPageResources ;Group _aff .PdfObject ;Ref _aff .PdfObject ;MetaData _aff .PdfObject ;PieceInfo _aff .PdfObject ;LastModified _aff .PdfObject ;
StructParent _aff .PdfObject ;StructParents _aff .PdfObject ;OPI _aff .PdfObject ;OC _aff .PdfObject ;Name _aff .PdfObject ;

// Stream data.
Stream []byte ;_fddef *_aff .PdfObjectStream ;};func _bfdfd ()string {_aebda .Lock ();defer _aebda .Unlock ();if len (_gddfe )> 0{return _gddfe ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_egdce *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cfeb ,_ebfd :=color .(*PdfColorDeviceRGB );if !_ebfd {_adg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cfeb ,nil ;};func (_eeg *PdfReader )newPdfActionThreadFromDict (_gcfd *_aff .PdfObjectDictionary )(*PdfActionThread ,error ){_gac ,_ecd :=_dfc (_gcfd .Get ("\u0046"));
if _ecd !=nil {return nil ,_ecd ;};return &PdfActionThread {D :_gcfd .Get ("\u0044"),B :_gcfd .Get ("\u0042"),F :_gac },nil ;};func (_bbfedb *PdfWriter )writeXRefStreams (_efda int ,_aaedf int64 )error {_aeffa :=_efda +1;_bbfedb ._abebd [_aeffa ]=crossReference {Type :1,ObjectNumber :_aeffa ,Offset :_aaedf };
_beef :=_af .NewBuffer (nil );_fgbeed :=_aff .MakeArray ();for _accb :=0;_accb <=_efda ;{for ;_accb <=_efda ;_accb ++{_dgbdd ,_dbgadc :=_bbfedb ._abebd [_accb ];if _dbgadc &&(!_bbfedb ._ccbe ||_bbfedb ._ccbe &&(_dgbdd .Type ==1&&_dgbdd .Offset >=_bbfedb ._abced ||_dgbdd .Type ==0)){break ;
};};var _dbabg int ;for _dbabg =_accb +1;_dbabg <=_efda ;_dbabg ++{_fedfba ,_ebefd :=_bbfedb ._abebd [_dbabg ];if _ebefd &&(!_bbfedb ._ccbe ||_bbfedb ._ccbe &&(_fedfba .Type ==1&&_fedfba .Offset > _bbfedb ._abced )){continue ;};break ;};_fgbeed .Append (_aff .MakeInteger (int64 (_accb )),_aff .MakeInteger (int64 (_dbabg -_accb )));
for _efggc :=_accb ;_efggc < _dbabg ;_efggc ++{_bfgdg :=_bbfedb ._abebd [_efggc ];switch _bfgdg .Type {case 0:_d .Write (_beef ,_d .BigEndian ,byte (0));_d .Write (_beef ,_d .BigEndian ,uint32 (0));_d .Write (_beef ,_d .BigEndian ,uint16 (0xFFFF));case 1:_d .Write (_beef ,_d .BigEndian ,byte (1));
_d .Write (_beef ,_d .BigEndian ,uint32 (_bfgdg .Offset ));_d .Write (_beef ,_d .BigEndian ,uint16 (_bfgdg .Generation ));case 2:_d .Write (_beef ,_d .BigEndian ,byte (2));_d .Write (_beef ,_d .BigEndian ,uint32 (_bfgdg .ObjectNumber ));_d .Write (_beef ,_d .BigEndian ,uint16 (_bfgdg .Index ));
};};_accb =_dbabg +1;};_dfbef ,_edgdda :=_aff .MakeStream (_beef .Bytes (),_aff .NewFlateEncoder ());if _edgdda !=nil {return _edgdda ;};_dfbef .ObjectNumber =int64 (_aeffa );_dfbef .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0058\u0052\u0065\u0066"));
_dfbef .PdfObjectDictionary .Set ("\u0057",_aff .MakeArray (_aff .MakeInteger (1),_aff .MakeInteger (4),_aff .MakeInteger (2)));_dfbef .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fgbeed );_dfbef .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_aff .MakeInteger (int64 (_aeffa )));
_dfbef .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_bbfedb ._bacec );_dfbef .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_bbfedb ._adefd );if _bbfedb ._ccbe &&_bbfedb ._gecec > 0{_dfbef .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_aff .MakeInteger (_bbfedb ._gecec ));
};if _bbfedb ._fcgf !=nil {_dfbef .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bbfedb ._fdedd );};if _bbfedb ._dfdcg ==nil &&_bbfedb ._bacb !=""&&_bbfedb ._aceag !=""{_bbfedb ._dfdcg =_aff .MakeArray (_aff .MakeHexString (_bbfedb ._bacb ),_aff .MakeHexString (_bbfedb ._aceag ));
};if _bbfedb ._dfdcg !=nil {_adg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bbfedb ._dfdcg );_dfbef .Set ("\u0049\u0044",_bbfedb ._dfdcg );};_bbfedb .writeObject (int (_dfbef .ObjectNumber ),_dfbef );return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_acgg *PdfShadingPatternType3 )ToPdfObject ()_aff .PdfObject {_acgg .PdfPattern .ToPdfObject ();_ebgca :=_acgg .getDict ();if _acgg .Shading !=nil {_ebgca .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_acgg .Shading .ToPdfObject ());};if _acgg .Matrix !=nil {_ebgca .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_acgg .Matrix );
};if _acgg .ExtGState !=nil {_ebgca .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_acgg .ExtGState );};return _acgg ._cfegc ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gcacb *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_adg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fcfba :=[]float64 {0.0};if _gcacb .C0 !=nil {_fcfba =_gcacb .C0 ;};_cabc :=[]float64 {1.0};if _gcacb .C1 !=nil {_cabc =_gcacb .C1 ;};var _fcad []float64 ;for _dgaf :=0;_dgaf < len (_fcfba );_dgaf ++{_gabgb :=_fcfba [_dgaf ]+_cf .Pow (x [0],_gcacb .N )*(_cabc [_dgaf ]-_fcfba [_dgaf ]);
_fcad =append (_fcad ,_gabgb );};return _fcad ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bgcf _aff .PdfObject ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cccc :=NewPdfAnnotation ();_gfge :=&PdfAnnotationRedact {};_gfge .PdfAnnotation =_cccc ;_gfge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cccc .SetContext (_gfge );return _gfge ;};func _dfc (_fbc _aff .PdfObject )(*PdfFilespec ,error ){if _fbc ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_fbc );};

// ToPdfObject implements interface PdfModel.
func (_bda *PdfActionRendition )ToPdfObject ()_aff .PdfObject {_bda .PdfAction .ToPdfObject ();_bceb :=_bda ._df ;_fcb :=_bceb .PdfObject .(*_aff .PdfObjectDictionary );_fcb .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeRendition )));_fcb .SetIfNotNil ("\u0052",_bda .R );
_fcb .SetIfNotNil ("\u0041\u004e",_bda .AN );_fcb .SetIfNotNil ("\u004f\u0050",_bda .OP );_fcb .SetIfNotNil ("\u004a\u0053",_bda .JS );return _bceb ;};

// ToPdfObject converts rectangle to a PDF object.
func (_bbcgeb *PdfRectangle )ToPdfObject ()_aff .PdfObject {return _aff .MakeArray (_aff .MakeFloat (_bbcgeb .Llx ),_aff .MakeFloat (_bbcgeb .Lly ),_aff .MakeFloat (_bbcgeb .Urx ),_aff .MakeFloat (_bbcgeb .Ury ));};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bdaeg *LTV )EnableByName (name string ,extraCerts []*_fb .Certificate )error {_edegc :=_bdaeg ._bbbab ._dafgd .AcroForm ;for _ ,_adbgc :=range _edegc .AllFields (){_cbacd ,_ :=_adbgc .GetContext ().(*PdfFieldSignature );if _cbacd ==nil {continue ;
};if _bbag :=_cbacd .PartialName ();_bbag !=name {continue ;};return _bdaeg .Enable (_cbacd .V ,extraCerts );};return nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_ddcdg *XObjectImage )GetContainingPdfObject ()_aff .PdfObject {return _ddcdg ._fccgd };

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cbfae *PdfFont )ToPdfObject ()_aff .PdfObject {if _cbfae ._gebd ==nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _aff .MakeNull ();
};return _cbfae ._gebd .ToPdfObject ();};func _acgfb (_aafd *PdfField ,_fgfcf _aff .PdfObject )error {switch _aafd .GetContext ().(type ){case *PdfFieldText :switch _gddc :=_fgfcf .(type ){case *_aff .PdfObjectName :_daba :=_gddc ;_adg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_daba .String ());
_aafd .V =_aff .MakeEncodedString (_gddc .String (),true );case *_aff .PdfObjectString :_aafd .V =_aff .MakeEncodedString (_gddc .String (),true );default:_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gddc ,_gddc );
};case *PdfFieldButton :switch _fgfcf .(type ){case *_aff .PdfObjectName :if len (_fgfcf .String ())> 0{_aafd .V =_fgfcf ;_dcaee (_aafd ,_fgfcf );};case *_aff .PdfObjectString :if len (_fgfcf .String ())> 0{_aafd .V =_aff .MakeName (_fgfcf .String ());
_dcaee (_aafd ,_aafd .V );};default:_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aafd .PartialName (),_fgfcf );_aafd .V =_fgfcf ;
};case *PdfFieldChoice :switch _fgfcf .(type ){case *_aff .PdfObjectName :if len (_fgfcf .String ())> 0{_aafd .V =_aff .MakeString (_fgfcf .String ());_dcaee (_aafd ,_fgfcf );};case *_aff .PdfObjectString :if len (_fgfcf .String ())> 0{_aafd .V =_fgfcf ;
_dcaee (_aafd ,_aff .MakeName (_fgfcf .String ()));};default:_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aafd .PartialName (),_fgfcf );
_aafd .V =_fgfcf ;};case *PdfFieldSignature :_adg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_aafd .PartialName (),_fgfcf );
};return nil ;};func (_ddecb *PdfReader )loadStructure ()error {if _ddecb ._gaece .GetCrypter ()!=nil &&!_ddecb ._gaece .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ggbbce :=_ddecb ._gaece .GetTrailer ();if _ggbbce ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ebfcc ,_aaad :=_ggbbce .Get ("\u0052\u006f\u006f\u0074").(*_aff .PdfObjectReference );
if !_aaad {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ggbbce );};_ggcae ,_dcaed :=_ddecb ._gaece .LookupByReference (*_ebfcc );
if _dcaed !=nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dcaed );
return _dcaed ;};_cbafg ,_aaad :=_ggcae .(*_aff .PdfIndirectObject );if !_aaad {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ggcae ,*_ggbbce );
return _g .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fbcfd ,_aaad :=(*_cbafg ).PdfObject .(*_aff .PdfObjectDictionary );if !_aaad {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cbafg .PdfObject );
return _g .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_adg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fbcfd );_faedf ,_aaad :=_fbcfd .Get ("\u0050\u0061\u0067e\u0073").(*_aff .PdfObjectReference );
if !_aaad {return _g .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fbgfg ,_dcaed :=_ddecb ._gaece .LookupByReference (*_faedf );
if _dcaed !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dcaed ;};_edbce ,_aaad :=_fbgfg .(*_aff .PdfIndirectObject );if !_aaad {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_adg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_edbce );return _g .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_babac ,_aaad :=_edbce .PdfObject .(*_aff .PdfObjectDictionary );if !_aaad {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_edbce );
return _g .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dbag ,_aaad :=_aff .GetInt (_babac .Get ("\u0043\u006f\u0075n\u0074"));if !_aaad {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _g .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_aaad =_aff .GetName (_babac .Get ("\u0054\u0079\u0070\u0065"));!_aaad {_adg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_babac .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0050\u0061\u0067e\u0073"));};if _beaba ,_caae :=_aff .GetInt (_babac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_caae {_gfaag :=int64 (*_beaba );_ddecb .Rotate =&_gfaag ;};_ddecb ._geae =_ebfcc ;
_ddecb ._dcadd =_fbcfd ;_ddecb ._gacfc =_babac ;_ddecb ._efcfb =_edbce ;_ddecb ._fddff =int (*_dbag );_ddecb ._bfgfec =[]*_aff .PdfIndirectObject {};_cegbd :=map[_aff .PdfObject ]struct{}{};_dcaed =_ddecb .buildPageList (_edbce ,nil ,_cegbd );if _dcaed !=nil {return _dcaed ;
};_adg .Log .Trace ("\u002d\u002d\u002d");_adg .Log .Trace ("\u0054\u004f\u0043");_adg .Log .Trace ("\u0050\u0061\u0067e\u0073");_adg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ddecb ._bfgfec ),_ddecb ._bfgfec );_ddecb ._ecbcb ,_dcaed =_ddecb .loadOutlines ();
if _dcaed !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dcaed );
return _dcaed ;};_ddecb .AcroForm ,_dcaed =_ddecb .loadForms ();if _dcaed !=nil {return _dcaed ;};_ddecb .DSS ,_dcaed =_ddecb .loadDSS ();if _dcaed !=nil {return _dcaed ;};_ddecb ._cdea ,_dcaed =_ddecb .loadPerms ();if _dcaed !=nil {return _dcaed ;};return nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_edca *PdfSignature )GetContainingPdfObject ()_aff .PdfObject {return _edca ._gagbc };

// ToPdfObject implements interface PdfModel.
func (_ebab *PdfAnnotationScreen )ToPdfObject ()_aff .PdfObject {_ebab .PdfAnnotation .ToPdfObject ();_eded :=_ebab ._ccfb ;_cbgd :=_eded .PdfObject .(*_aff .PdfObjectDictionary );_cbgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_cbgd .SetIfNotNil ("\u0054",_ebab .T );_cbgd .SetIfNotNil ("\u004d\u004b",_ebab .MK );_cbgd .SetIfNotNil ("\u0041",_ebab .A );_cbgd .SetIfNotNil ("\u0041\u0041",_ebab .AA );return _eded ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aebda .Lock ();defer _aebda .Unlock ();_gabfb =author };

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_bfgee *PdfFieldButton )IsCheckbox ()bool {return _bfgee .GetType ()==ButtonTypeCheckbox };const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ecg :=NewPdfAnnotation ();_ggfe :=&PdfAnnotationScreen {};_ggfe .PdfAnnotation =_ecg ;_ecg .SetContext (_ggfe );return _ggfe ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _aff .StreamEncoder ;Intent _aff .PdfObject ;ImageMask _aff .PdfObject ;Mask _aff .PdfObject ;Matte _aff .PdfObject ;Decode _aff .PdfObject ;Interpolate _aff .PdfObject ;
Alternatives _aff .PdfObject ;SMask _aff .PdfObject ;SMaskInData _aff .PdfObject ;Name _aff .PdfObject ;StructParent _aff .PdfObject ;ID _aff .PdfObject ;OPI _aff .PdfObject ;Metadata _aff .PdfObject ;OC _aff .PdfObject ;Stream []byte ;_fccgd *_aff .PdfObjectStream ;
};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_acada *PdfWriter )SetRotation (rotate int64 )error {_efade ,_ggbf :=_aff .GetDict (_acada ._edgeg );if !_ggbf {return ErrTypeCheck ;};_efade .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_aff .MakeInteger (rotate ));return nil ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_beaec :=Permissions {};_beaec .DocMDP =docMdp ;_afeb :=_aff .MakeDict ();_afeb .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_beaec ._cbdgg =_afeb ;return &_beaec ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_dgag *pdfFontSimple )ToPdfObject ()_aff .PdfObject {if _dgag ._effd ==nil {_dgag ._effd =&_aff .PdfIndirectObject {};};_gfef :=_dgag .baseFields ().asPdfObjectDictionary ("");_dgag ._effd .PdfObject =_gfef ;if _dgag .FirstChar !=nil {_gfef .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_dgag .FirstChar );
};if _dgag .LastChar !=nil {_gfef .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_dgag .LastChar );};if _dgag .Widths !=nil {_gfef .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_dgag .Widths );};if _dgag .Encoding !=nil {_gfef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dgag .Encoding );
}else if _dgag ._fdgc !=nil {_cfff :=_dgag ._fdgc .ToPdfObject ();if _cfff !=nil {_gfef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cfff );};};return _dgag ._effd ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_ggab *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _ggab .flattenFieldsWithOpts (false ,appgen ,opts );};

// RemovePage removes a page by number.
func (_adaf *PdfAppender )RemovePage (pageNum int ){_cca :=pageNum -1;_adaf ._bbgg =append (_adaf ._bbgg [0:_cca ],_adaf ._bbgg [pageNum :]...);};func (_aadf *PdfReader )newPdfAnnotationRichMediaFromDict (_fdag *_aff .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_adag :=&PdfAnnotationRichMedia {};
_adag .RichMediaSettings =_fdag .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_adag .RichMediaContent =_fdag .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _adag ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_fdda *PdfColorspaceDeviceN )GetNumComponents ()int {return _fdda .ColorantNames .Len ()};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cgbe *PdfReader )GetIndirectObjectByNumber (number int )(_aff .PdfObject ,error ){_fdec ,_ffdgg :=_cgbe ._gaece .LookupByNumber (number );return _fdec ,_ffdgg ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_feed *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_adg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_adg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_adg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_adg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_acaf ,_bgcc :=_gd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._becb ,img ._edgef );if _bgcc !=nil {return Image {},_bgcc ;};_afec ,_bgcc :=_gd .NRGBAConverter .Convert (_acaf );if _bgcc !=nil {return Image {},_bgcc ;
};return _efecb (_afec .Base ()),nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_bgcb *PdfPageResources )HasXObjectByName (keyName _aff .PdfObjectName )bool {_gacea ,_ :=_bgcb .GetXObjectByName (keyName );return _gacea !=nil ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_befgeg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_befgeg .Type ,_befgeg .P ,_befgeg .V );};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ccgfe *PdfPage )GetAllContentStreams ()(string ,error ){_dedee ,_dgdbc :=_ccgfe .GetContentStreams ();if _dgdbc !=nil {return "",_dgdbc ;};return _ba .Join (_dedee ,"\u0020"),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_badd *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if _badd .Alternate ==nil {if _badd .N ==1{_cfgg :=NewPdfColorspaceDeviceGray ();return _cfgg .ColorFromPdfObjects (objects );}else if _badd .N ==3{_ccab :=NewPdfColorspaceDeviceRGB ();
return _ccab .ColorFromPdfObjects (objects );}else if _badd .N ==4{_adce :=NewPdfColorspaceDeviceCMYK ();return _adce .ColorFromPdfObjects (objects );}else {return nil ,_g .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _badd .Alternate .ColorFromPdfObjects (objects );};

// CustomKeys returns all custom info keys as list.
func (_fgae *PdfInfo )CustomKeys ()[]string {if _fgae ._cgbc ==nil {return nil ;};_dddd :=make ([]string ,len (_fgae ._cgbc .Keys ()));for _ ,_bgff :=range _fgae ._cgbc .Keys (){_dddd =append (_dddd ,_bgff .String ());};return _dddd ;};func _daeaac (_bfceae *_aff .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dfaadc :=PdfShadingType7 {};
_eeefa :=_bfceae .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eeefa ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgccf ,_beadg :=_eeefa .(*_aff .PdfObjectInteger );if !_beadg {_adg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eeefa );
return nil ,_aff .ErrTypeError ;};_dfaadc .BitsPerCoordinate =_cgccf ;_eeefa =_bfceae .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eeefa ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cgccf ,_beadg =_eeefa .(*_aff .PdfObjectInteger );if !_beadg {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eeefa );
return nil ,_aff .ErrTypeError ;};_dfaadc .BitsPerComponent =_cgccf ;_eeefa =_bfceae .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eeefa ==nil {_adg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cgccf ,_beadg =_eeefa .(*_aff .PdfObjectInteger );if !_beadg {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eeefa );
return nil ,_aff .ErrTypeError ;};_dfaadc .BitsPerComponent =_cgccf ;_eeefa =_bfceae .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eeefa ==nil {_adg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddbfae ,_beadg :=_eeefa .(*_aff .PdfObjectArray );if !_beadg {_adg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeefa );
return nil ,_aff .ErrTypeError ;};_dfaadc .Decode =_ddbfae ;if _ceeg :=_bfceae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ceeg !=nil {_dfaadc .Function =[]PdfFunction {};if _daaaa ,_cacgbf :=_ceeg .(*_aff .PdfObjectArray );_cacgbf {for _ ,_gdff :=range _daaaa .Elements (){_cfcagg ,_fgeg :=_fdfeg (_gdff );
if _fgeg !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgeg );return nil ,_fgeg ;};_dfaadc .Function =append (_dfaadc .Function ,_cfcagg );
};}else {_fbgef ,_gega :=_fdfeg (_ceeg );if _gega !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gega );return nil ,_gega ;};
_dfaadc .Function =append (_dfaadc .Function ,_fbgef );};};return &_dfaadc ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_eecg *PdfFont )ToUnicode ()string {if _eecg .baseFields ()._dcad ==nil {return "";};return _eecg .baseFields ()._dcad .Name ();};

// ToPdfObject implements interface PdfModel.
func (_fbcd *PdfAnnotationPopup )ToPdfObject ()_aff .PdfObject {_fbcd .PdfAnnotation .ToPdfObject ();_dec :=_fbcd ._ccfb ;_edga :=_dec .PdfObject .(*_aff .PdfObjectDictionary );_edga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0050\u006f\u0070u\u0070"));
_edga .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbcd .Parent );_edga .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fbcd .Open );return _dec ;};func _dccgd (_eaacg *_aff .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fbfcf :=PdfShadingType6 {};
_fdbfac :=_eaacg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fdbfac ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bbad ,_gfgde :=_fdbfac .(*_aff .PdfObjectInteger );if !_gfgde {_adg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdbfac );
return nil ,_aff .ErrTypeError ;};_fbfcf .BitsPerCoordinate =_bbad ;_fdbfac =_eaacg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fdbfac ==nil {_adg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bbad ,_gfgde =_fdbfac .(*_aff .PdfObjectInteger );if !_gfgde {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fdbfac );
return nil ,_aff .ErrTypeError ;};_fbfcf .BitsPerComponent =_bbad ;_fdbfac =_eaacg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fdbfac ==nil {_adg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbad ,_gfgde =_fdbfac .(*_aff .PdfObjectInteger );if !_gfgde {_adg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fdbfac );
return nil ,_aff .ErrTypeError ;};_fbfcf .BitsPerComponent =_bbad ;_fdbfac =_eaacg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fdbfac ==nil {_adg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gadbe ,_gfgde :=_fdbfac .(*_aff .PdfObjectArray );if !_gfgde {_adg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdbfac );
return nil ,_aff .ErrTypeError ;};_fbfcf .Decode =_gadbe ;if _gdbed :=_eaacg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gdbed !=nil {_fbfcf .Function =[]PdfFunction {};if _cebgea ,_dccca :=_gdbed .(*_aff .PdfObjectArray );_dccca {for _ ,_cfgge :=range _cebgea .Elements (){_abedf ,_degbd :=_fdfeg (_cfgge );
if _degbd !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_degbd );return nil ,_degbd ;};_fbfcf .Function =append (_fbfcf .Function ,_abedf );
};}else {_dgcgb ,_acab :=_fdfeg (_gdbed );if _acab !=nil {_adg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acab );return nil ,_acab ;
};_fbfcf .Function =append (_fbfcf .Function ,_dgcgb );};};return &_fbfcf ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_fdce *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fdce .fill (provider ,nil )};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fagcf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_egdf :=func (_bfbg float64 )float64 {if _bfbg >=6.0/29{return _bfbg *_bfbg *_bfbg ;};return 108.0/841*(_bfbg -4.0/29.0);};_bcgfe :=img ._edgef ;if len (_bcgfe )!=6{_adg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_bcgfe =_fagcf .DecodeArray ();};_eegb :=_aae .NewReader (img .getBase ());_cafc :=_gd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._becb ,img ._edgef );_geecg :=_aae .NewWriter (_cafc );_aaec :=_cf .Pow (2,float64 (img .BitsPerComponent ))-1;
_ddcf :=make ([]uint32 ,3);var (_acd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fdabf ,_fgeb ,_dbcbg float64 ;);for {_acd =_eegb .ReadSamples (_ddcf );if _acd ==_ega .EOF {break ;}else if _acd !=nil {return img ,_acd ;};Ls =float64 (_ddcf [0])/_aaec ;As =float64 (_ddcf [1])/_aaec ;
Bs =float64 (_ddcf [2])/_aaec ;Ls =_gd .LinearInterpolate (Ls ,0.0,1.0,_bcgfe [0],_bcgfe [1]);As =_gd .LinearInterpolate (As ,0.0,1.0,_bcgfe [2],_bcgfe [3]);Bs =_gd .LinearInterpolate (Bs ,0.0,1.0,_bcgfe [4],_bcgfe [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_fagcf .WhitePoint [0]*_egdf (L );Y =_fagcf .WhitePoint [1]*_egdf (M );Z =_fagcf .WhitePoint [2]*_egdf (N );_fdabf =3.240479*X +-1.537150*Y +-0.498535*Z ;_fgeb =-0.969256*X +1.875992*Y +0.041556*Z ;_dbcbg =0.055648*X +-0.204043*Y +1.057311*Z ;
_fdabf =_cf .Min (_cf .Max (_fdabf ,0),1.0);_fgeb =_cf .Min (_cf .Max (_fgeb ,0),1.0);_dbcbg =_cf .Min (_cf .Max (_dbcbg ,0),1.0);_ddcf [0]=uint32 (_fdabf *_aaec );_ddcf [1]=uint32 (_fgeb *_aaec );_ddcf [2]=uint32 (_dbcbg *_aaec );if _acd =_geecg .WriteSamples (_ddcf );
_acd !=nil {return img ,_acd ;};};return _efecb (&_cafc ),nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _aff .PdfObject ;Volume _aff .PdfObject ;Synchronous _aff .PdfObject ;Repeat _aff .PdfObject ;Mix _aff .PdfObject ;};func (_aabcf *PdfWriter )writeBytes (_dfbae []byte ){if _aabcf ._acag !=nil {return ;};_fadbd ,_gcega :=_aabcf ._ggee .Write (_dfbae );
_aabcf ._cagac +=int64 (_fadbd );_aabcf ._acag =_gcega ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfcaec *PdfPageResourcesColorspaces )ToPdfObject ()_aff .PdfObject {_gfdfgb :=_aff .MakeDict ();for _ ,_gecbd :=range _bfcaec .Names {_gfdfgb .Set (_aff .PdfObjectName (_gecbd ),_bfcaec .Colorspaces [_gecbd ].ToPdfObject ());};if _bfcaec ._abedg !=nil {_bfcaec ._abedg .PdfObject =_gfdfgb ;
return _bfcaec ._abedg ;};return _gfdfgb ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_accd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _accd .UnderlyingCS .GetNumComponents ();};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aff .PdfObject ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// Encoder returns the font's text encoder.
func (_eebf *pdfFontSimple )Encoder ()_eee .TextEncoder {if _eebf ._fdgc !=nil {return _eebf ._fdgc ;};if _eebf ._ggebf !=nil {return _eebf ._ggebf ;};_cdddc ,_ :=_eee .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _cdddc ;};func (_fgbf *pdfFontSimple )getFontEncoding ()(_gagf string ,_bgdc map[_eee .CharCode ]_eee .GlyphName ,_badff error ){_gagf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _feae ,_abbf :=_eaed [_fgbf ._abed ];
_abbf {_gagf =_feae ;}else if _fgbf .fontFlags ()&_cbda !=0{for _ebfc ,_edbaf :=range _eaed {if _ba .Contains (_fgbf ._abed ,_ebfc ){_gagf =_edbaf ;break ;};};};if _fgbf .Encoding ==nil {return _gagf ,nil ,nil ;};switch _ceeaa :=_fgbf .Encoding .(type ){case *_aff .PdfObjectName :return string (*_ceeaa ),nil ,nil ;
case *_aff .PdfObjectDictionary :_fdfgg ,_cdfeg :=_aff .GetName (_ceeaa .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cdfeg {_gagf =_fdfgg .String ();};if _feafb :=_ceeaa .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_feafb !=nil {_bgdd ,_faecd :=_aff .GetArray (_feafb );if !_faecd {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_ceeaa ,_ceeaa .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_aff .ErrTypeError ;};_bgdc ,_badff =_eee .FromFontDifferences (_bgdd );};return _gagf ,_bgdc ,_badff ;default:_adg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_fgbf .Encoding ,_fgbf .Encoding );
return "",nil ,_aff .ErrTypeError ;};};

// GetStructRoot gets the StructTreeRoot object
func (_aeec *PdfPage )GetStructTreeRoot ()(*_aff .PdfObject ,bool ){_dcbfb ,_bfdbg :=_aeec ._dbbf .GetCatalogStructTreeRoot ();return &_dcbfb ,_bfdbg ;};func _fdbfg (_fcdde *_aff .PdfObjectStream )(*PdfFunctionType0 ,error ){_egad :=&PdfFunctionType0 {};
_egad ._fcbe =_fcdde ;_abcf :=_fcdde .PdfObjectDictionary ;_edaga ,_aede :=_aff .TraceToDirectObject (_abcf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aff .PdfObjectArray );if !_aede {_adg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _edaga .Len ()< 0||_edaga .Len ()%2!=0{_adg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_g .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_egad .NumInputs =_edaga .Len ()/2;_cada ,_fbdg :=_edaga .ToFloat64Array ();if _fbdg !=nil {return nil ,_fbdg ;};_egad .Domain =_cada ;
_edaga ,_aede =_aff .TraceToDirectObject (_abcf .Get ("\u0052\u0061\u006eg\u0065")).(*_aff .PdfObjectArray );if !_aede {_adg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _edaga .Len ()< 0||_edaga .Len ()%2!=0{return nil ,_g .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_egad .NumOutputs =_edaga .Len ()/2;_gacf ,_fbdg :=_edaga .ToFloat64Array ();if _fbdg !=nil {return nil ,_fbdg ;
};_egad .Range =_gacf ;_edaga ,_aede =_aff .TraceToDirectObject (_abcf .Get ("\u0053\u0069\u007a\u0065")).(*_aff .PdfObjectArray );if !_aede {_adg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bffbe ,_fbdg :=_edaga .ToIntegerArray ();
if _fbdg !=nil {return nil ,_fbdg ;};if len (_bffbe )!=_egad .NumInputs {_adg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egad .Size =_bffbe ;_cbaff ,_aede :=_aff .TraceToDirectObject (_abcf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_aff .PdfObjectInteger );
if !_aede {_adg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_g .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_cbaff !=1&&*_cbaff !=2&&*_cbaff !=4&&*_cbaff !=8&&*_cbaff !=12&&*_cbaff !=16&&*_cbaff !=24&&*_cbaff !=32{_adg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cbaff );
return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egad .BitsPerSample =int (*_cbaff );_egad .Order =1;_dcdba ,_aede :=_aff .TraceToDirectObject (_abcf .Get ("\u004f\u0072\u0064e\u0072")).(*_aff .PdfObjectInteger );
if _aede {if *_dcdba !=1&&*_dcdba !=3{_adg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dcdba );return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egad .Order =int (*_dcdba );
};_edaga ,_aede =_aff .TraceToDirectObject (_abcf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aff .PdfObjectArray );if _aede {_aeca ,_bccd :=_edaga .ToFloat64Array ();if _bccd !=nil {return nil ,_bccd ;};_egad .Encode =_aeca ;};_edaga ,_aede =_aff .TraceToDirectObject (_abcf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_aff .PdfObjectArray );
if _aede {_ccgd ,_agfa :=_edaga .ToFloat64Array ();if _agfa !=nil {return nil ,_agfa ;};_egad .Decode =_ccgd ;};_cgdfd ,_fbdg :=_aff .DecodeStream (_fcdde );if _fbdg !=nil {return nil ,_fbdg ;};_egad ._aggcg =_cgdfd ;return _egad ,nil ;};func (_fde *PdfReader )newPdfActionGoTo3DViewFromDict (_fbb *_aff .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fbb .Get ("\u0054\u0041"),V :_fbb .Get ("\u0056")},nil ;
};func _edgb (_cccf _aff .PdfObject )(*PdfColorspaceCalGray ,error ){_cbed :=NewPdfColorspaceCalGray ();if _gbdf ,_ddf :=_cccf .(*_aff .PdfIndirectObject );_ddf {_cbed ._ffbf =_gbdf ;};_cccf =_aff .TraceToDirectObject (_cccf );_deae ,_adaga :=_cccf .(*_aff .PdfObjectArray );
if !_adaga {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _deae .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cccf =_aff .TraceToDirectObject (_deae .Get (0));_dffd ,_adaga :=_cccf .(*_aff .PdfObjectName );if !_adaga {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_dffd !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cccf =_aff .TraceToDirectObject (_deae .Get (1));
_caece ,_adaga :=_cccf .(*_aff .PdfObjectDictionary );if !_adaga {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_cccf =_caece .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cccf =_aff .TraceToDirectObject (_cccf );_dcfgc ,_adaga :=_cccf .(*_aff .PdfObjectArray );if !_adaga {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _dcfgc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cdfc ,_gbbd :=_dcfgc .GetAsFloat64Slice ();
if _gbbd !=nil {return nil ,_gbbd ;};_cbed .WhitePoint =_cdfc ;_cccf =_caece .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cccf !=nil {_cccf =_aff .TraceToDirectObject (_cccf );_gfdf ,_befe :=_cccf .(*_aff .PdfObjectArray );
if !_befe {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _gfdf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fagca ,_fdgf :=_gfdf .GetAsFloat64Slice ();if _fdgf !=nil {return nil ,_fdgf ;};_cbed .BlackPoint =_fagca ;};_cccf =_caece .Get ("\u0047\u0061\u006dm\u0061");if _cccf !=nil {_cccf =_aff .TraceToDirectObject (_cccf );_gfebg ,_edec :=_aff .GetNumberAsFloat (_cccf );
if _edec !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cbed .Gamma =_gfebg ;};return _cbed ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_ebae *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_aafg ,_fgcf :=_ebae .GetTrailer ();if _fgcf !=nil {return nil ,_fgcf ;};var _bcfa *_aff .PdfObjectDictionary ;_cbeec :=_aafg .Get ("\u0049\u006e\u0066\u006f");switch _bgcd :=_cbeec .(type ){case *_aff .PdfObjectReference :_agff :=_bgcd ;
_cbeec ,_fgcf =_ebae .GetIndirectObjectByNumber (int (_agff .ObjectNumber ));_cbeec =_aff .TraceToDirectObject (_cbeec );if _fgcf !=nil {return nil ,_fgcf ;};_bcfa ,_ =_cbeec .(*_aff .PdfObjectDictionary );case *_aff .PdfObjectDictionary :_bcfa =_bgcd ;
};if _bcfa ==nil {return nil ,_g .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_feefca ,_fgcf :=NewPdfInfoFromObject (_bcfa );if _fgcf !=nil {return nil ,_fgcf ;
};return _feefca ,nil ;};func _bfdbcc (_adbbdg _aff .PdfObject ,_egff bool )(*PdfFont ,error ){_cfcgb ,_fadb ,_dffc :=_ggggfe (_adbbdg );if _cfcgb !=nil {_eaec (_cfcgb );};if _dffc !=nil {if _dffc ==ErrType1CFontNotSupported {_gffbf ,_dacg :=_gcdde (_cfcgb ,_fadb ,nil );
if _dacg !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fadb ,_dacg );
return nil ,_dffc ;};return &PdfFont {_gebd :_gffbf },_dffc ;};return nil ,_dffc ;};_cbbga :=&PdfFont {};switch _fadb ._fbged {case "\u0054\u0079\u0070e\u0030":if !_egff {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fadb );
return nil ,_g .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gdcde ,_facdd :=_bbcf (_cfcgb ,_fadb );if _facdd !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fadb ,_facdd );
return nil ,_facdd ;};_cbbga ._gebd =_gdcde ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ecgf *pdfFontSimple ;_deacd ,_gddgf :=_bcd .NewStdFontByName (_bcd .StdFontName (_fadb ._abed ));
if _gddgf {_bbbgg :=_dbcbc (_deacd );_cbbga ._gebd =&_bbbgg ;_addd :=_aff .TraceToDirectObject (_bbbgg .ToPdfObject ());_bada ,_dedeg ,_acefg :=_ggggfe (_addd );if _acefg !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fadb ,_bbbgg );
return nil ,_acefg ;};for _ ,_ggegg :=range _cfcgb .Keys (){_bada .Set (_ggegg ,_cfcgb .Get (_ggegg ));};_ecgf ,_acefg =_gcdde (_bada ,_dedeg ,_bbbgg ._ggebf );if _acefg !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fadb ,_bbbgg );
return nil ,_acefg ;};_ecgf ._ecgd =_bbbgg ._ecgd ;_ecgf ._cadeb =_bbbgg ._cadeb ;if _ecgf ._adcc ==nil {_ecgf ._adcc =_bbbgg ._adcc ;};}else {_ecgf ,_dffc =_gcdde (_cfcgb ,_fadb ,nil );if _dffc !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fadb ,_dffc );
return nil ,_dffc ;};};_dffc =_ecgf .addEncoding ();if _dffc !=nil {return nil ,_dffc ;};if _gddgf {_ecgf .updateStandard14Font ();};if _gddgf &&_ecgf ._fdgc ==nil &&_ecgf ._ggebf ==nil {_adg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecgf );
_adg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_deacd );};if len (_ecgf ._ecgd )==0{_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ecgf );};_cbbga ._gebd =_ecgf ;
case "\u0054\u0079\u0070e\u0033":_bgdgg ,_fddac :=_gdbebd (_cfcgb ,_fadb );if _fddac !=nil {_adg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fddac );
return nil ,_fddac ;};_cbbga ._gebd =_bgdgg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gacb ,_daeg :=_ffgg (_cfcgb ,_fadb );if _daeg !=nil {_adg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_daeg );
return nil ,_daeg ;};_cbbga ._gebd =_gacb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_badf ,_bafa :=_fegcf (_cfcgb ,_fadb );if _bafa !=nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fadb ,_bafa );
return nil ,_bafa ;};_cbbga ._gebd =_badf ;default:_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_fadb );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fadb );};return _cbbga ,nil ;};func (_bbgfe *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_bbgfe ._bgeecg .Major ,_bbgfe ._bgeecg .Minor );
};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_aff .PdfParser ;DiffPolicy _gf .DiffPolicy ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// GetBorderWidth returns the border style's width.
func (_abdf *PdfBorderStyle )GetBorderWidth ()float64 {if _abdf .W ==nil {return 1;};return *_abdf .W ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_febe pdfFontType0 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){if _febe .DescendantFont ==nil {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_febe );
return _bcd .CharMetrics {},false ;};return _febe .DescendantFont .GetRuneMetrics (r );};

// ToPdfObject implements interface PdfModel.
func (_fbeec *PdfAnnotationLine )ToPdfObject ()_aff .PdfObject {_fbeec .PdfAnnotation .ToPdfObject ();_aecf :=_fbeec ._ccfb ;_fgf :=_aecf .PdfObject .(*_aff .PdfObjectDictionary );_fbeec .PdfAnnotationMarkup .appendToPdfDictionary (_fgf );_fgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u004c\u0069\u006e\u0065"));
_fgf .SetIfNotNil ("\u004c",_fbeec .L );_fgf .SetIfNotNil ("\u0042\u0053",_fbeec .BS );_fgf .SetIfNotNil ("\u004c\u0045",_fbeec .LE );_fgf .SetIfNotNil ("\u0049\u0043",_fbeec .IC );_fgf .SetIfNotNil ("\u004c\u004c",_fbeec .LL );_fgf .SetIfNotNil ("\u004c\u004c\u0045",_fbeec .LLE );
_fgf .SetIfNotNil ("\u0043\u0061\u0070",_fbeec .Cap );_fgf .SetIfNotNil ("\u0049\u0054",_fbeec .IT );_fgf .SetIfNotNil ("\u004c\u004c\u004f",_fbeec .LLO );_fgf .SetIfNotNil ("\u0043\u0050",_fbeec .CP );_fgf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fbeec .Measure );
_fgf .SetIfNotNil ("\u0043\u004f",_fbeec .CO );return _aecf ;};

// AddCRLs adds CRLs to DSS.
func (_bdca *DSS )AddCRLs (crls [][]byte )([]*_aff .PdfObjectStream ,error ){return _bdca .add (&_bdca .CRLs ,_bdca ._abba ,crls );};func _gca (_bccf *PdfPage )map[_aff .PdfObjectName ]_aff .PdfObject {_bdag :=make (map[_aff .PdfObjectName ]_aff .PdfObject );
if _bccf .Resources ==nil {return _bdag ;};if _bccf .Resources .Font !=nil {if _efad ,_dbcb :=_aff .GetDict (_bccf .Resources .Font );_dbcb {for _ ,_gfb :=range _efad .Keys (){_bdag [_gfb ]=_efad .Get (_gfb );};};};if _bccf .Resources .ExtGState !=nil {if _fafe ,_ebec :=_aff .GetDict (_bccf .Resources .ExtGState );
_ebec {for _ ,_eeeg :=range _fafe .Keys (){_bdag [_eeeg ]=_fafe .Get (_eeeg );};};};if _bccf .Resources .XObject !=nil {if _aacc ,_deeg :=_aff .GetDict (_bccf .Resources .XObject );_deeg {for _ ,_cbcd :=range _aacc .Keys (){_bdag [_cbcd ]=_aacc .Get (_cbcd );
};};};if _bccf .Resources .Pattern !=nil {if _eeaf ,_ddgd :=_aff .GetDict (_bccf .Resources .Pattern );_ddgd {for _ ,_eacd :=range _eeaf .Keys (){_bdag [_eacd ]=_eeaf .Get (_eacd );};};};if _bccf .Resources .Shading !=nil {if _dbd ,_ggdb :=_aff .GetDict (_bccf .Resources .Shading );
_ggdb {for _ ,_fcfea :=range _dbd .Keys (){_bdag [_fcfea ]=_dbd .Get (_fcfea );};};};if _bccf .Resources .ProcSet !=nil {if _ggb ,_aebf :=_aff .GetDict (_bccf .Resources .ProcSet );_aebf {for _ ,_def :=range _ggb .Keys (){_bdag [_def ]=_ggb .Get (_def );
};};};if _bccf .Resources .Properties !=nil {if _ggdc ,_fggd :=_aff .GetDict (_bccf .Resources .Properties );_fggd {for _ ,_ade :=range _ggdc .Keys (){_bdag [_ade ]=_ggdc .Get (_ade );};};};return _bdag ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _aff .PdfObject ;MK _aff .PdfObject ;A _aff .PdfObject ;AA _aff .PdfObject ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_deea :=NewPdfAnnotation ();_bdea :=&PdfAnnotationPopup {};_bdea .PdfAnnotation =_deea ;_deea .SetContext (_bdea );return _bdea ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ega .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _dffcdc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dffg (rs ,opts ,true ,_dffcdc );
};func (_dbfc *PdfReader )newPdfAnnotationTrapNetFromDict (_beg *_aff .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_eceec :=PdfAnnotationTrapNet {};return &_eceec ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_aefb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edbd :=vals [0];if _edbd < 0.0||_edbd > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_edbd );
return nil ,ErrColorOutOfRange ;};_cccd :=vals [1];if _cccd < 0.0||_cccd > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cccd );return nil ,ErrColorOutOfRange ;
};_cdgec :=vals [2];if _cdgec < 0.0||_cdgec > 1.0{_adg .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cdgec );return nil ,ErrColorOutOfRange ;};_dgd :=NewPdfColorCalRGB (_edbd ,_cccd ,_cdgec );
return _dgd ,nil ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cgcb *PdfAppender )GetDSS ()(_dade *DSS ){return _cgcb ._fdbb };func (_bgg *PdfAppender )addNewObject (_adagb _aff .PdfObject ){if _ ,_cccba :=_bgg ._deeb [_adagb ];!_cccba {_bgg ._aggc =append (_bgg ._aggc ,_adagb );_bgg ._deeb [_adagb ]=struct{}{};
};};

// Val returns the color value.
func (_dafgb *PdfColorDeviceGray )Val ()float64 {return float64 (*_dafgb )};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _aff .PdfObject ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_fcee *PdfPageResources )HasPatternByName (keyName _aff .PdfObjectName )bool {_ ,_fdcga :=_fcee .GetPatternByName (keyName );return _fdcga ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbbc *PdfColorspaceDeviceRGB )ToPdfObject ()_aff .PdfObject {return _aff .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _aff .PdfObject ;Name _aff .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_abede pdfCIDFontType2 )GetCharMetrics (code _eee .CharCode )(_bcd .CharMetrics ,bool ){if _edced ,_cedge :=_abede ._egdcef [code ];_cedge {return _bcd .CharMetrics {Wx :_edced },true ;};_aeeaf :=rune (code );_fabg ,_fbda :=_abede ._aedcf [_aeeaf ];
if !_fbda {_fabg =int (_abede ._ceageb );};return _bcd .CharMetrics {Wx :float64 (_fabg )},true ;};func (_cbec *PdfAppender )updateObjectsDeep (_fcaf _aff .PdfObject ,_efab map[_aff .PdfObject ]struct{}){if _efab ==nil {_efab =map[_aff .PdfObject ]struct{}{};
};if _ ,_dbec :=_efab [_fcaf ];_dbec ||_fcaf ==nil {return ;};_efab [_fcaf ]=struct{}{};_dgcb :=_aff .ResolveReferencesDeep (_fcaf ,_cbec ._fdab );if _dgcb !=nil {_adg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcb );};switch _gfgcf :=_fcaf .(type ){case *_aff .PdfIndirectObject :switch {case _gfgcf .GetParser ()==_cbec ._dafgd ._gaece :return ;
case _gfgcf .GetParser ()==_cbec .Reader ._gaece :_egf ,_ :=_cbec ._dafgd .GetIndirectObjectByNumber (int (_gfgcf .ObjectNumber ));_bfcd ,_gabg :=_egf .(*_aff .PdfIndirectObject );if _gabg &&_bfcd !=nil {if _bfcd .PdfObject !=_gfgcf .PdfObject &&_bfcd .PdfObject .WriteString ()!=_gfgcf .PdfObject .WriteString (){if _ba .Contains (_gfgcf .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_ba .Contains (_gfgcf .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_cbec .addNewObject (_fcaf );_cbec ._fffa [_fcaf ]=_gfgcf .ObjectNumber ;};};default:_cbec .addNewObject (_fcaf );};_cbec .updateObjectsDeep (_gfgcf .PdfObject ,_efab );case *_aff .PdfObjectArray :for _ ,_aegd :=range _gfgcf .Elements (){_cbec .updateObjectsDeep (_aegd ,_efab );
};case *_aff .PdfObjectDictionary :for _ ,_bbcc :=range _gfgcf .Keys (){_cbec .updateObjectsDeep (_gfgcf .Get (_bbcc ),_efab );};case *_aff .PdfObjectStreams :if _gfgcf .GetParser ()!=_cbec ._dafgd ._gaece {for _ ,_dgf :=range _gfgcf .Elements (){_cbec .updateObjectsDeep (_dgf ,_efab );
};};case *_aff .PdfObjectStream :switch {case _gfgcf .GetParser ()==_cbec ._dafgd ._gaece :return ;case _gfgcf .GetParser ()==_cbec .Reader ._gaece :if _feac ,_ffeac :=_cbec ._dafgd ._gaece .LookupByReference (_gfgcf .PdfObjectReference );_ffeac ==nil {var _fbfb bool ;
if _dbef ,_gec :=_aff .GetStream (_feac );_gec &&_af .Equal (_dbef .Stream ,_gfgcf .Stream ){_fbfb =true ;};if _faea ,_dcfc :=_aff .GetDict (_feac );_fbfb &&_dcfc {_fbfb =_faea .WriteString ()==_gfgcf .PdfObjectDictionary .WriteString ();};if _fbfb {return ;
};};if _gfgcf .ObjectNumber !=0{_cbec ._fffa [_fcaf ]=_gfgcf .ObjectNumber ;};default:if _ ,_bbae :=_cbec ._deeb [_fcaf ];!_bbae {_cbec .addNewObject (_fcaf );};};_cbec .updateObjectsDeep (_gfgcf .PdfObjectDictionary ,_efab );};};

// SetOCProperties sets the optional content properties.
func (_ffdef *PdfWriter )SetOCProperties (ocProperties _aff .PdfObject )error {_deffb :=_ffdef ._cdccb ;if ocProperties !=nil {_adg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_deffb .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ffdef .addObjects (ocProperties );};return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fed :=NewPdfAction ();_eba :=&PdfActionSound {};_eba .PdfAction =_fed ;_fed .SetContext (_eba );return _eba ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_dgdba *PdfReader )GetRevisionNumber ()int {return _dgdba ._gaece .GetRevisionNumber ()};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _aff .PdfObject ;NewWindow _aff .PdfObject ;T _aff .PdfObject ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_gda *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ededb ,_gdefd :=color .(*PdfColorCalGray );if !_gdefd {_adg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ededb .Val ();X :=_gda .WhitePoint [0]*_cf .Pow (ANorm ,_gda .Gamma );Y :=_gda .WhitePoint [1]*_cf .Pow (ANorm ,_gda .Gamma );Z :=_gda .WhitePoint [2]*_cf .Pow (ANorm ,_gda .Gamma );
_dfdc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_acefa :=-0.969256*X +1.875992*Y +0.041556*Z ;_ffgb :=0.055648*X +-0.204043*Y +1.057311*Z ;_dfdc =_cf .Min (_cf .Max (_dfdc ,0),1.0);_acefa =_cf .Min (_cf .Max (_acefa ,0),1.0);_ffgb =_cf .Min (_cf .Max (_ffgb ,0),1.0);
return NewPdfColorDeviceRGB (_dfdc ,_acefa ,_ffgb ),nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_aff .PdfObjectStream ;OCSP []*_aff .PdfObjectStream ;CRL []*_aff .PdfObjectStream ;TU *_aff .PdfObjectString ;TS *_aff .PdfObjectString ;};func (_adda *PdfReader )newPdfAnnotationStrikeOut (_acef *_aff .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gead :=PdfAnnotationStrikeOut {};
_eeea ,_bdce :=_adda .newPdfAnnotationMarkupFromDict (_acef );if _bdce !=nil {return nil ,_bdce ;};_gead .PdfAnnotationMarkup =_eeea ;_gead .QuadPoints =_acef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gead ,nil ;};func (_fgffd *pdfFontType3 )baseFields ()*fontCommon {return &_fgffd .fontCommon };


// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dabf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_fgab :=&PdfShadingPatternType2 {};_fgab .Matrix =_aff .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_fgab .PdfPattern =&PdfPattern {};_fgab .PdfPattern .PatternType =int64 (*_aff .MakeInteger (2));
_fgab .PdfPattern ._abbe =_fgab ;_fgab .PdfPattern ._cfegc =_aff .MakeIndirectObject (_aff .MakeDict ());return _fgab ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gedd *Outline )ToPdfOutline ()*PdfOutline {_gcdb :=NewPdfOutline ();var _baddb []*PdfOutlineItem ;var _gebbe int64 ;var _edgba *PdfOutlineItem ;for _ ,_aeggd :=range _gedd .Entries {_febfe ,_bbdafc :=_aeggd .ToPdfOutlineItem ();_febfe .Parent =&_gcdb .PdfOutlineTreeNode ;
if _edgba !=nil {_edgba .Next =&_febfe .PdfOutlineTreeNode ;_febfe .Prev =&_edgba .PdfOutlineTreeNode ;};_baddb =append (_baddb ,_febfe );_gebbe +=_bbdafc ;_edgba =_febfe ;};_agebe :=int64 (len (_baddb ));_gebbe +=_agebe ;if _agebe > 0{_gcdb .First =&_baddb [0].PdfOutlineTreeNode ;
_gcdb .Last =&_baddb [_agebe -1].PdfOutlineTreeNode ;_gcdb .Count =&_gebbe ;};return _gcdb ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_cffc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_egbgd :=_cffc .actualFont ();if _egbgd ==nil {_adg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cffc ._gebd );
return _bcd .CharMetrics {},false ;};if _ecdeb ,_feef :=_egbgd .GetRuneMetrics (r );_feef {return _ecdeb ,true ;};if _fgafb ,_gbgf :=_cffc .GetFontDescriptor ();_gbgf ==nil &&_fgafb !=nil {return _bcd .CharMetrics {Wx :_fgafb ._eace },true ;};_adg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cffc );
return _bcd .CharMetrics {},false ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_aff .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_debe *_aff .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbgcbc *PdfShadingType3 )ToPdfObject ()_aff .PdfObject {_bbgcbc .PdfShading .ToPdfObject ();_acac ,_fegac :=_bbgcbc .getShadingDict ();if _fegac !=nil {_adg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbgcbc .Coords !=nil {_acac .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bbgcbc .Coords );};if _bbgcbc .Domain !=nil {_acac .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbgcbc .Domain );};if _bbgcbc .Function !=nil {if len (_bbgcbc .Function )==1{_acac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbgcbc .Function [0].ToPdfObject ());
}else {_bebba :=_aff .MakeArray ();for _ ,_fdaff :=range _bbgcbc .Function {_bebba .Append (_fdaff .ToPdfObject ());};_acac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bebba );};};if _bbgcbc .Extend !=nil {_acac .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bbgcbc .Extend );
};return _bbgcbc ._bdacg ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fgdg *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbbb ,_adbf :=_aff .GetNumbersAsFloat (objects );
if _adbf !=nil {return nil ,_adbf ;};return _fgdg .ColorFromFloats (_dbbb );};

// SetPatternByName sets a pattern resource specified by keyName.
func (_fdge *PdfPageResources )SetPatternByName (keyName _aff .PdfObjectName ,pattern _aff .PdfObject )error {if _fdge .Pattern ==nil {_fdge .Pattern =_aff .MakeDict ();};_gcebb ,_cebge :=_aff .GetDict (_fdge .Pattern );if !_cebge {return _aff .ErrTypeError ;
};_gcebb .Set (keyName ,pattern );return nil ;};func (_ggag *PdfWriter )addObjects (_feabb _aff .PdfObject )error {_adg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _eedb ,_ceega :=_feabb .(*_aff .PdfIndirectObject );
_ceega {_adg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_adg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_feabb ,_eedb );_adg .Log .Trace ("\u002d\u0020\u0025\u0073",_eedb .PdfObject );if _ggag .addObject (_eedb ){_bdfee :=_ggag .addObjects (_eedb .PdfObject );
if _bdfee !=nil {return _bdfee ;};};return nil ;};if _fefgb ,_bfcaac :=_feabb .(*_aff .PdfObjectStream );_bfcaac {_adg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_adg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_feabb ,_feabb );if _ggag .addObject (_fefgb ){_bdceba :=_ggag .addObjects (_fefgb .PdfObjectDictionary );
if _bdceba !=nil {return _bdceba ;};};return nil ;};if _cgebd ,_acadab :=_feabb .(*_aff .PdfObjectDictionary );_acadab {_adg .Log .Trace ("\u0044\u0069\u0063\u0074");_adg .Log .Trace ("\u002d\u0020\u0025\u0073",_feabb );for _ ,_dfcef :=range _cgebd .Keys (){_cdga :=_cgebd .Get (_dfcef );
if _gedac ,_eebfb :=_cdga .(*_aff .PdfObjectReference );_eebfb {_cdga =_gedac .Resolve ();_cgebd .Set (_dfcef ,_cdga );};if _dfcef !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _gcbfa :=_ggag .addObjects (_cdga );_gcbfa !=nil {return _gcbfa ;};}else {if _ ,_eeaa :=_cdga .(*_aff .PdfObjectNull );
_eeaa {continue ;};if _fggbf :=_ggag .hasObject (_cdga );!_fggbf {_adg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cdga ,_cdga ,_cdga );
_ggag ._gbfdc [_cdga ]=append (_ggag ._gbfdc [_cdga ],_cgebd );};};};return nil ;};if _bgfeb ,_afgda :=_feabb .(*_aff .PdfObjectArray );_afgda {_adg .Log .Trace ("\u0041\u0072\u0072a\u0079");_adg .Log .Trace ("\u002d\u0020\u0025\u0073",_feabb );if _bgfeb ==nil {return _g .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fccfg ,_ggdaa :=range _bgfeb .Elements (){if _aabea ,_aabf :=_ggdaa .(*_aff .PdfObjectReference );_aabf {_ggdaa =_aabea .Resolve ();_bgfeb .Set (_fccfg ,_ggdaa );};if _beabbb :=_ggag .addObjects (_ggdaa );_beabbb !=nil {return _beabbb ;};};return nil ;
};if _ ,_fggda :=_feabb .(*_aff .PdfObjectReference );_fggda {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_feabb );
return _g .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_ffbedf *PdfWriter )SetOpenAction (dest _aff .PdfObject )error {if dest ==nil ||_aff .IsNullObject (dest ){return nil ;};_ffbedf ._cdccb .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _ffbedf .addObjects (dest );
};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _aff .PdfObject ;BS _aff .PdfObject ;};type pdfFontSimple struct{fontCommon ;_effd *_aff .PdfIndirectObject ;_ecgd map[_eee .CharCode ]float64 ;_fdgc _eee .TextEncoder ;_ggebf _eee .TextEncoder ;
_adcc *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _aff .PdfObject ;LastChar _aff .PdfObject ;Widths _aff .PdfObject ;Encoding _aff .PdfObject ;_cadeb *_bcd .RuneCharSafeMap ;};

// Encoder returns the font's text encoder.
func (_bdab *PdfFont )Encoder ()_eee .TextEncoder {_fcfgg :=_bdab .actualFont ();if _fcfgg ==nil {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bdab ._gebd );
return nil ;};return _fcfgg .Encoder ();};func (_cddb *PdfWriter )writeDocumentVersion (){if _cddb ._ccbe {_cddb .writeString ("\u000a");}else {_cddb .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cddb ._bgeecg .Major ,_cddb ._bgeecg .Minor ));
_cddb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func _ffaff (_cacf _aff .PdfObject )(*PdfColorspaceLab ,error ){_ffebc :=NewPdfColorspaceLab ();if _aafc ,_ddad :=_cacf .(*_aff .PdfIndirectObject );_ddad {_ffebc ._bccfg =_aafc ;};_cacf =_aff .TraceToDirectObject (_cacf );
_gbfge ,_fbbb :=_cacf .(*_aff .PdfObjectArray );if !_fbbb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbfge .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cacf =_aff .TraceToDirectObject (_gbfge .Get (0));_gbdaf ,_fbbb :=_cacf .(*_aff .PdfObjectName );if !_fbbb {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_gbdaf !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cacf =_aff .TraceToDirectObject (_gbfge .Get (1));_faee ,_fbbb :=_cacf .(*_aff .PdfObjectDictionary );
if !_fbbb {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cacf =_faee .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_cacf =_aff .TraceToDirectObject (_cacf );_dgbgf ,_fbbb :=_cacf .(*_aff .PdfObjectArray );if !_fbbb {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _dgbgf .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_begad ,_gggf :=_dgbgf .GetAsFloat64Slice ();if _gggf !=nil {return nil ,_gggf ;};_ffebc .WhitePoint =_begad ;_cacf =_faee .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cacf !=nil {_cacf =_aff .TraceToDirectObject (_cacf );
_dbaa ,_gabc :=_cacf .(*_aff .PdfObjectArray );if !_gabc {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dbaa .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gdce ,_afdg :=_dbaa .GetAsFloat64Slice ();if _afdg !=nil {return nil ,_afdg ;};_ffebc .BlackPoint =_gdce ;};_cacf =_faee .Get ("\u0052\u0061\u006eg\u0065");if _cacf !=nil {_cacf =_aff .TraceToDirectObject (_cacf );_agfc ,_fefe :=_cacf .(*_aff .PdfObjectArray );
if !_fefe {_adg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agfc .Len ()!=4{_adg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fagg ,_gbgg :=_agfc .GetAsFloat64Slice ();if _gbgg !=nil {return nil ,_gbgg ;};_ffebc .Range =_fagg ;};return _ffebc ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ceegf *PdfWriter )SetNamedDestinations (dests _aff .PdfObject )error {if dests ==nil {return nil ;};_adg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_ceegf ._cdccb .Set ("\u0044\u0065\u0073t\u0073",dests );return _ceegf .addObjects (dests );};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_fffga ,_eaccd :=_cd .ParsePdfTime (dateStr );if _eaccd !=nil {return PdfDate {},_eaccd ;};return NewPdfDateFromTime (_fffga );};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_fege *PdfColorspaceDeviceN )ToPdfObject ()_aff .PdfObject {_dggga :=_aff .MakeArray (_aff .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_dggga .Append (_fege .ColorantNames );_dggga .Append (_fege .AlternateSpace .ToPdfObject ());_dggga .Append (_fege .TintTransform .ToPdfObject ());
if _fege .Attributes !=nil {_dggga .Append (_fege .Attributes .ToPdfObject ());};if _fege ._debe !=nil {_fege ._debe .PdfObject =_dggga ;return _fege ._debe ;};return _dggga ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_fcdcd *PdfPageResources )SetFontByName (keyName _aff .PdfObjectName ,obj _aff .PdfObject )error {if _fcdcd .Font ==nil {_fcdcd .Font =_aff .MakeDict ();};_bbbfgd ,_ebed :=_aff .TraceToDirectObject (_fcdcd .Font ).(*_aff .PdfObjectDictionary );if !_ebed {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aff .TraceToDirectObject (_fcdcd .Font ));
return _aff .ErrTypeError ;};_bbbfgd .Set (keyName ,obj );return nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_decd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _decd .baseFields ()._ggca !=nil {return _decd .baseFields ()._ggca ;};if _bedb :=_decd ._gebd .getFontDescriptor ();_bedb !=nil {return _bedb ;};_adg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_decd );
return nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_abedg *_aff .PdfIndirectObject ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _aff .PdfObject )(*PdfFilespec ,error ){_eedc :=&PdfFilespec {};var _baefd *_aff .PdfObjectDictionary ;if _ccbaf ,_ffce :=_aff .GetIndirect (obj );_ffce {_eedc ._dfefa =_ccbaf ;_fbcca ,_eabd :=_aff .GetDict (_ccbaf .PdfObject );
if !_eabd {_adg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aff .ErrTypeError ;};_baefd =_fbcca ;}else if _ebcebc ,_efag :=_aff .GetDict (obj );
_efag {_eedc ._dfefa =_ebcebc ;_baefd =_ebcebc ;}else {_adg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_aff .ErrTypeError ;};
if _baefd ==nil {_adg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_g .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cbbc :=_baefd .Get ("\u0054\u0079\u0070\u0065");
_cbbc !=nil {_faac ,_ebge :=_cbbc .(*_aff .PdfObjectName );if !_ebge {_adg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cbbc );
}else {if *_faac !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_adg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_faac );
};};};if _acafa :=_baefd .Get ("\u0046\u0053");_acafa !=nil {_eedc .FS =_acafa ;};if _gddf :=_baefd .Get ("\u0046");_gddf !=nil {_eedc .F =_gddf ;};if _fabfe :=_baefd .Get ("\u0055\u0046");_fabfe !=nil {_eedc .UF =_fabfe ;};if _gfaa :=_baefd .Get ("\u0044\u004f\u0053");
_gfaa !=nil {_eedc .DOS =_gfaa ;};if _bfee :=_baefd .Get ("\u004d\u0061\u0063");_bfee !=nil {_eedc .Mac =_bfee ;};if _bdbg :=_baefd .Get ("\u0055\u006e\u0069\u0078");_bdbg !=nil {_eedc .Unix =_bdbg ;};if _gfcd :=_baefd .Get ("\u0049\u0044");_gfcd !=nil {_eedc .ID =_gfcd ;
};if _caca :=_baefd .Get ("\u0056");_caca !=nil {_eedc .V =_caca ;};if _cafe :=_baefd .Get ("\u0045\u0046");_cafe !=nil {_eedc .EF =_cafe ;};if _aeab :=_baefd .Get ("\u0052\u0046");_aeab !=nil {_eedc .RF =_aeab ;};if _ggaa :=_baefd .Get ("\u0044\u0065\u0073\u0063");
_ggaa !=nil {_eedc .Desc =_ggaa ;};if _dgda :=_baefd .Get ("\u0043\u0049");_dgda !=nil {_eedc .CI =_dgda ;};return _eedc ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dadb *PdfPageResources )GetExtGState (keyName _aff .PdfObjectName )(_aff .PdfObject ,bool ){if _dadb .ExtGState ==nil {return nil ,false ;};_fafc ,_ccfd :=_aff .TraceToDirectObject (_dadb .ExtGState ).(*_aff .PdfObjectDictionary );if !_ccfd {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dadb .ExtGState );
return nil ,false ;};if _bgdb :=_fafc .Get (keyName );_bgdb !=nil {return _bgdb ,true ;};return nil ,false ;};func (_fbgg *PdfReader )newPdfAnnotationTextFromDict (_cgdf *_aff .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fgd :=PdfAnnotationText {};
_ggea ,_bdeb :=_fbgg .newPdfAnnotationMarkupFromDict (_cgdf );if _bdeb !=nil {return nil ,_bdeb ;};_fgd .PdfAnnotationMarkup =_ggea ;_fgd .Open =_cgdf .Get ("\u004f\u0070\u0065\u006e");_fgd .Name =_cgdf .Get ("\u004e\u0061\u006d\u0065");_fgd .State =_cgdf .Get ("\u0053\u0074\u0061t\u0065");
_fgd .StateModel =_cgdf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_fgd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eac *PdfAnnotationFreeText )ToPdfObject ()_aff .PdfObject {_eac .PdfAnnotation .ToPdfObject ();_fdagd :=_eac ._ccfb ;_dead :=_fdagd .PdfObject .(*_aff .PdfObjectDictionary );_eac .PdfAnnotationMarkup .appendToPdfDictionary (_dead );_dead .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aff .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_dead .SetIfNotNil ("\u0044\u0041",_eac .DA );_dead .SetIfNotNil ("\u0051",_eac .Q );_dead .SetIfNotNil ("\u0052\u0043",_eac .RC );_dead .SetIfNotNil ("\u0044\u0053",_eac .DS );_dead .SetIfNotNil ("\u0043\u004c",_eac .CL );_dead .SetIfNotNil ("\u0049\u0054",_eac .IT );
_dead .SetIfNotNil ("\u0042\u0045",_eac .BE );_dead .SetIfNotNil ("\u0052\u0044",_eac .RD );_dead .SetIfNotNil ("\u0042\u0053",_eac .BS );_dead .SetIfNotNil ("\u004c\u0045",_eac .LE );return _fdagd ;};func _egba (_fece _aff .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_fggf :=NewPdfColorspaceSpecialIndexed ();
if _aaaa ,_efgg :=_fece .(*_aff .PdfIndirectObject );_efgg {_fggf ._efeca =_aaaa ;};_fece =_aff .TraceToDirectObject (_fece );_aefa ,_gcac :=_fece .(*_aff .PdfObjectArray );if !_gcac {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _aefa .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fece =_aefa .Get (0);
_bafce ,_gcac :=_fece .(*_aff .PdfObjectName );if !_gcac {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_bafce !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_fece =_aefa .Get (1);_accfe ,_bfeb :=DetermineColorspaceNameFromPdfObject (_fece );if _bfeb !=nil {return nil ,_bfeb ;};if _accfe =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_accfe =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_adg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_accfe );
return nil ,_ddcbc ;};_bfea ,_bfeb :=NewPdfColorspaceFromPdfObject (_fece );if _bfeb !=nil {return nil ,_bfeb ;};_fggf .Base =_bfea ;_fece =_aefa .Get (2);_cgef ,_bfeb :=_aff .GetNumberAsInt64 (_fece );if _bfeb !=nil {return nil ,_bfeb ;};if _cgef > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_fggf .HiVal =int (_cgef );_fece =_aefa .Get (3);_fggf .Lookup =_fece ;_fece =_aff .TraceToDirectObject (_fece );var _cgab []byte ;if _cfee ,_abdd :=_fece .(*_aff .PdfObjectString );_abdd {_cgab =_cfee .Bytes ();_adg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_cgab );
}else if _aafe ,_dcaa :=_fece .(*_aff .PdfObjectStream );_dcaa {_adg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_fece .String ());_adg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_aafe .Stream ),_aafe .Stream );
_gfce ,_eeac :=_aff .DecodeStream (_aafe );if _eeac !=nil {return nil ,_eeac ;};_adg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gfce ),_gfce );_cgab =_gfce ;}else {_adg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fece );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_cgab )< _fggf .Base .GetNumComponents ()*(_fggf .HiVal +1){_adg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_adg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_cgab ),_fggf .Base .GetNumComponents (),_fggf .HiVal );
}else {_cgab =_cgab [:_fggf .Base .GetNumComponents ()*(_fggf .HiVal +1)];};_fggf ._ecfb =_cgab ;return _fggf ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cedbd *PdfReader )IsEncrypted ()(bool ,error ){return _cedbd ._gaece .IsEncrypted ()};func _cgaeg (_ddeb _aff .PdfObject )(*PdfFontDescriptor ,error ){_cgcg :=&PdfFontDescriptor {};_ddeb =_aff .ResolveReference (_ddeb );if _cecde ,_gbefe :=_ddeb .(*_aff .PdfIndirectObject );
_gbefe {_cgcg ._cade =_cecde ;_ddeb =_cecde .PdfObject ;};_becfg ,_egbc :=_aff .GetDict (_ddeb );if !_egbc {_adg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddeb );
return nil ,_aff .ErrTypeError ;};if _bcgfg :=_becfg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_bcgfg !=nil {_cgcg .FontName =_bcgfg ;}else {_adg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_cbfb ,_ :=_aff .GetName (_cgcg .FontName );if _agdb :=_becfg .Get ("\u0054\u0079\u0070\u0065");_agdb !=nil {_dace ,_adege :=_agdb .(*_aff .PdfObjectName );if !_adege ||string (*_dace )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_adg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_agdb ,_cbfb ,_cgcg .FontName );
};}else {_adg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cbfb ,_cgcg .FontName );
};_cgcg .FontFamily =_becfg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cgcg .FontStretch =_becfg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cgcg .FontWeight =_becfg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_cgcg .Flags =_becfg .Get ("\u0046\u006c\u0061g\u0073");_cgcg .FontBBox =_becfg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cgcg .ItalicAngle =_becfg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cgcg .Ascent =_becfg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_cgcg .Descent =_becfg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cgcg .Leading =_becfg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cgcg .CapHeight =_becfg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cgcg .XHeight =_becfg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_cgcg .StemV =_becfg .Get ("\u0053\u0074\u0065m\u0056");_cgcg .StemH =_becfg .Get ("\u0053\u0074\u0065m\u0048");_cgcg .AvgWidth =_becfg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cgcg .MaxWidth =_becfg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_cgcg .MissingWidth =_becfg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cgcg .FontFile =_becfg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cgcg .FontFile2 =_becfg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_cgcg .FontFile3 =_becfg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cgcg .CharSet =_becfg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cgcg .Style =_becfg .Get ("\u0053\u0074\u0079l\u0065");_cgcg .Lang =_becfg .Get ("\u004c\u0061\u006e\u0067");
_cgcg .FD =_becfg .Get ("\u0046\u0044");_cgcg .CIDSet =_becfg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cgcg .Flags !=nil {if _bbfc ,_cacgb :=_aff .GetIntVal (_cgcg .Flags );_cacgb {_cgcg ._cdbb =_bbfc ;};};if _cgcg .MissingWidth !=nil {if _cbdg ,_cedg :=_aff .GetNumberAsFloat (_cgcg .MissingWidth );
_cedg ==nil {_cgcg ._eace =_cbdg ;};};if _cgcg .FontFile !=nil {_ccga ,_edac :=_bdeaf (_cgcg .FontFile );if _edac !=nil {return _cgcg ,_edac ;};_adg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ccga );_cgcg .fontFile =_ccga ;
};if _cgcg .FontFile2 !=nil {_cdffd ,_daed :=_bcd .NewFontFile2FromPdfObject (_cgcg .FontFile2 );if _daed !=nil {return _cgcg ,_daed ;};_adg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cdffd .String ());_cgcg ._ddffd =&_cdffd ;
};return _cgcg ,nil ;};func (_ffgd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gcfc *PdfColorCalGray )GetNumComponents ()int {return 1};func (_efaae *PdfPage )getParentResources ()(*PdfPageResources ,error ){_fbcbc :=_efaae .Parent ;for _fbcbc !=nil {_fegea ,_bggff :=_aff .GetDict (_fbcbc );if !_bggff {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_g .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _gdfaad :=_fegea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdfaad !=nil {_beab ,_egafb :=_aff .GetDict (_gdfaad );
if !_egafb {return nil ,_g .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bdbad ,_cgfcf :=NewPdfPageResourcesFromDict (_beab );if _cgfcf !=nil {return nil ,_cgfcf ;};return _bdbad ,nil ;
};_fbcbc =_fegea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};var _cgcf =_bd .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gfe :=NewPdfAction ();_fadd :=&PdfActionHide {};_fadd .PdfAction =_gfe ;_gfe .SetContext (_fadd );return _fadd ;};func _dfbfc (_bbfea *XObjectImage )error {if _bbfea .SMask ==nil {return nil ;};_fdecd ,_fgaef :=_bbfea .SMask .(*_aff .PdfObjectStream );
if !_fgaef {_adg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _aff .ErrTypeError ;};_fedcg :=_fdecd .PdfObjectDictionary ;
_egede :=_fedcg .Get ("\u004d\u0061\u0074t\u0065");if _egede ==nil {return nil ;};_efeg ,_ecabgb :=_cdffb (_egede .(*_aff .PdfObjectArray ));if _ecabgb !=nil {return _ecabgb ;};_aacff :=_aff .MakeArrayFromFloats ([]float64 {_efeg });_fedcg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aacff );
return nil ;};func (_egadf *XObjectImage )getParamsDict ()*_aff .PdfObjectDictionary {_acaadg :=_aff .MakeDict ();_acaadg .Set ("\u0057\u0069\u0064t\u0068",_aff .MakeInteger (*_egadf .Width ));_acaadg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aff .MakeInteger (*_egadf .Height ));
_acaadg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aff .MakeInteger (int64 (_egadf .ColorSpace .GetNumComponents ())));_acaadg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aff .MakeInteger (*_egadf .BitsPerComponent ));
return _acaadg ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_ffbfg :=&PdfShadingType3 {};_ffbfg .PdfShading =&PdfShading {};_ffbfg .PdfShading ._bdacg =_aff .MakeIndirectObject (_aff .MakeDict ());_ffbfg .PdfShading ._fcbfb =_ffbfg ;return _ffbfg ;};

// ToPdfObject returns the PDF representation of the function.
func (_bbgcd *PdfFunctionType3 )ToPdfObject ()_aff .PdfObject {_gfae :=_aff .MakeDict ();_gfae .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aff .MakeInteger (3));_egbe :=&_aff .PdfObjectArray {};for _ ,_bddgb :=range _bbgcd .Domain {_egbe .Append (_aff .MakeFloat (_bddgb ));
};_gfae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egbe );if _bbgcd .Range !=nil {_ceaa :=&_aff .PdfObjectArray {};for _ ,_dbfa :=range _bbgcd .Range {_ceaa .Append (_aff .MakeFloat (_dbfa ));};_gfae .Set ("\u0052\u0061\u006eg\u0065",_ceaa );};if _bbgcd .Functions !=nil {_cecb :=&_aff .PdfObjectArray {};
for _ ,_ggfbf :=range _bbgcd .Functions {_cecb .Append (_ggfbf .ToPdfObject ());};_gfae .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cecb );};if _bbgcd .Bounds !=nil {_afaeb :=&_aff .PdfObjectArray {};for _ ,_abffg :=range _bbgcd .Bounds {_afaeb .Append (_aff .MakeFloat (_abffg ));
};_gfae .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_afaeb );};if _bbgcd .Encode !=nil {_adca :=&_aff .PdfObjectArray {};for _ ,_cbfbg :=range _bbgcd .Encode {_adca .Append (_aff .MakeFloat (_cbfbg ));};_gfae .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_adca );
};if _bbgcd ._cabf !=nil {_bbgcd ._cabf .PdfObject =_gfae ;return _bbgcd ._cabf ;};return _gfae ;};

// ToPdfObject implements interface PdfModel.
func (_aagc *PdfActionThread )ToPdfObject ()_aff .PdfObject {_aagc .PdfAction .ToPdfObject ();_ggf :=_aagc ._df ;_abc :=_ggf .PdfObject .(*_aff .PdfObjectDictionary );_abc .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeThread )));if _aagc .F !=nil {_abc .Set ("\u0046",_aagc .F .ToPdfObject ());
};_abc .SetIfNotNil ("\u0044",_aagc .D );_abc .SetIfNotNil ("\u0042",_aagc .B );return _ggf ;};

// ToPdfObject implements interface PdfModel.
func (_fea *PdfActionLaunch )ToPdfObject ()_aff .PdfObject {_fea .PdfAction .ToPdfObject ();_ffeb :=_fea ._df ;_ec :=_ffeb .PdfObject .(*_aff .PdfObjectDictionary );_ec .SetIfNotNil ("\u0053",_aff .MakeName (string (ActionTypeLaunch )));if _fea .F !=nil {_ec .Set ("\u0046",_fea .F .ToPdfObject ());
};_ec .SetIfNotNil ("\u0057\u0069\u006e",_fea .Win );_ec .SetIfNotNil ("\u004d\u0061\u0063",_fea .Mac );_ec .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fea .Unix );_ec .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fea .NewWindow );return _ffeb ;
};func (_acgb *LTV )getOCSPs (_fagad []*_fb .Certificate ,_bddbf map[string ]*_fb .Certificate )([][]byte ,error ){_accac :=make ([][]byte ,0,len (_fagad ));for _ ,_bbebb :=range _fagad {for _ ,_ggggd :=range _bbebb .OCSPServer {if _acgb .CertClient .IsCA (_bbebb ){continue ;
};_egaac ,_eaba :=_bddbf [_bbebb .Issuer .CommonName ];if !_eaba {_adg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_aebbc ,_agfce :=_acgb .OCSPClient .MakeRequest (_ggggd ,_bbebb ,_egaac );if _agfce !=nil {_adg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_agfce );
continue ;};_accac =append (_accac ,_aebbc );};};return _accac ,nil ;};func (_dggfd *PdfReader )newPdfFieldSignatureFromDict (_bddd *_aff .PdfObjectDictionary )(*PdfFieldSignature ,error ){_acgfd :=&PdfFieldSignature {};_cfge ,_fgbg :=_aff .GetIndirect (_bddd .Get ("\u0056"));
if _fgbg {var _efed error ;_acgfd .V ,_efed =_dggfd .newPdfSignatureFromIndirect (_cfge );if _efed !=nil {return nil ,_efed ;};};_acgfd .Lock ,_ =_aff .GetIndirect (_bddd .Get ("\u004c\u006f\u0063\u006b"));_acgfd .SV ,_ =_aff .GetIndirect (_bddd .Get ("\u0053\u0056"));
return _acgfd ,nil ;};func (_fcddd *pdfFontType0 )baseFields ()*fontCommon {return &_fcddd .fontCommon };

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _aff .PdfObject ;Dest _aff .PdfObject ;H _aff .PdfObject ;PA _aff .PdfObject ;QuadPoints _aff .PdfObject ;BS _aff .PdfObject ;_dea *PdfAction ;_cdf *PdfReader ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bedf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_acfc *PdfColorspaceLab )ColorFromPdfObjects (objects []_aff .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_g .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adffe ,_afecg :=_aff .GetNumbersAsFloat (objects );
if _afecg !=nil {return nil ,_afecg ;};return _acfc .ColorFromFloats (_adffe );};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cfbbd *PdfShadingPatternType2 )ToPdfObject ()_aff .PdfObject {_cfbbd .PdfPattern .ToPdfObject ();_abacb :=_cfbbd .getDict ();if _cfbbd .Shading !=nil {_abacb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cfbbd .Shading .ToPdfObject ());};if _cfbbd .Matrix !=nil {_abacb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfbbd .Matrix );
};if _cfbbd .ExtGState !=nil {_abacb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cfbbd .ExtGState );};return _cfbbd ._cfegc ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_gaecf PdfModel ;_dfbfd *_aff .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_aff .PdfObjectName ;T *_aff .PdfObjectString ;TU *_aff .PdfObjectString ;TM *_aff .PdfObjectString ;Ff *_aff .PdfObjectInteger ;
V _aff .PdfObject ;DV _aff .PdfObject ;AA _aff .PdfObject ;VariableText *VariableText ;};func (_feaacc *PdfReader )newPdfSignatureFromIndirect (_egece *_aff .PdfIndirectObject )(*PdfSignature ,error ){_eadgc ,_fafdd :=_egece .PdfObject .(*_aff .PdfObjectDictionary );
if !_fafdd {_adg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _aabadc ,_fggbc :=_feaacc ._cfadc .GetModelFromPrimitive (_egece ).(*PdfSignature );_fggbc {return _aabadc ,nil ;};_aedfb :=&PdfSignature {};_aedfb ._gagbc =_egece ;_aedfb .Type ,_ =_aff .GetName (_eadgc .Get ("\u0054\u0079\u0070\u0065"));
_aedfb .Filter ,_fafdd =_aff .GetName (_eadgc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_fafdd {_adg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_aedfb .SubFilter ,_ =_aff .GetName (_eadgc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_aedfb .Contents ,_fafdd =_aff .GetString (_eadgc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_fafdd {_adg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _afgcc ,_ceece :=_aff .GetArray (_eadgc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ceece {_aedfb .Reference =_aff .MakeArray ();for _ ,_bgagc :=range _afgcc .Elements (){_ffeadf ,_dafef :=_aff .GetDict (_bgagc );
if !_dafef {_adg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cefd ,_abcec :=_feaacc .newPdfSignatureReferenceFromDict (_ffeadf );if _abcec !=nil {return nil ,_abcec ;};_aedfb .Reference .Append (_cefd .ToPdfObject ());};};_aedfb .Cert =_eadgc .Get ("\u0043\u0065\u0072\u0074");_aedfb .ByteRange ,_ =_aff .GetArray (_eadgc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_aedfb .Changes ,_ =_aff .GetArray (_eadgc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_aedfb .Name ,_ =_aff .GetString (_eadgc .Get ("\u004e\u0061\u006d\u0065"));_aedfb .M ,_ =_aff .GetString (_eadgc .Get ("\u004d"));_aedfb .Location ,_ =_aff .GetString (_eadgc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_aedfb .Reason ,_ =_aff .GetString (_eadgc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_aedfb .ContactInfo ,_ =_aff .GetString (_eadgc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_aedfb .R ,_ =_aff .GetInt (_eadgc .Get ("\u0052"));
_aedfb .V ,_ =_aff .GetInt (_eadgc .Get ("\u0056"));_aedfb .PropBuild ,_ =_aff .GetDict (_eadgc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_aedfb .PropAuthTime ,_ =_aff .GetInt (_eadgc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_aedfb .PropAuthType ,_ =_aff .GetName (_eadgc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_feaacc ._cfadc .Register (_egece ,_aedfb );return _aedfb ,nil ;};

// PdfVersion returns version of the PDF file.
func (_cefge *PdfReader )PdfVersion ()_aff .Version {return _cefge ._gaece .PdfVersion ()};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gfffg *PdfReader )Decrypt (password []byte )(bool ,error ){_geaec ,_bfcea :=_gfffg ._gaece .Decrypt (password );if _bfcea !=nil {return false ,_bfcea ;};if !_geaec {return false ,nil ;};_bfcea =_gfffg .loadStructure ();if _bfcea !=nil {_adg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bfcea );
return false ,_bfcea ;};return true ,nil ;};func (_aefbe *PdfWriter )setDocInfo (_ededf _aff .PdfObject ){if _aefbe .hasObject (_aefbe ._bacec ){delete (_aefbe ._bgadg ,_aefbe ._bacec );delete (_aefbe ._cgdcb ,_aefbe ._bacec );for _bdcge ,_gdfeg :=range _aefbe ._babcd {if _gdfeg ==_aefbe ._bacec {copy (_aefbe ._babcd [_bdcge :],_aefbe ._babcd [_bdcge +1:]);
_aefbe ._babcd [len (_aefbe ._babcd )-1]=nil ;_aefbe ._babcd =_aefbe ._babcd [:len (_aefbe ._babcd )-1];break ;};};};_efecf :=_aff .PdfIndirectObject {};_efecf .PdfObject =_ededf ;_aefbe ._bacec =&_efecf ;_aefbe .addObject (&_efecf );};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_eadg *PdfAppender )UpdatePage (page *PdfPage ){_eadg .updateObjectsDeep (page .ToPdfObject (),nil )};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_gcga :=&PdfColorPatternType3 {};return _gcga };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gebd pdfFont };

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fgbb :=NewPdfAnnotation ();_ada :=&PdfAnnotationMovie {};_ada .PdfAnnotation =_fgbb ;_fgbb .SetContext (_ada );return _ada ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _aff .PdfObject ;PreserveRB _aff .PdfObject ;};func _adffed (_fgdaf _aff .PdfObject )(map[_eee .CharCode ]float64 ,error ){if _fgdaf ==nil {return nil ,nil ;};_ebagd ,_bedfb :=_aff .GetArray (_fgdaf );
if !_bedfb {return nil ,nil ;};_ddcbb :=map[_eee .CharCode ]float64 {};_dbbd :=_ebagd .Len ();for _efdfd :=0;_efdfd < _dbbd -1;_efdfd ++{_abfbg :=_aff .TraceToDirectObject (_ebagd .Get (_efdfd ));_bbeb ,_fgcc :=_aff .GetIntVal (_abfbg );if !_fgcc {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_efdfd ,_abfbg );
};_efdfd ++;if _efdfd > _dbbd -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ebagd );};_feaf :=_aff .TraceToDirectObject (_ebagd .Get (_efdfd ));
switch _feaf .(type ){case *_aff .PdfObjectArray :_ddcgb ,_ :=_aff .GetArray (_feaf );if _fcdga ,_gadf :=_ddcgb .ToFloat64Array ();_gadf ==nil {for _bffe :=0;_bffe < len (_fcdga );_bffe ++{_ddcbb [_eee .CharCode (_bbeb +_bffe )]=_fcdga [_bffe ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_efdfd ,_feaf );
};case *_aff .PdfObjectInteger :_fdbfc ,_geac :=_aff .GetIntVal (_feaf );if !_geac {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_efdfd ,_feaf );
};_efdfd ++;if _efdfd > _dbbd -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ebagd );};_fccdd :=_ebagd .Get (_efdfd );_facfgb ,_dbefe :=_aff .GetNumberAsFloat (_fccdd );
if _dbefe !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_efdfd ,_fccdd );};for _eggb :=_bbeb ;_eggb <=_fdbfc ;
_eggb ++{_ddcbb [_eee .CharCode (_eggb )]=_facfgb ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_efdfd ,_feaf );
};};return _ddcbb ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _aff .PdfObjectName ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_fagf *PdfInfo )GetCustomInfo (name string )*_aff .PdfObjectString {var _abff *_aff .PdfObjectString ;if _fagf ._cgbc ==nil {return _abff ;};if _cgbg ,_abdde :=_fagf ._cgbc .Get (*_aff .MakeName (name )).(*_aff .PdfObjectString );_abdde {_abff =_cgbg ;
};return _abff ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bffb :=PdfColorCalGray (grayVal );return &_bffb ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dccde *PdfPageResources )HasFontByName (keyName _aff .PdfObjectName )bool {_ ,_bfead :=_dccde .GetFontByName (keyName );return _bfead ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_caac *PdfPage )AddExtGState (name _aff .PdfObjectName ,egs *_aff .PdfObjectDictionary )error {if _caac .Resources ==nil {_caac .Resources =NewPdfPageResources ();};if _caac .Resources .ExtGState ==nil {_caac .Resources .ExtGState =_aff .MakeDict ();
};_ceeaeg ,_abddg :=_aff .TraceToDirectObject (_caac .Resources .ExtGState ).(*_aff .PdfObjectDictionary );if !_abddg {_adg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aff .TraceToDirectObject (_caac .Resources .ExtGState ));
return _g .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ceeaeg .Set (name ,egs );return nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ege :=NewPdfAnnotation ();_edg :=&PdfAnnotationWidget {};_edg .PdfAnnotation =_ege ;_ege .SetContext (_edg );return _edg ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_fbgdg *PdfPage )GetPageDict ()*_aff .PdfObjectDictionary {_ddbbe :=_fbgdg ._bbdac ;_ddbbe .Clear ();_ddbbe .Set ("\u0054\u0079\u0070\u0065",_aff .MakeName ("\u0050\u0061\u0067\u0065"));_ddbbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbgdg .Parent );
if _fbgdg .LastModified !=nil {_ddbbe .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fbgdg .LastModified .ToPdfObject ());};if _fbgdg .Resources !=nil {_ddbbe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fbgdg .Resources .ToPdfObject ());
};if _fbgdg .CropBox !=nil {_ddbbe .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_fbgdg .CropBox .ToPdfObject ());};if _fbgdg .MediaBox !=nil {_ddbbe .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_fbgdg .MediaBox .ToPdfObject ());};if _fbgdg .BleedBox !=nil {_ddbbe .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_fbgdg .BleedBox .ToPdfObject ());
};if _fbgdg .TrimBox !=nil {_ddbbe .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_fbgdg .TrimBox .ToPdfObject ());};if _fbgdg .ArtBox !=nil {_ddbbe .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_fbgdg .ArtBox .ToPdfObject ());};_ddbbe .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_fbgdg .BoxColorInfo );
_ddbbe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fbgdg .Contents );if _fbgdg .Rotate !=nil {_ddbbe .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_aff .MakeInteger (*_fbgdg .Rotate ));};_ddbbe .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fbgdg .Group );
_ddbbe .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_fbgdg .Thumb );_ddbbe .SetIfNotNil ("\u0042",_fbgdg .B );_ddbbe .SetIfNotNil ("\u0044\u0075\u0072",_fbgdg .Dur );_ddbbe .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fbgdg .Trans );_ddbbe .SetIfNotNil ("\u0041\u0041",_fbgdg .AA );
_ddbbe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fbgdg .Metadata );_ddbbe .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fbgdg .PieceInfo );_ddbbe .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fbgdg .StructParents );
_ddbbe .SetIfNotNil ("\u0049\u0044",_fbgdg .ID );_ddbbe .SetIfNotNil ("\u0050\u005a",_fbgdg .PZ );_ddbbe .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_fbgdg .SeparationInfo );_ddbbe .SetIfNotNil ("\u0054\u0061\u0062\u0073",_fbgdg .Tabs );
_ddbbe .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_fbgdg .TemplateInstantiated );_ddbbe .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_fbgdg .PresSteps );_ddbbe .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_fbgdg .UserUnit );
_ddbbe .SetIfNotNil ("\u0056\u0050",_fbgdg .VP );if _fbgdg ._bbgb !=nil {_gfgccg :=_aff .MakeArray ();for _ ,_aeecf :=range _fbgdg ._bbgb {if _aefd :=_aeecf .GetContext ();_aefd !=nil {_gfgccg .Append (_aefd .ToPdfObject ());}else {_gfgccg .Append (_aeecf .ToPdfObject ());
};};if _gfgccg .Len ()> 0{_ddbbe .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gfgccg );};}else if _fbgdg .Annots !=nil {_ddbbe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_fbgdg .Annots );};return _ddbbe ;};func _baccc ()string {_aebda .Lock ();
defer _aebda .Unlock ();return _gabfb };func (_cbadb *PdfSignature )extractChainFromPKCS7 ()([]*_fb .Certificate ,error ){_bdfd ,_ceggb :=_feg .Parse (_cbadb .Contents .Bytes ());if _ceggb !=nil {return nil ,_ceggb ;};return _bdfd .Certificates ,nil ;};


// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_bfgbc *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ecfcb ,_cccce :=_aff .GetDict (_bfgbc ._cdccb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cccce {_ecfcb =_aff .MakeDict ();_bfgbc ._cdccb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ecfcb );
};_cafda ,_cccce :=_aff .GetDict (_ecfcb .Get (_aff .PdfObjectName (extName )));if !_cccce {_cafda =_aff .MakeDict ();_ecfcb .Set (_aff .PdfObjectName (extName ),_cafda );};if _abcd ,_ :=_aff .GetNameVal (_cafda .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_abcd !=baseVersion {_cafda .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_aff .MakeName (baseVersion ));};if _eddfc ,_ :=_aff .GetIntVal (_cafda .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_eddfc !=extLevel {_cafda .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_aff .MakeInteger (int64 (extLevel )));};};